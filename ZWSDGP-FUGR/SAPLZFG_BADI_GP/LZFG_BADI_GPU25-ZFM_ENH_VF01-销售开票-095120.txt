FUNCTION ZFM_ENH_VF01.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(BUDAT) TYPE  DATS DEFAULT SY-DATUM
*"  EXPORTING
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      T_XLIKP STRUCTURE  LIKPVB OPTIONAL
*"      T_YLIKP STRUCTURE  LIKP OPTIONAL
*"      T_XLIPS STRUCTURE  LIPSVB OPTIONAL
*"      T_YLIPS STRUCTURE  LIPSVB OPTIONAL
*"----------------------------------------------------------------------
  DATA: RETURN          TYPE TABLE OF BAPIRET1 WITH HEADER LINE,
        SUCCESS         TYPE TABLE OF BAPIVBRKSUCCESS WITH HEADER LINE,
        BILLINGDATAIN   TYPE TABLE OF BAPIVBRK WITH HEADER LINE,
        CONDITIONDATAIN TYPE TABLE OF BAPIKOMV WITH HEADER LINE,
        IT_LIPS         TYPE TABLE OF LIPS WITH HEADER LINE,
        IT_VBELN        TYPE TABLE OF LIPS_KEY WITH HEADER LINE.
  DATA:CREATORDATAIN TYPE BAPICREATORDATA,
       TABIX         TYPE SY-TABIX.
  CLEAR:RETURN[],SUCCESS[],BILLINGDATAIN[],CREATORDATAIN,
  CONDITIONDATAIN[],IT_VBELN[].

  CHECK T_XLIPS[] IS NOT INITIAL.

  ZFMDATASAVE1 'ZFM_ENH_VF01'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  CREATORDATAIN-CREATED_BY = SY-UNAME.
  CREATORDATAIN-CREATED_ON = SY-DATUM.
  LOOP AT T_XLIPS.
    CLEAR:IT_VBELN.
    IT_VBELN-VBELN = T_XLIPS-VBELN.
    IT_VBELN-POSNR = T_XLIPS-POSNR.
    COLLECT IT_VBELN.
  ENDLOOP.
*计算折弯件单价
  CALL FUNCTION 'ZFM_ENH_CALZZWJZJ'
    TABLES
      T_VBELV = IT_VBELN
      T_LIPS  = IT_LIPS.
  DELETE IT_LIPS WHERE ZZWJZJ IS INITIAL.
  SORT IT_LIPS BY VBELN POSNR.
*将金额汇总到交货单
  LOOP AT T_XLIPS.
    CLEAR:BILLINGDATAIN,CONDITIONDATAIN.
    TABIX = SY-TABIX.
    BILLINGDATAIN-DOC_NUMBER = T_XLIPS-VGBEL.
    BILLINGDATAIN-REF_DOC = T_XLIPS-VBELN.
    BILLINGDATAIN-BILL_DATE = BUDAT.
    BILLINGDATAIN-REF_DOC_CA = 'J' .
    APPEND BILLINGDATAIN.
    SELECT SINGLE COUNT(*)
      FROM MARA
      WHERE MATNR = T_XLIPS-MATNR
      AND   MATKL IN ('B0201','B0202','B0203','B0204').
    IF SY-SUBRC EQ 0.
      READ TABLE IT_LIPS WITH KEY VBELN = T_XLIPS-VBELN
                                  POSNR = T_XLIPS-POSNR
                                  BINARY SEARCH.
      IF SY-SUBRC EQ 0
        AND IT_LIPS-LFIMG GT 0.
        CONDITIONDATAIN-DATA_INDEX = TABIX.
        CONDITIONDATAIN-COND_TYPE = 'ZPR2'.
        CONDITIONDATAIN-COND_VALUE = IT_LIPS-ZZWJZJ / IT_LIPS-LFIMG.
*      CONDITIONDATAIN-COND_CURR = ''.
*      CONDITIONDATAIN-COND_P_UNT = ''.
*      CONDITIONDATAIN-COND_D_UNT = ''.
        APPEND CONDITIONDATAIN.
      ENDIF.
    ENDIF.
  ENDLOOP.

  SET UPDATE TASK LOCAL.
  CALL FUNCTION 'BAPI_BILLINGDOC_CREATEMULTIPLE'
    EXPORTING
      CREATORDATAIN   = CREATORDATAIN
    TABLES
      BILLINGDATAIN   = BILLINGDATAIN
      RETURN          = RETURN
      SUCCESS         = SUCCESS
      CONDITIONDATAIN = CONDITIONDATAIN
    EXCEPTIONS
      OTHERS          = 1.
  IF SY-SUBRC NE 0.
    RTMSG = 'E:FAIL'.
    ZFMDATASAVE2 'R'.
    EXIT.
  ENDIF.
  LOOP AT RETURN WHERE TYPE CA 'AEX'.
    CONCATENATE RETURN-MESSAGE RTMSG INTO RTMSG.
  ENDLOOP.
  IF SY-SUBRC EQ 0.
    CONCATENATE 'E:' RTMSG INTO RTMSG.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
  ELSE.
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = 'X'.
*更新折弯件价格
    IF CONDITIONDATAIN[] IS NOT INITIAL.
      CALL FUNCTION 'ZFM_ENH_UPDLIPS' IN UPDATE TASK
        TABLES
          T_LIPS = IT_LIPS.
      COMMIT WORK.
    ENDIF.
    READ TABLE SUCCESS INDEX 1.
    IF SUCCESS-BILL_DOC IS INITIAL.
      RTMSG = 'E:FAIL'.
    ELSE.
      CONCATENATE 'S:' SUCCESS-BILL_DOC INTO RTMSG.
    ENDIF.
  ENDIF.
  ZFMDATASAVE2 'R'.
ENDFUNCTION.
