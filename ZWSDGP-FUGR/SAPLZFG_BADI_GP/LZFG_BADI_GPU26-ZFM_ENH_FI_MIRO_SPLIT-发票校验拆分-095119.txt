FUNCTION ZFM_ENH_FI_MIRO_SPLIT.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  TABLES
*"      T_ACCHD STRUCTURE  ACCHD
*"      T_ACCIT STRUCTURE  ACCIT
*"      T_ACCCR STRUCTURE  ACCCR
*"----------------------------------------------------------------------
  DATA:BEGIN OF IT_HZSUM OCCURS 0,
         EBELN      TYPE EBELN,
         PRCTR      TYPE PRCTR,
         CURTP      TYPE ACCCR-CURTP,
         WRBTR      TYPE BSEG-WRBTR,
         WRBTR6(15) TYPE P DECIMALS 6,
       END OF IT_HZSUM,
       BEGIN OF IT_WRBTRSUM OCCURS 0,
         CURTP TYPE ACCCR-CURTP,
         WRBTR TYPE ACCCR-WRBTR,
       END OF IT_WRBTRSUM,
       WA_ACCIT  TYPE ACCIT,
       IT_HZSUM1 LIKE TABLE OF IT_HZSUM WITH HEADER LINE,
       IT_ACCCR  TYPE TABLE OF ACCCR WITH HEADER LINE,
       IT_ACCIT  TYPE TABLE OF ACCIT WITH HEADER LINE.
  DATA:COUNT  TYPE I,
       FH     TYPE I,
       TABIX  TYPE SY-TABIX,
       TABIX1 TYPE SY-TABIX,
       KBETR  TYPE KBETR,
       WRBTR1 TYPE WRBTR,
       WRBTR2 TYPE WRBTR,
       POSNR  TYPE ACCIT-POSNR,
       POSNR1 TYPE ACCIT-POSNR.
  CLEAR:ACCIT,COUNT,IT_HZSUM[],WA_ACCIT,POSNR,IT_ACCIT[],
  POSNR1,IT_ACCCR[],FH,IT_WRBTRSUM[],IT_HZSUM1[].
*  IF SY-UNAME = 'DONGPZ'
*    OR SY-UNAME = 'LIUZHENG'.
  LOOP AT T_ACCIT.
    CLEAR:IT_HZSUM.
    IF T_ACCIT-KOART = 'K'.
      COUNT = COUNT + 1.
    ELSE.
*先将非K非税的行按照税率换算金额后汇总
      IF T_ACCIT-KTOSL NE 'VST'.
*获取税码对应的税率
        PERFORM GETTAX(ZPUBFORM) USING '' T_ACCIT-MWSKZ CHANGING KBETR.
        IT_HZSUM-EBELN = T_ACCIT-EBELN.
        IT_HZSUM-PRCTR = T_ACCIT-PRCTR.
        LOOP AT T_ACCCR WHERE POSNR = T_ACCIT-POSNR.
          IT_HZSUM-CURTP = T_ACCCR-CURTP.
          IT_HZSUM-WRBTR6 = ABS( T_ACCCR-WRBTR * ( 1 + KBETR ) ).
          COLLECT IT_HZSUM.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDLOOP.
  LOOP AT IT_HZSUM.
    IT_HZSUM-WRBTR = IT_HZSUM-WRBTR6.
    MODIFY IT_HZSUM.
  ENDLOOP.
  IT_HZSUM1[] = IT_HZSUM[].
  SORT IT_HZSUM1 BY EBELN PRCTR.
  SORT IT_HZSUM BY EBELN PRCTR CURTP.
  DELETE ADJACENT DUPLICATES FROM IT_HZSUM1
  COMPARING EBELN PRCTR.
  READ TABLE T_ACCIT INTO ACCIT WITH KEY KOART = 'K'.
  IF SY-SUBRC EQ 0.
    IF COUNT = 1
      AND ACCIT-AWTYP = 'RMRP'.
    ELSE.
      EXIT.
    ENDIF.
*确认最大行
    CLEAR:IT_ACCIT.
    IT_ACCIT[] = T_ACCIT[].
    SORT IT_ACCIT BY POSNR DESCENDING.
    READ TABLE IT_ACCIT INDEX 1.
    POSNR = IT_ACCIT-POSNR.
*记录对应行金额-将需要被拆分行金额记录
    LOOP AT T_ACCCR WHERE POSNR = ACCIT-POSNR.
      CLEAR:IT_ACCCR.
      APPEND T_ACCCR TO IT_ACCCR.
      IF T_ACCCR-WRBTR GE 0.
        FH = 1.
      ELSE.
        FH = '-1'.
      ENDIF.
    ENDLOOP.
*拆分
    CLEAR:IT_ACCIT[].
    LOOP AT IT_HZSUM1.
      CLEAR:T_ACCIT.
      TABIX = SY-TABIX.
      IF TABIX = 1.
*原行数据替代
        READ TABLE T_ACCIT WITH KEY POSNR = ACCIT-POSNR.
        IF SY-SUBRC EQ 0.
          TABIX1 = SY-TABIX.
          T_ACCIT-ZUONR = IT_HZSUM1-EBELN.
          SELECT SINGLE SEGMENT
            INTO T_ACCIT-SEGMENT
            FROM CEPC
            WHERE PRCTR = IT_HZSUM1-PRCTR
            AND   KOKRS = 'WISD'.
          MODIFY T_ACCIT INDEX TABIX1 TRANSPORTING ZUONR SEGMENT.
        ENDIF.
      ELSE.
        POSNR = POSNR + 1.
        T_ACCIT = ACCIT.
        T_ACCIT-POSNR = POSNR.
        T_ACCIT-ZUONR = IT_HZSUM1-EBELN.
        SELECT SINGLE SEGMENT
          INTO T_ACCIT-SEGMENT
          FROM CEPC
          WHERE PRCTR = IT_HZSUM1-PRCTR
          AND   KOKRS = 'WISD'.
        APPEND T_ACCIT.
      ENDIF.
*金额的分别修改
      LOOP AT IT_HZSUM WHERE EBELN = IT_HZSUM1-EBELN
                         AND PRCTR = IT_HZSUM1-PRCTR.
        IF TABIX EQ 1."第一行不拆入，代表原行
*改原行金额
          LOOP AT T_ACCCR WHERE POSNR = ACCIT-POSNR
                            AND CURTP = IT_HZSUM-CURTP.
            CLEAR:IT_WRBTRSUM.
            T_ACCCR-WRBTR = IT_HZSUM-WRBTR * FH.
            MODIFY T_ACCCR TRANSPORTING WRBTR.
            IT_WRBTRSUM-CURTP = T_ACCCR-CURTP.
            IT_WRBTRSUM-WRBTR = T_ACCCR-WRBTR.
            COLLECT IT_WRBTRSUM.
          ENDLOOP.
        ELSE.
*向金额结构中插入-分别汇总各行每个货币的金额，方便最后挤差
          LOOP AT IT_ACCCR WHERE CURTP = IT_HZSUM-CURTP.
            CLEAR:T_ACCCR,IT_WRBTRSUM.
            T_ACCCR = IT_ACCCR.
            T_ACCCR-POSNR = POSNR.
            T_ACCCR-WRBTR = IT_HZSUM-WRBTR * FH.
            APPEND T_ACCCR.
            IT_WRBTRSUM-CURTP = T_ACCCR-CURTP.
            IT_WRBTRSUM-WRBTR = T_ACCCR-WRBTR.
            COLLECT IT_WRBTRSUM.
          ENDLOOP.
        ENDIF.
      ENDLOOP.
    ENDLOOP.
*将分配字段替代
    LOOP AT T_ACCIT WHERE KOART NE 'K'
                      AND EBELN IS NOT INITIAL.
      T_ACCIT-ZUONR = T_ACCIT-EBELN.
      MODIFY T_ACCIT TRANSPORTING ZUONR.
    ENDLOOP.
    CLEAR:IT_ACCIT[],KBETR.
    SORT IT_WRBTRSUM BY CURTP.
*将差额随机写入第一行
    LOOP AT IT_ACCCR.
      CLEAR:KBETR,WRBTR1,WRBTR2.
      READ TABLE IT_WRBTRSUM WITH KEY CURTP = IT_ACCCR-CURTP BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        WRBTR1 = IT_ACCCR-WRBTR."原金额
        WRBTR2 = IT_WRBTRSUM-WRBTR."计算后汇总金额
        KBETR = WRBTR1 - WRBTR2.
        IF KBETR IS INITIAL.
          CONTINUE.
        ENDIF.
*将金额加到K行
        READ TABLE T_ACCCR WITH KEY POSNR = IT_ACCCR-POSNR
                                    CURTP = IT_ACCCR-CURTP.
        IF SY-SUBRC EQ 0.
          TABIX = SY-TABIX.
          T_ACCCR-WRBTR = T_ACCCR-WRBTR + KBETR.
          MODIFY T_ACCCR INDEX TABIX TRANSPORTING WRBTR.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDIF.
*  ENDIF.

*ZFM_FI_ENHANCEMENT_GP中有将XKRES、XOPVW赋值X的逻辑
ENDFUNCTION.
