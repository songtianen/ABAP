FUNCTION ZFM_GP_SD_OA_FLXSHTCJ .
*"----------------------------------------------------------------------
*"*"本地接口：
*"  EXPORTING
*"     VALUE(FLAG) TYPE  ZEMM_FLAG
*"     VALUE(MESSAGE) TYPE  ZEMM_MESSAGE
*"  TABLES
*"      IN_HEAD STRUCTURE  ZSSD233
*"      IN_ITEM STRUCTURE  ZSSD234
*"----------------------------------------------------------------------

  ZFMDATASAVE1 'ZFM_GP_SD_ERP_MWCLTB'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  DEFINE CHECKINITIAL.
    IF &1 IS INITIAL.
      FLAG = 'N'.
      MESSAGE = &2 && '为空'.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.
  END-OF-DEFINITION.

  DATA :SALES_HEADER_IN      TYPE BAPISDHD1,
        SALES_HEADER_INX     TYPE BAPISDHD1X,
        ORDER_HEADER_IN      TYPE BAPISDH1,
        ORDER_HEADER_INX     TYPE BAPISDH1X,
        SALESDOCUMENT_EX     TYPE BAPIVBELN-VBELN,
        SALES_TEXT           TYPE TABLE OF BAPISDTEXT WITH HEADER LINE,
        IT_KNVP              TYPE TABLE OF KNVP WITH HEADER LINE,
        RETURN               TYPE STANDARD TABLE OF BAPIRET2 WITH HEADER LINE,
        SALES_ITEMS_IN       TYPE STANDARD TABLE OF BAPISDITM WITH HEADER LINE,
        SALES_ITEMS_INX      TYPE STANDARD TABLE OF BAPISDITMX WITH HEADER LINE,
        SALES_PARTNERS       TYPE STANDARD TABLE OF BAPIPARNR WITH HEADER LINE,
        SALES_SCHEDULES_IN   TYPE STANDARD TABLE OF BAPISCHDL WITH HEADER LINE,
        SALES_SCHEDULES_INX  TYPE STANDARD TABLE OF BAPISCHDLX WITH HEADER LINE,
        SALES_CONDITIONS_IN  TYPE STANDARD TABLE OF BAPICOND WITH HEADER LINE,
        SALES_CONDITIONS_INX TYPE STANDARD TABLE OF BAPICONDX WITH HEADER LINE,
        EXTENSIONIN          TYPE TABLE OF BAPIPAREX WITH HEADER LINE,
        EXTENSIONEX          TYPE TABLE OF BAPIPAREX WITH HEADER LINE.
  DATA:
    ORDER_HEADER    TYPE BAPISDH1,
    ORDER_HEADERX   TYPE BAPISDH1X,
    SALESDOCUMENT   TYPE BAPIVBELN-VBELN,
    ORDER_ITEM_IN   TYPE TABLE OF BAPISDITM  WITH HEADER LINE,
    ORDER_ITEM_INX  TYPE TABLE OF BAPISDITMX WITH HEADER LINE,
    SCHEDULE_LINES  TYPE TABLE OF BAPISCHDL  WITH HEADER LINE,
    SCHEDULE_LINESX TYPE TABLE OF BAPISCHDLX WITH HEADER LINE,
    ORDER_TEXT      TYPE TABLE OF BAPISDTEXT WITH HEADER LINE,
    CONDITIONS_IN   TYPE TABLE OF BAPICOND   WITH HEADER LINE,
    CONDITIONS_INX  TYPE TABLE OF BAPICONDX  WITH HEADER LINE,
    EXTENSION       TYPE TABLE OF BAPIPAREX  WITH HEADER LINE.

  DATA: WA_EXTK  TYPE BAPE_VBAK,
        WA_EXTKX TYPE BAPE_VBAKX,
        WA_EXTP  TYPE BAPE_VBAP,
        WA_EXTPX TYPE BAPE_VBAPX,
        SUBRC    TYPE SY-SUBRC,
        POSNR    TYPE POSNR,
        MES      TYPE STRING.
**********************************
  DATA: AUART TYPE VBAK-AUART VALUE 'ZSO',
        VKORG TYPE VBAK-VKORG,
        AUGRU TYPE VBAK-AUGRU VALUE '001',
*        BSTKD TYPE VBKD-BSTKD VALUE 'FLXSHTCJ',
        SPART TYPE VBAK-SPART VALUE '00',
        VKGRP TYPE VBAK-VKGRP,
        VTWEG TYPE VBAK-VTWEG,
        WERKS TYPE VBAP-WERKS,
        VKBUR TYPE VBAK-VKBUR.
  DATA: IT_VBELN TYPE TABLE OF BAPIVBELN WITH HEADER LINE,
        RTYPE    TYPE  BAPI_MTYPE,
        RTMSG    TYPE  BAPI_MSG.
  IF LINES( IN_HEAD[] ) <> '1' .
    FLAG = 'N' .
    MESSAGE = '只允许创建一个废料合同！' .
    ZFMDATASAVE2 'R'.
    RETURN .
  ENDIF.

  IF IN_ITEM[] IS INITIAL .
    FLAG = 'N' .
    MESSAGE = '废料合同无明细！' .
    ZFMDATASAVE2 'R'.
    RETURN .
  ENDIF.

  LOOP AT IN_HEAD .
    CHECKINITIAL IN_HEAD-WERKS   '订单类型          ' .
    CHECKINITIAL IN_HEAD-ERNAM   '分销渠道          ' .
    CHECKINITIAL IN_HEAD-KUNNR   '客户              ' .
    CHECKINITIAL IN_HEAD-ZYWY    '业务员            ' .
  ENDLOOP.

  LOOP AT IN_ITEM .
    MES = '第' && SY-TABIX && '行，' && '物料编码           ' .
    CHECKINITIAL IN_ITEM-MATNR       MES .
    MES = '第' && SY-TABIX && '行，' && '数量               ' .
    CHECKINITIAL IN_ITEM-KWMENG      MES .
    MES = '第' && SY-TABIX && '行，' && '单位               ' .
    CHECKINITIAL IN_ITEM-VRKME       MES .
    MES = '第' && SY-TABIX && '行，' && '单价         ' .
    CHECKINITIAL IN_ITEM-ZDJ         MES .
  ENDLOOP.

  CLEAR  : SALES_HEADER_IN        .
  CLEAR  : SALES_HEADER_INX       .
  CLEAR  : SALESDOCUMENT_EX       .
  CLEAR  : RETURN                 ,    RETURN[]               .
  CLEAR  : SALES_ITEMS_IN         ,    SALES_ITEMS_IN[]       .
  CLEAR  : SALES_ITEMS_INX        ,    SALES_ITEMS_INX[]      .
  CLEAR  : SALES_PARTNERS         ,    SALES_PARTNERS[]       .
  CLEAR  : SALES_SCHEDULES_IN     ,    SALES_SCHEDULES_IN[]   .
  CLEAR  : SALES_SCHEDULES_INX    ,    SALES_SCHEDULES_INX[]  .
  CLEAR  : SALES_CONDITIONS_IN    ,    SALES_CONDITIONS_IN[]  .
  CLEAR  : SALES_CONDITIONS_INX   ,    SALES_CONDITIONS_INX[] .
  CLEAR  : SALES_TEXT             ,    SALES_TEXT[]           .
  CLEAR  : EXTENSIONIN            ,    EXTENSIONIN[]          .

  "抬头
  READ TABLE IN_HEAD INDEX 1.
  SELECT SINGLE
     VKORG
     VTWEG
     WERKS
    INTO (VKORG,VTWEG,WERKS)
    FROM ZTSD204
    WHERE WERKS = IN_HEAD-WERKS.


  SALES_HEADER_IN-DOC_TYPE   = AUART ."订单类型
  SALES_HEADER_IN-SALES_ORG  = VKORG ."销售组织
  SALES_HEADER_IN-ORD_REASON = AUGRU ."补差原因
  SALES_HEADER_IN-PURCH_NO_C = IN_HEAD-BSTKD ."外部合同号
  SALES_HEADER_IN-DIVISION   = SPART ."产品组
*  SALES_HEADER_IN-SALES_GRP  = VKGRP ."销售组
  SALES_HEADER_IN-DISTR_CHAN = VTWEG ."分销渠道
*  SALES_HEADER_IN-SALES_OFF  = VKBUR ."销售办事处
  PERFORM SETBAPIX(ZPUBFORM) USING SALES_HEADER_IN CHANGING SALES_HEADER_INX.

  "合作伙伴
  SALES_PARTNERS-PARTN_ROLE = 'AG'.
  SALES_PARTNERS-PARTN_NUMB = IN_HEAD-KUNNR.
  PERFORM ADDZERO(ZPUBFORM) CHANGING SALES_PARTNERS-PARTN_NUMB.
  APPEND SALES_PARTNERS.
  CLEAR SALES_PARTNERS.
*增强字段
  CLEAR WA_EXTK.
  WA_EXTK-ZYWY = IN_HEAD-ZYWY .
  CLEAR:EXTENSIONIN.
  EXTENSIONIN-STRUCTURE = 'BAPE_VBAK'.
  CALL METHOD CL_ABAP_CONTAINER_UTILITIES=>FILL_CONTAINER_C
    EXPORTING
      IM_VALUE     = WA_EXTK
    IMPORTING
      EX_CONTAINER = EXTENSIONIN-VALUEPART1.
  CALL METHOD CL_ABAP_CONTAINER_UTILITIES=>FILL_CONTAINER_C
    EXPORTING
      IM_VALUE     = WA_EXTK+240
    IMPORTING
      EX_CONTAINER = EXTENSIONIN-VALUEPART2.
  CALL METHOD CL_ABAP_CONTAINER_UTILITIES=>FILL_CONTAINER_C
    EXPORTING
      IM_VALUE     = WA_EXTK+480
    IMPORTING
      EX_CONTAINER = EXTENSIONIN-VALUEPART3.
  CALL METHOD CL_ABAP_CONTAINER_UTILITIES=>FILL_CONTAINER_C
    EXPORTING
      IM_VALUE     = WA_EXTK+720
    IMPORTING
      EX_CONTAINER = EXTENSIONIN-VALUEPART4.
  APPEND EXTENSIONIN.
  CLEAR:EXTENSIONIN.
  PERFORM SETBAPIX(ZPUBFORM) USING WA_EXTK CHANGING WA_EXTKX.
  EXTENSIONIN-STRUCTURE = 'BAPE_VBAKX'.
  EXTENSIONIN-VALUEPART1 = WA_EXTKX.
  APPEND EXTENSIONIN.
**********************************
  "行项目
  POSNR = 0 .
  LOOP AT IN_ITEM .
    CLEAR:SALES_ITEMS_IN,SALES_ITEMS_INX,SALES_SCHEDULES_IN,SALES_SCHEDULES_INX .
    ADD 10 TO POSNR.
    SALES_ITEMS_IN-ITM_NUMBER     = POSNR.
    SALES_ITEMS_IN-MATERIAL       = IN_ITEM-MATNR.
    PERFORM ADDZERO(ZPUBFORM) CHANGING SALES_ITEMS_IN-MATERIAL.
    SALES_ITEMS_IN-TARGET_QTY     = IN_ITEM-KWMENG.
    SALES_ITEMS_IN-TARGET_QU      = IN_ITEM-VRKME.
    SALES_ITEMS_IN-SALES_UNIT     = IN_ITEM-VRKME.
    PERFORM TRANSUNIT_TO_INSIDE(ZPUBFORM) CHANGING SALES_ITEMS_IN-TARGET_QU.
    PERFORM TRANSUNIT_TO_INSIDE(ZPUBFORM) CHANGING SALES_ITEMS_IN-SALES_UNIT.
    SALES_ITEMS_IN-PLANT          =  WERKS.
    SALES_ITEMS_IN-REF_DOC_CA     =  ''. "G
    PERFORM SETBAPIX(ZPUBFORM) USING SALES_ITEMS_IN CHANGING SALES_ITEMS_INX.
    APPEND: SALES_ITEMS_IN,SALES_ITEMS_INX.
    "计划行
    SALES_SCHEDULES_IN-ITM_NUMBER = POSNR ."
    SALES_SCHEDULES_IN-SCHED_LINE = '0001'."
    SALES_SCHEDULES_IN-REQ_QTY    = IN_ITEM-KWMENG.
    SALES_SCHEDULES_IN-REQ_DATE   = SY-DATUM .
    PERFORM SETBAPIX(ZPUBFORM) USING SALES_SCHEDULES_IN CHANGING SALES_SCHEDULES_INX.
    APPEND: SALES_SCHEDULES_IN,SALES_SCHEDULES_INX.

    CLEAR SALES_CONDITIONS_IN.
    SALES_CONDITIONS_IN-ITM_NUMBER = POSNR.
    SALES_CONDITIONS_IN-COND_TYPE  = 'ZPR0'.
    SALES_CONDITIONS_IN-COND_VALUE = IN_ITEM-ZDJ.
    SALES_CONDITIONS_IN-CURRENCY   = 'CNY'.
    PERFORM SETBAPIX(ZPUBFORM) USING SALES_CONDITIONS_IN CHANGING SALES_CONDITIONS_INX.
    APPEND:SALES_CONDITIONS_IN,SALES_CONDITIONS_INX.

  ENDLOOP.
**********************************

  SET UPDATE TASK LOCAL.
  CALL FUNCTION 'SD_SALESDOCUMENT_CREATE'
    EXPORTING
      SALES_HEADER_IN      = SALES_HEADER_IN
      SALES_HEADER_INX     = SALES_HEADER_INX
    IMPORTING
      SALESDOCUMENT_EX     = SALESDOCUMENT_EX
    TABLES
      RETURN               = RETURN
      SALES_ITEMS_IN       = SALES_ITEMS_IN
      SALES_ITEMS_INX      = SALES_ITEMS_INX
      SALES_PARTNERS       = SALES_PARTNERS
      SALES_SCHEDULES_IN   = SALES_SCHEDULES_IN
      SALES_SCHEDULES_INX  = SALES_SCHEDULES_INX
      SALES_CONDITIONS_IN  = SALES_CONDITIONS_IN
      SALES_CONDITIONS_INX = SALES_CONDITIONS_INX
      SALES_TEXT           = SALES_TEXT
      EXTENSIONIN          = EXTENSIONIN
    EXCEPTIONS
      OTHERS               = 1.

  IF SY-SUBRC NE 0.
    PERFORM MSGTOTEXT(ZPUBFORM) USING '' '' '' '' '' '' CHANGING MESSAGE.
    ADD SY-SUBRC TO SUBRC.
  ENDIF.
  LOOP AT RETURN WHERE TYPE CA 'AEX'.
    CONCATENATE RETURN-MESSAGE MESSAGE INTO MESSAGE SEPARATED BY '/'.
  ENDLOOP.
  IF SY-SUBRC EQ 0.
    ADD 4 TO SUBRC.
  ENDIF.

  IF SUBRC = 0 AND SALESDOCUMENT_EX IS NOT INITIAL.
    PERFORM BAPIRUN(ZPUBFORM)  USING 'S'.
*    FLAG = 'Y'.
*    CONCATENATE '创建废料销售合同成功，单号：'  SALESDOCUMENT_EX INTO MESSAGE.
  ELSE.
    PERFORM BAPIRUN(ZPUBFORM) USING 'E'.

    FLAG = 'N'.
    ZFMDATASAVE2 'R'.
    RETURN .
*        PERFORM SHOWMSG(ZPUBFORM) TABLES RETURN.
  ENDIF.

  DO 100 TIMES.
    SELECT SINGLE
      VBELN
      INTO @DATA(VBELN)
      FROM VBAK
      WHERE VBELN = @SALESDOCUMENT_EX
      .
    IF SY-SUBRC <> 0.
      WAIT UP TO '0.1' SECONDS .
    ENDIF.
  ENDDO.
  CLEAR:IT_VBELN,IT_VBELN[].
  IT_VBELN-VBELN = SALESDOCUMENT_EX.
  APPEND IT_VBELN.
  RTMSG = 'SO'.
  PERFORM SDVF01(ZPUBFORM) TABLES IT_VBELN
    USING SY-DATUM
    CHANGING RTMSG.
  IF RTMSG+0(1) = 'S'.
  ELSE.
    FLAG = 'N'.
    MESSAGE = RTMSG.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  FLAG = 'Y'.
  MESSAGE = '处理成功'.
  ZFMDATASAVE2 'R'.


ENDFUNCTION.
