FUNCTION ZFM_GP_SD_OA_XSBCSQ.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(VBELN) TYPE  VBELN
*"     VALUE(P_NAME) TYPE  STRING
*"  EXPORTING
*"     VALUE(FLAG) TYPE  ZEMM_FLAG
*"     VALUE(MESSAGE) TYPE  ZEMM_MESSAGE
*"     VALUE(P_RESULT) TYPE  STRING
*"     VALUE(P_STATUS) TYPE  I
*"     VALUE(P_OUTPUT) TYPE  STRING
*"  TABLES
*"      INTAB1 STRUCTURE  ZSSD203 OPTIONAL
*"      INTAB2 STRUCTURE  ZSSD204 OPTIONAL
*"----------------------------------------------------------------------
  ZFMDATASAVE1 'ZFM_GP_SD_OA_XSBCSQ'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  TYPES : BEGIN OF ZSTTXXTOCHAR,
            VBELN   TYPE VBELN,
            AUART   TYPE AUART,
            ZDDLXMS TYPE TVAKT_BEZEI,
            POSID   TYPE PS_POSID,
            POST1   TYPE PS_POST1,
            KUNNR   TYPE KUNNR,
            ZKHMS   TYPE NAME1,
            VKORG   TYPE VKORG,
            ZXSZZMS TYPE BEZEI20,
            AUGRU   TYPE AUGRU,
            ZDDYYMS TYPE CHAR20,
            VTWEG   TYPE VTWEG,
            ZFXQDMS TYPE VTXTK,
            ZZJ     TYPE CHAR20,
            ZWSJE   TYPE CHAR20,
            ERNAM   TYPE ERNAM,
            ERDAT   TYPE ERDAT,
            ERZET   TYPE ERZET,
            ZGKYJ   TYPE ZE_CLYJ,
            ZYWY    TYPE ZE_ZYWY,
            VKGRP   TYPE VKGRP,
            ZYWBM   TYPE BEZEI20,
            ZBZ     TYPE CHAR200,
          END OF ZSTTXXTOCHAR.
  TYPES : BEGIN OF ZSMXXXTOCHAR,
            ZXH    TYPE CHAR3,
            POSNR  TYPE POSNR,
            ZCKDH  TYPE VBELN,
            ZZL1   TYPE MARA-ZZL1,
            ZGUIGE TYPE ZESD_GUIGE,
            KWMENG TYPE CHAR20,
            MEINS  TYPE CHAR10,
*            CMPRE  TYPE CHAR20,
            CMPRE  TYPE CMPRE,
            KZWI1  TYPE CHAR20,
            ZSL    TYPE CHAR20,
            ZSE    TYPE CHAR20,
            WERKS  TYPE WERKS_D,
            LGORT  TYPE VBAP-LGORT,
            LGOBE  TYPE T001L-LGOBE,
            ZKHJE  TYPE CHAR20,
          END OF ZSMXXXTOCHAR.


  DATA:BEGIN OF WA_INPUT1,
         INTAB1 TYPE TABLE OF ZSTTXXTOCHAR,
         INTAB2 TYPE TABLE OF ZSMXXXTOCHAR,
       END OF WA_INPUT1,
       BEGIN OF WA_INPUT,
         DATA LIKE WA_INPUT1,
       END OF WA_INPUT,
       BEGIN OF WA_OUTPUT1,
         FLAG    TYPE ZEMM_FLAG,
         MESSAGE TYPE ZEMM_MESSAGE,
       END OF WA_OUTPUT1,
       BEGIN OF WA_OUTPUT,
         DATA LIKE WA_OUTPUT1,
       END OF WA_OUTPUT.

  DATA : GT_TTXX TYPE TABLE OF ZSTTXXTOCHAR WITH HEADER LINE,
         GT_MXXX TYPE TABLE OF ZSMXXXTOCHAR WITH HEADER LINE.

  DATA : ZZJ   TYPE KZWI1,
         ZWSJE TYPE NETWR.
  DATA : VBELNPOSNR TYPE TDOBNAME.
  IF VBELN IS INITIAL.
    FLAG = 'N'.
    MESSAGE = '补差单号未输入！' .
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SELECT
     VBAK~VBELN,
     VBAK~AUART,
     TVAKT~BEZEI AS ZDDLXMS,
     VBAK~VKORG,
     TVKOT~VTEXT AS ZXSZZMS,
     VBAK~KUNNR,
     KNA1~NAME1 AS ZKHMS,
     VBAK~AUGRU,
     TVAUT~BEZEI AS ZDDYYMS,
     VBAK~VTWEG,
     TVTWT~VTEXT AS ZFXQDMS,
     VBAK~VKGRP,
     TVGRT~BEZEI AS ZYWBM,
     VBAK~ERNAM,
     VBAK~ERDAT,
     VBAK~ERZET,
     VBAK~ZYWY,
     PRPS~POSID,
     PRPS~POST1,
     VBAK~NETWR
    INTO TABLE @DATA(IT_VBAK)
    FROM VBAK
    INNER JOIN KNA1  ON KNA1~KUNNR  = VBAK~KUNNR
    LEFT  JOIN TVAKT ON VBAK~AUART  = TVAKT~AUART AND TVAKT~SPRAS = @SY-LANGU
    LEFT  JOIN TVAUT ON VBAK~AUGRU  = TVAUT~AUGRU AND TVAUT~SPRAS = @SY-LANGU
    LEFT  JOIN TVKOT ON VBAK~VKORG  = TVKOT~VKORG AND TVKOT~SPRAS = @SY-LANGU
    LEFT  JOIN TVGRT ON TVGRT~VKGRP = VBAK~VKGRP  AND TVGRT~SPRAS = @SY-LANGU
    LEFT  JOIN TVTWT ON TVTWT~VTWEG = VBAK~VTWEG  AND TVTWT~SPRAS = @SY-LANGU
    LEFT  JOIN PRPS  ON PRPS~PSPNR  = VBAK~PS_PSP_PNR" AND PRPS~STUFE = '1'
    WHERE VBAK~VBELN = @VBELN
     AND ( VBAK~VBTYP = 'L' OR VBAK~VBTYP = 'K' )
     .

  IF SY-SUBRC <> 0 .
    FLAG = 'N'.
    MESSAGE = '补差单号未查询到！' .
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SELECT
      VBAK~VBELN,
      VBAK~KNUMV,
      VBAP~POSNR,
      VBAP~WERKS,
      VBAP~MATNR,
      VBAP~LGORT,
      T001L~LGOBE,
      MARA~ZZL1,
      VBAP~KWMENG,
      VBAP~MEINS,
      VBAP~KZWI1,
      VBAP~VGBEL AS ZCKDH
    INTO TABLE @DATA(IT_VBAP)
    FROM VBAP
    INNER JOIN VBAK  ON VBAK~VBELN = VBAP~VBELN
    INNER JOIN MARA  ON MARA~MATNR = VBAP~MATNR
    LEFT  JOIN T001L ON VBAP~WERKS  = T001L~WERKS AND VBAP~LGORT  = T001L~LGORT
    WHERE VBAP~VBELN = @VBELN
     .
  IF SY-SUBRC <> 0 .
    FLAG = 'N'.
    MESSAGE = '补差单号未查询到！' .
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SORT IT_VBAP BY KNUMV POSNR.

  SELECT
    PRCD_ELEMENTS~KNUMV,
    PRCD_ELEMENTS~KPOSN,
    PRCD_ELEMENTS~STUNR,
    PRCD_ELEMENTS~ZAEHK,
    PRCD_ELEMENTS~KSCHL,
    PRCD_ELEMENTS~KBETR,
    PRCD_ELEMENTS~KWERT,
    PRCD_ELEMENTS~KPEIN
    INTO TABLE @DATA(IT_SLXX)
    FROM PRCD_ELEMENTS
    FOR ALL ENTRIES IN @IT_VBAP
    WHERE PRCD_ELEMENTS~KNUMV = @IT_VBAP-KNUMV
     AND  PRCD_ELEMENTS~KPOSN = @IT_VBAP-POSNR
*     AND  PRCD_ELEMENTS~KINAK <> 'X'
*     AND  PRCD_ELEMENTS~KINAK <> 'M'
     AND  PRCD_ELEMENTS~KINAK = ''
     AND  PRCD_ELEMENTS~KSCHL IN ( 'ZPR0' , 'MWSI' , 'NETW'  )
     .

  SORT IT_SLXX BY KNUMV KPOSN KSCHL .
  SORT IT_VBAP BY VBELN POSNR.
  SORT IT_VBAK BY VBELN.

  CLEAR ZZJ.
  LOOP AT IT_VBAP INTO DATA(WA_VBAP).
    CLEAR:GT_MXXX,INTAB2.
    MOVE-CORRESPONDING WA_VBAP TO GT_MXXX.
    GT_MXXX-KWMENG = WA_VBAP-KWMENG.
    CONDENSE GT_MXXX-KWMENG.
    GT_MXXX-MEINS = WA_VBAP-MEINS.
    CONDENSE GT_MXXX-MEINS.
    READ TABLE IT_SLXX INTO DATA(WA_SLXX1) WITH KEY KNUMV = WA_VBAP-KNUMV KPOSN = WA_VBAP-POSNR  KSCHL = 'ZPR0' BINARY SEARCH.
    IF SY-SUBRC = 0 .
      IF WA_SLXX1-KPEIN <> 0  .
        GT_MXXX-CMPRE = WA_SLXX1-KBETR / WA_SLXX1-KPEIN.
      ELSE.
        GT_MXXX-CMPRE = WA_SLXX1-KBETR.
      ENDIF.
*      CONDENSE GT_MXXX-CMPRE.
      GT_MXXX-KZWI1 = WA_SLXX1-KWERT.
      CONDENSE GT_MXXX-KZWI1.
      ZZJ = ZZJ + WA_SLXX1-KWERT.
    ENDIF.
    READ TABLE IT_SLXX INTO DATA(WA_SLXX2) WITH KEY KNUMV = WA_VBAP-KNUMV KPOSN = WA_VBAP-POSNR  KSCHL = 'MWSI' BINARY SEARCH.
    IF SY-SUBRC = 0 .
      IF WA_SLXX1-KPEIN <> 0  .
        GT_MXXX-ZSL = WA_SLXX1-KBETR / WA_SLXX1-KPEIN.
      ELSE.
        GT_MXXX-ZSL  = WA_SLXX1-KBETR.
      ENDIF.
*      CONDENSE GT_MXXX-ZSL.
      SPLIT GT_MXXX-ZSL AT '.' INTO TABLE DATA(SEGMENTS).
      READ TABLE SEGMENTS INTO DATA(SEGMENT) INDEX 1.
      GT_MXXX-ZSL = SEGMENT && '%' .
      CONDENSE GT_MXXX-ZSL.
      GT_MXXX-ZSE = WA_SLXX2-KWERT.
      CONDENSE GT_MXXX-ZSE.
    ENDIF.
    VBELNPOSNR = WA_VBAP-VBELN && WA_VBAP-POSNR.
    PERFORM GETLONGTEXT(ZPUBFORM) USING 'Z001' VBELNPOSNR 'VBBP' CHANGING GT_MXXX-ZGUIGE.
    MOVE-CORRESPONDING GT_MXXX TO INTAB2.
    APPEND INTAB2.
    APPEND GT_MXXX.
  ENDLOOP.

  LOOP AT IT_VBAK INTO DATA(WA_VBAK).
    MOVE-CORRESPONDING WA_VBAK TO GT_TTXX.
    GT_TTXX-ZZJ     = ZZJ .
    CONDENSE GT_TTXX-ZZJ.
    GT_TTXX-ZWSJE   = WA_VBAK-NETWR .
    CONDENSE GT_TTXX-ZWSJE.
    MOVE-CORRESPONDING GT_TTXX TO INTAB1.
    "业务员ZYWY字段SAP取值逻辑修改，取后5位，第一位为0的取后四位
    GT_TTXX-ZYWY = GT_TTXX-ZYWY+5(5).
    PERFORM DELZERO(ZPUBFORM) CHANGING GT_TTXX-ZYWY.
    INTAB1-ZYWY  = GT_TTXX-ZYWY .
    PERFORM GETLONGTEXT(ZPUBFORM) USING 'Z002' GT_TTXX-VBELN 'VBBK' CHANGING GT_TTXX-ZBZ.
    INTAB1-ZBZ  = GT_TTXX-ZBZ .
    APPEND INTAB1.
    APPEND GT_TTXX.
  ENDLOOP.
*&************************负号提前 BY LZF 17.11.2022 15:24:26************************&*
  LOOP AT GT_TTXX.
    PERFORM SHIFTSIGN(ZPUBFORM) CHANGING GT_TTXX-ZZJ.
    PERFORM SHIFTSIGN(ZPUBFORM) CHANGING GT_TTXX-ZWSJE.
    MODIFY GT_TTXX.
  ENDLOOP.
  LOOP AT GT_MXXX.
    PERFORM SHIFTSIGN(ZPUBFORM) CHANGING GT_MXXX-KZWI1.
    PERFORM SHIFTSIGN(ZPUBFORM) CHANGING GT_MXXX-ZSE.
*    PERFORM SHIFTSIGN(ZPUBFORM) CHANGING INTAB2-CMPRE.
    MODIFY GT_MXXX.
  ENDLOOP.
*&************************负号提前 BY LZF 17.11.2022 15:24:26************************&*

  CLEAR:OASTR1,OASTR2,OAURL,WA_INPUT,WA_OUTPUT,
  OAHEAD[],OASTA,OAMSG.

*根据传入数据转JSON
  WA_INPUT-DATA-INTAB1 = GT_TTXX[].
  WA_INPUT-DATA-INTAB2 = GT_MXXX[].
*SAP结构转JSON
  CALL FUNCTION 'ZFMS_14_JSON'
    CHANGING
      JSONSTR = OASTR1
      DATA    = WA_INPUT
    EXCEPTIONS
      OTHERS  = 1.

  SHIFT OASTR1 LEFT  DELETING LEADING  '{'.

  CONCATENATE '{"senderLoginName":"'
  P_NAME
  '",'
  OASTR1 INTO OASTR1.

  P_RESULT = OASTR1.


*URL改为可配置，ZMM000
  PERFORM GETDATA(ZPUB_DATA) USING 'ZFM_GP_SD_OA_XSBCSQ' CHANGING OAURL.

*  CASE SY-SYSID.
*    WHEN 'DEV'.
*      OAURL = 'HTTP://192.168.0.88:8080/SEEYON/REST/DEE/TASK/SD0075'.
*    WHEN 'QAS'.
*    WHEN 'PRD'.
*  ENDCASE.
  IF OAURL IS INITIAL.
    FLAG = 'N'.
    MESSAGE = 'OAURL获取失败'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.


*获取TOKEN
  CALL FUNCTION 'ZFM_GETOATOKEN'
    IMPORTING
      OUTPUT = OASTR2
    EXCEPTIONS
      OTHERS = 1.
  IF OASTR2 IS INITIAL.
    FLAG = 'N'.
    MESSAGE = 'OATOKEN获取失败'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.
*填入HEADER
  CLEAR:OAMSG,OASTA.
  REFRESH:OAHEAD.
  CLEAR OAHEAD.
  OAHEAD-NAME = 'TOKEN'.
  OAHEAD-VALUE = OASTR2.
  APPEND OAHEAD.
*调用函数HTTP
  CLEAR OASTR2.

  PERFORM REPLACE(ZPUBFORM) USING 'HTTPS' 'HTTP' CHANGING OAURL.
  CALL FUNCTION 'ZFMS_15_HTTP'
    EXPORTING
      INPUT     = OASTR1
      URL       = OAURL
      REQMETHOD = 'POST' "HTTP 方法
      HTTP1_1   = 'X' "协议1.1/1.0
    IMPORTING
      OUTPUT    = OASTR2 "返回JSON报文
      RTMSG     = OAMSG "消息
      STATUS    = OASTA "HTTP状态
    TABLES
      HEADER    = OAHEAD
    EXCEPTIONS
      OTHERS    = 1.
*返回报文转为SAP结构
  CALL FUNCTION 'ZFMS_14_JSON'
    CHANGING
      JSONSTR = OASTR2
      DATA    = WA_OUTPUT
    EXCEPTIONS
      OTHERS  = 1.


  IF OASTA = '200'.
    FLAG =  'Y'.
    MESSAGE = '提交OA成功'.
  ELSE.
    FLAG = 'N'.
    MESSAGE = '提交OA失败'.
  ENDIF.

  ZFMDATASAVE2 'R'.

ENDFUNCTION.
