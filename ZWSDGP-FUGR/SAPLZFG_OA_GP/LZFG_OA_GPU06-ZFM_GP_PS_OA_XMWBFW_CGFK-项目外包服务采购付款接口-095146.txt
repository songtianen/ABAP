FUNCTION ZFM_GP_PS_OA_XMWBFW_CGFK.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(BUKRS) TYPE  BUKRS OPTIONAL
*"  TABLES
*"      INTAB STRUCTURE  ZTPS005A
*"      OTTAB STRUCTURE  ZSMM_017
*"----------------------------------------------------------------------

  ZFMDATASAVE1 'ZFM_GP_PS_OA_XMWBFW_CGFK'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  DATA: LS_HEETHEADER    LIKE BAPIESSRC,
        LT_SHEETSERVICES LIKE TABLE OF BAPIESLLC,
        LS_SHEETSERVICES LIKE BAPIESLLC,
        "        LS_ZENTRYSHEET01 TYPE ZENTRYSHEET01,
        LV_PCKG_NO       LIKE BAPIESLLC-PCKG_NO  VALUE '0000000001',
        LV_LINE_NO       LIKE BAPIESLLC-LINE_NO  VALUE '0000000001',
        LV_ENTRYSHEET    LIKE BAPIESSR-SHEET_NO,
        LV_MESSAGE       LIKE BAPIRET2-MESSAGE,
        MESSAGE          LIKE BAPIRET2-MESSAGE,
        GT_RETURN        TYPE TABLE OF BAPIRET2 WITH HEADER LINE.

  DATA:HEADERDATA       TYPE BAPI_INCINV_CREATE_HEADER,
       INVOICEDOCNUMBER TYPE BAPI_INCINV_FLD-INV_DOC_NO,
       FISCALYEAR       TYPE BAPI_INCINV_FLD-FISC_YEAR,
       TAXDATA          TYPE TABLE OF BAPI_INCINV_CREATE_TAX WITH HEADER LINE,
       ITEMDATA         TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,
       RETURN           TYPE TABLE OF BAPIRET2 WITH HEADER LINE.

  DATA: IFLAG   TYPE  CHAR1 VALUE '',
        RTYPE   TYPE  BAPI_MTYPE,
        RTMSG   TYPE  BAPI_MSG,
        ZPLAN   TYPE  CHAR1,
        O_ZOANO TYPE  ZEFI_OANO,
        ZOANO   TYPE  ZEFI_OANO,
        TAXTARE TYPE  ZEFI_TAXTARE,
        ZJE     TYPE  WRBTR_CS
        .
  DATA: IT_TAB  TYPE TABLE OF ZTFI_PYREHD  WITH HEADER LINE .

*  DATA : WERKS_BS TYPE CHAR20.
*  DATA : ZNUMBER  TYPE CHAR10.
*  DATA : NUM      TYPE CHAR10.
  IF INTAB[] IS INITIAL.
    OTTAB-FLAG = 'N'.
    OTTAB-MESSAGE = '未接收到数据！'.
    APPEND OTTAB.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.
  SELECT
         EKKO~EBELN,
         EKPO~NETWR,
         EKPO~BRTWR,
         EKPO~MWSKZ,
         EKPO~EBELP,
         EKKO~LIFNR,
         EKPO~PACKNO,
         EKPO~PACKNO AS PACK
    INTO TABLE @DATA(IT_EKPO)
    FROM EKPO
    INNER JOIN EKKO ON EKKO~EBELN = EKPO~EBELN
    FOR ALL ENTRIES IN @INTAB
    WHERE EKPO~EBELN = @INTAB-EBELN
     AND  EKPO~EBELP = @INTAB-EBELP
      .
  SORT IT_EKPO BY EBELN EBELP.

  LOOP AT IT_EKPO INTO DATA(WA_EKPO1).
    WA_EKPO1-PACK = WA_EKPO1-PACK + 1.
    MODIFY IT_EKPO FROM WA_EKPO1 .
  ENDLOOP.

  SELECT
     ESLL~PACKNO,
     ESLL~INTROW,
     ESLL~SRVPOS,
     ESLL~KTEXT1
    FROM ESLL
    INTO TABLE @DATA(IT_ESLL)
    FOR ALL ENTRIES IN @IT_EKPO
    WHERE ESLL~PACKNO = @IT_EKPO-PACK
     .
  SORT IT_ESLL BY PACKNO  INTROW.

*  SELECT
*      PRCD_ELEMENTS~KUNMV,
*      PRCD_ELEMENTS~KPOSN,
*      PRCD_ELEMENTS~STUNR,
*      PRCD_ELEMENTS~ZAEHK,
*      PRCD_ELEMENTS~KWERT
*    INTO CORRESPONDING FIELDS OF TABLE GT_DJXX
*    FROM PRCD_ELEMENTS
*    FOR ALL ENTRIES IN IT_VBAK1
*    WHERE PRCD_ELEMENTS~KNUMV = IT_VBAK1-KNUMV
*    AND PRCD_ELEMENTS~KSCHL IN ( 'ZP01' , 'ZP02' ,'ZPR0' )
*    AND PRCD_ELEMENTS~KINAK <> 'X'.

  LOOP AT INTAB .

    IF INTAB-EBELN IS INITIAL OR INTAB-EBELN IS INITIAL.
      OTTAB-FLAG = 'N'.
      OTTAB-MESSAGE = '采购订单、订单行为空！！'.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

    READ TABLE IT_EKPO INTO DATA(WA_EKPO2) WITH KEY EBELN = INTAB-EBELN EBELP = INTAB-EBELP BINARY SEARCH.
    IF SY-SUBRC <> 0 .
      OTTAB-FLAG = 'N'.
      OTTAB-MESSAGE = '未查询到采购订单、订单行！'.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

    READ TABLE IT_ESLL INTO DATA(WA_ESLL1) WITH KEY PACKNO = WA_EKPO2-PACK BINARY SEARCH.
    IF SY-SUBRC <> 0 .
      OTTAB-FLAG = 'N'.
      OTTAB-MESSAGE = '未查询到采购订单行的包！'.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

  ENDLOOP.


  LOOP AT INTAB .

    "PS + 项目编码采购 + 公司
*    CASE BUKRS .
*      WHEN '3000'.
**        WERKS_BS = 'PS_XMWBCG_GP_LSH' .
*        ZOANO = 'FK_GPXMCG_'.
*      WHEN '3010'.
**        WERKS_BS = 'PS_XMWBCG_JJ_LSH' .
*        ZOANO = 'FK_JJXMCG_'.
*    ENDCASE.

*    WERKS_BS = 'PS_XMWBCG_LSH' .
*    ZOANO = 'FK_JJXM_'.
*    CALL FUNCTION 'ZNUMS_UPDATE'
*      EXPORTING
*        REPID    = SY-REPID
*        WERKS    = WERKS_BS
*        TCODE    = SY-TCODE
*        FLAG     = 'D'
**       INITNUM  =
*        WEISHU   = 4
*      IMPORTING
*        ZNUMBER  = ZNUMBER
*      EXCEPTIONS
*        OVERFLOW = 1
*        OTHERS   = 2.
*
*    NUM   = SY-DATUM+2(6) && ZNUMBER .
*    ZOANO = ZOANO && NUM .

*    INTAB-ZDH = ZDH .
*    MODIFY INTAB.

    INSERT ZTPS005A FROM INTAB.

*服务确定抬头数据
    CLEAR : LS_HEETHEADER , LT_SHEETSERVICES , LS_SHEETSERVICES.

    LS_HEETHEADER-PCKG_NO    = '1'.                                            "软件包编号
    LS_HEETHEADER-PO_NUMBER  = INTAB-EBELN.                                    "PO编号
    LS_HEETHEADER-PO_ITEM    = INTAB-EBELP.                                    "PO项目编号
    LS_HEETHEADER-SHORT_TEXT = '项目外包服务采购付款接口'.                      "预算号
    LS_HEETHEADER-ACCEPTANCE = 'X'.                                            "接受服务确认标识
    LS_HEETHEADER-POST_DATE  = SY-DATUM.                                       "凭证中的凭证日期
    LS_HEETHEADER-DOC_DATE   = SY-DATUM.                                       "凭证中的过帐日期
*    LS_HEETHEADER-FIN_ENTRY = 'F'.                                             "标识：关闭


    LS_SHEETSERVICES-PCKG_NO    = '1' .
    LS_SHEETSERVICES-LINE_NO    = '1'.
    LS_SHEETSERVICES-OUTL_IND   = 'X'. "                              INDICATOR: OUTLINE LINE
    LS_SHEETSERVICES-SUBPCKG_NO = '2'. "                              SUB PACKAGE NUMBER
    APPEND LS_SHEETSERVICES TO LT_SHEETSERVICES.
    CLEAR LS_SHEETSERVICES.

*    LV_LINE_NO = LV_LINE_NO .
    READ TABLE IT_ESLL INTO DATA(WA_ESLL) WITH KEY PACKNO = WA_EKPO2-PACK BINARY SEARCH.
    LS_SHEETSERVICES-PCKG_NO    = '2' .
    LS_SHEETSERVICES-LINE_NO    = '10'.
    LS_SHEETSERVICES-SERVICE    = WA_ESLL-SRVPOS.                               "服务编号
    LS_SHEETSERVICES-QUANTITY   = INTAB-ZBQSQJE.                                   "数量
    LS_SHEETSERVICES-BASE_UOM   = 'AU'.                                     "单位
    LS_SHEETSERVICES-GR_PRICE   = '1'.                            "总价
*    LS_SHEETSERVICES-PRICE_UNIT = 'CNY'.
    LS_SHEETSERVICES-SHORT_TEXT =  WA_ESLL-KTEXT1."服务费用1'.                "短文本
    APPEND LS_SHEETSERVICES TO LT_SHEETSERVICES.

    CLEAR: GT_RETURN .
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_ENTRYSHEET_CREATE'
      EXPORTING
        ENTRYSHEETHEADER   = LS_HEETHEADER
      IMPORTING
        ENTRYSHEET         = LV_ENTRYSHEET
      TABLES
        ENTRYSHEETSERVICES = LT_SHEETSERVICES
        RETURN             = GT_RETURN.


    READ TABLE GT_RETURN  WITH KEY TYPE = 'E'.
    IF SY-SUBRC NE 0.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
*      OTTAB-FLAG = 'S'.
*      CONCATENATE '生成服务编号：' LV_ENTRYSHEET INTO OTTAB-MESSAGE.
*      APPEND OTTAB.
    ELSE.
      LOOP AT GT_RETURN WHERE TYPE CA 'AEX'.
        MESSAGE ID     GT_RETURN-ID
                TYPE   GT_RETURN-TYPE
                NUMBER GT_RETURN-NUMBER
                WITH   GT_RETURN-MESSAGE_V1 GT_RETURN-MESSAGE_V2
                       GT_RETURN-MESSAGE_V3 GT_RETURN-MESSAGE_V4
                       INTO LV_MESSAGE.
        CONCATENATE MESSAGE LV_MESSAGE INTO OTTAB-MESSAGE SEPARATED BY '｜'.
      ENDLOOP.
      SHIFT MESSAGE LEFT DELETING LEADING  '｜'.
      OTTAB-FLAG = 'N'.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

    CLEAR : GT_RETURN , GT_RETURN[] , HEADERDATA , ITEMDATA ,ITEMDATA[] .



*填入字段
*抬头
    READ TABLE IT_EKPO INTO DATA(WA_EKPO) WITH KEY EBELN = INTAB-EBELN EBELP = INTAB-EBELP BINARY SEARCH.
    PERFORM GETTAX(ZPUBFORM) USING '' WA_EKPO-MWSKZ  CHANGING TAXTARE.

    HEADERDATA-INVOICE_IND = 'X'.
    HEADERDATA-DOC_TYPE = 'RE'.
    HEADERDATA-DOC_DATE = SY-DATUM.
    HEADERDATA-PSTNG_DATE = SY-DATUM.
    HEADERDATA-BLINE_DATE = SY-DATUM.
    HEADERDATA-COMP_CODE =  '3000'.
    HEADERDATA-CURRENCY =   'CNY'.
*    HEADERDATA-CALC_TAX_IND = 'X'."自动计算税
    HEADERDATA-PMNTTRMS = ''."付款条件

    ZJE = INTAB-ZBQSQJE - INTAB-ZBQSQJE / ( 1 + TAXTARE ).
    TAXDATA-TAX_CODE = WA_EKPO-MWSKZ .
    TAXDATA-TAX_AMOUNT =  ZJE .
    APPEND TAXDATA.

*    TAXDATA-TAX_CODE = 'TAXCN'.
*    TAXDATA-TAX_AMOUNT_LOCAL = ZJE . "税额
    "整个采购订单一起申请
*    HEADERDATA-GROSS_AMOUNT = WA_EKPO-BRTWR.  . " 采购订单 BRTWR 含税金额
    "只申请本次申请金额
    HEADERDATA-GROSS_AMOUNT = INTAB-ZBQSQJE.  . " ZBQSQJE 为 含税金额
*行项目
    CLEAR ITEMDATA.
    ITEMDATA-INVOICE_DOC_ITEM = 1.
    ITEMDATA-PO_NUMBER   = INTAB-EBELN.
    ITEMDATA-PO_ITEM     = INTAB-EBELP.
*    ITEMDATA-ITEM_AMOUNT = WA_EKPO-NETWR .  "采购订单 NETWR 不含税金额
*    ITEMDATA-ITEM_AMOUNT = INTAB-ZBQSQJE / ( 1 + TAXTARE )  .  " ZBQSQJE 为 含税金额3
    ZJE = INTAB-ZBQSQJE - ZJE  .  " ZBQSQJE 为 含税金额3
    ITEMDATA-ITEM_AMOUNT = ZJE.
    ITEMDATA-TAX_CODE    = WA_EKPO-MWSKZ .
    ITEMDATA-SHEET_NO    = LV_ENTRYSHEET .  "参考凭证项目
    APPEND ITEMDATA.


*调用BAPI
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_INCOMINGINVOICE_CREATE'
      EXPORTING
        HEADERDATA       = HEADERDATA
      IMPORTING
        INVOICEDOCNUMBER = INVOICEDOCNUMBER
        FISCALYEAR       = FISCALYEAR
      TABLES
        ITEMDATA         = ITEMDATA
        TAXDATA          = TAXDATA
        RETURN           = GT_RETURN
      EXCEPTIONS
        OTHERS           = 1.

    READ TABLE GT_RETURN  WITH KEY TYPE = 'E'.
    IF SY-SUBRC NE 0.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
*      OTTAB-FLAG = 'S'.
*      CONCATENATE '生成服务编号：' LV_ENTRYSHEET INTO OTTAB-MESSAGE.
*      APPEND OTTAB.
    ELSE.
      LOOP AT GT_RETURN WHERE TYPE CA 'AEX'.
        MESSAGE ID     GT_RETURN-ID
                TYPE   GT_RETURN-TYPE
                NUMBER GT_RETURN-NUMBER
                WITH   GT_RETURN-MESSAGE_V1 GT_RETURN-MESSAGE_V2
                       GT_RETURN-MESSAGE_V3 GT_RETURN-MESSAGE_V4
                       INTO LV_MESSAGE.
        CONCATENATE MESSAGE LV_MESSAGE INTO OTTAB-MESSAGE SEPARATED BY '｜'.
      ENDLOOP.
      SHIFT MESSAGE LEFT DELETING LEADING  '｜'.
      OTTAB-FLAG = 'N'.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

    CLEAR : IT_TAB , IT_TAB[] , RTYPE , RTMSG , ZPLAN , O_ZOANO .

    IT_TAB-ZOANO         = ZOANO.            "'OA流程号'.
    IT_TAB-ZOAIT         = '1'.              "'OA流程子表序号'.
    IT_TAB-ZRETYPE       = '30'.             "'付款申请类别'.
    IT_TAB-ZDEPT         = INTAB-ZZDRBM.     "'部门'.
    IT_TAB-BUKRS         = BUKRS.            "'公司代码'.
    IT_TAB-ZOAUSER       = INTAB-ZZDR.       "'OA流程申请人'.
    IT_TAB-PAYTYPE       = 'V'.              "'付款方式'.
    IT_TAB-ZPYCTN        = INTAB-ZFKNR.      "'付款内容'.
    IT_TAB-ZPLDAT        = SY-DATUM.         "'计划付款日期'.
    IT_TAB-ZPYRETYPE_OA  = ''.               "'是否付款申请'.
    IT_TAB-LIFNR         = WA_EKPO-LIFNR  .     "'供应商帐号'.
    IT_TAB-ZYHZH_K       = INTAB-ZSKRZH .     "'收款人账号'.
    IT_TAB-BANKA_K       = INTAB-ZSKRZHM .   "收款人账户名
    IT_TAB-DMBTR_PLN     = INTAB-ZBQSQJE .    "'申请支付金额'.
    IT_TAB-WAERS         = 'CNY'.         "'货币码'.
    IT_TAB-ZEPSN         = '0'.           "'直联付款标识'.
    IT_TAB-ZYHZH         =  INTAB-ZFKZH    .
    IT_TAB-HKONT_H       =  INTAB-HKONT_H  .
    IT_TAB-RSTGR         =  INTAB-RSTGR    .
    IT_TAB-HKONT         =  INTAB-HKONT    .
    IT_TAB-ZCONT         =  INTAB-EBELN    .
    APPEND IT_TAB.

    CALL FUNCTION 'ZOA_RFC_PYREHD_READ'
      EXPORTING
        IFLAG   = IFLAG
      IMPORTING
        RTYPE   = RTYPE
        RTMSG   = RTMSG
        ZPLAN   = ZPLAN
        O_ZOANO = O_ZOANO
      TABLES
        IT_TAB  = IT_TAB.
    IF RTYPE <> 'S' .
      OTTAB-FLAG = 'N'.
      OTTAB-MESSAGE = RTMSG.
      APPEND OTTAB.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.

  ENDLOOP.

  OTTAB-FLAG = 'Y'.
  OTTAB-MESSAGE = '项目劳务分包付款申请成功'.
  APPEND OTTAB.
  ZFMDATASAVE2 'R'.




ENDFUNCTION.
