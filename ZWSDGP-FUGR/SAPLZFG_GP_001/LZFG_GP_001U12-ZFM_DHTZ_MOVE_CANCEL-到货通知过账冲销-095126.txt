FUNCTION ZFM_DHTZ_MOVE_CANCEL.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     REFERENCE(ZDHDH) TYPE  ZTMM205-ZDHDH
*"     REFERENCE(BUDAT) TYPE  BUDAT DEFAULT SY-DATUM
*"     REFERENCE(ACT) TYPE  CHAR10
*"  EXPORTING
*"     REFERENCE(RTYPE) TYPE  BAPI_MTYPE
*"     REFERENCE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      RETURN STRUCTURE  BAPIRET2 OPTIONAL
*"      T_ITEM STRUCTURE  ZTMM202 OPTIONAL
*"      IN_TAB STRUCTURE  ZSMM_205 OPTIONAL
*"  CHANGING
*"     REFERENCE(O_ZTMM201) TYPE  ZTMM201 OPTIONAL
*"----------------------------------------------------------------------
  DATA:BEGIN OF IT_SORTF OCCURS 0,
         SORTF TYPE NUMC2,
         FIELD TYPE CHAR30, "存放对应凭证的字段
         BWART TYPE BWART,
         CODE  TYPE GM_CODE,
         MBLNR TYPE MBLNR,
         MJAHR TYPE MJAHR,
         RTYPE TYPE BAPI_MTYPE,
         RTMSG TYPE BAPI_MSG,
       END OF IT_SORTF,
       BEGIN OF IT_ZJSLSUM OCCURS 0,
         EBELN TYPE EBELN,
         EBELP TYPE EBELP,
         ZJSL  TYPE ZTMM202-ZJSL,
       END OF IT_ZJSLSUM,
       BEGIN OF IT_EBANJS OCCURS 0,
         BANFN  TYPE EBAN-BANFN,
         BNFPO  TYPE EBAN-BNFPO,
         N      TYPE I,
         ZSJCML TYPE EBAN-ZSJCML,
       END OF IT_EBANJS,
       IT_ZSMM206 TYPE TABLE OF ZSMM206 WITH HEADER LINE,
       IT_ZSPP006 TYPE TABLE OF ZSPP_006 WITH HEADER LINE,
       IT_EBELN   TYPE TABLE OF EKKO_KEY WITH HEADER LINE,
       IT_EBELP   TYPE TABLE OF EKPO_KEY WITH HEADER LINE,
       ITEM       TYPE TABLE OF BAPI2017_GM_ITEM_04 WITH HEADER LINE,
       T_ITEM1    TYPE TABLE OF ZTMM202 WITH HEADER LINE,
       IT_ZSMM208 TYPE TABLE OF ZSMM208 WITH HEADER LINE.
  DATA:GOODSMVT_HEADER  TYPE BAPI2017_GM_HEAD_01,
       GOODSMVT_CODE    TYPE BAPI2017_GM_CODE,
       MATERIALDOCUMENT TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,
       MATDOCUMENTYEAR  TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR,
       GOODSMVT_ITEM    TYPE TABLE OF BAPI2017_GM_ITEM_CREATE WITH HEADER LINE.
  DATA:XBLNR   TYPE XBLNR,
       ZDHTZCT TYPE CHAR10,
       BKTXT   TYPE BKTXT,
       LINENUM TYPE MB_LINE_ID,
       PARTNUM TYPE MB_PARENT_ID.
  FIELD-SYMBOLS:<FS> TYPE ANY.
  CLEAR:O_ZTMM201,ZTMM202,ZTMM201,RETURN[],ITEM[],RTYPE,RTMSG,
  IT_MIGO[],ZVDHTZ,IT_SORTF[],IT_ZSPP006,IT_ZTMM226[],
  IT_EBELP[].
  SELECT *
    INTO TABLE @DATA(IT_ZVDHTZ)
    FROM ZVDHTZ
    WHERE ZDHDH = @ZDHDH
    AND   DEL NE 'X'.
  IF IT_ZVDHTZ[] IS INITIAL.
    FILLMSG 'E' '通知单不存在/已删除' 'X'.
  ENDIF.
  SORT IT_ZVDHTZ BY EBELN EBELP.

  SELECT *
    INTO TABLE @DATA(IT_ZVMMPO)
    FROM ZVMMPO
    FOR ALL ENTRIES IN @IT_ZVDHTZ
    WHERE EBELN = @IT_ZVDHTZ-EBELN
    AND   EBELP = @IT_ZVDHTZ-EBELP.
  IF SY-SUBRC EQ 0.
    SORT IT_ZVMMPO BY EBELN EBELP.
    SELECT *
      INTO TABLE @DATA(IT_EKKN)
      FROM EKKN
      FOR ALL ENTRIES IN @IT_ZVMMPO
      WHERE EBELN = @IT_ZVMMPO-EBELN
      AND   EBELP = @IT_ZVMMPO-EBELP.
    SORT IT_EKKN BY EBELN EBELP.
  ENDIF.

  SORT IT_ZVDHTZ BY ZDHDH ZDHHH.
  READ TABLE IT_ZVDHTZ INTO ZVDHTZ INDEX 1.
  MOVE-CORRESPONDING ZVDHTZ TO O_ZTMM201.
  O_ZTMM201-BUDAT = BUDAT.
  IF T_ITEM[] IS INITIAL.
    LOOP AT IT_ZVDHTZ INTO ZVDHTZ WHERE DELI NE 'X'.
      CLEAR:T_ITEM.
      MOVE-CORRESPONDING ZVDHTZ TO T_ITEM.
      APPEND T_ITEM.
    ENDLOOP.
  ELSE.
    LOOP AT T_ITEM.
      READ TABLE IT_ZVDHTZ INTO ZVDHTZ WITH KEY ZDHDH = T_ITEM-ZDHDH
                                                ZDHHH = T_ITEM-ZDHHH
                                                BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        T_ITEM-DEL = ZVDHTZ-DELI.
        T_ITEM-UPDKZ = 'U'.
      ENDIF.
      MODIFY T_ITEM.
    ENDLOOP.
  ENDIF.
  IF T_ITEM[] IS INITIAL.
    FILLMSG 'E' '通知单不存在/已删除' 'X'.
  ENDIF.
*计算行项目数据
  IF ACT NE 'POSTWMS'.
    PERFORM CALZTMM202 IN PROGRAM ZRMM206A TABLES T_ITEM USING 'ZBZRQ'.
    PERFORM CALZTMM202 IN PROGRAM ZRMM206A TABLES T_ITEM USING 'ZJSL'.
  ENDIF.


  CLEAR IN_TAB.
  SORT IN_TAB BY ZDHNO ZDHHH.
  READ TABLE IN_TAB INDEX 1.

  CASE ACT.
    WHEN 'POST' OR 'POSTWMS'.
      IF O_ZTMM201-GZ EQ 'X'.
        FILLMSG 'E' '到货通知单状态不允许入库' 'X'.
      ENDIF.

*根据到货类型等信息判断凭证-MBLNR存放101/101+543/121+544凭证，MBLNR1存放511、542凭证
      LOOP AT T_ITEM WHERE DEL NE 'X'.
        CLEAR:IT_SORTF,IT_ZSPP006,IT_EBELP.
        IF T_ITEM-ZJSL IS NOT INITIAL.
          IT_EBELP-EBELN = T_ITEM-EBELN.
          IT_EBELP-EBELP = T_ITEM-EBELP.
          COLLECT IT_EBELP.
        ENDIF.
        CASE O_ZTMM201-ZDHLX.
          WHEN 'WWCL'.
            IT_ZSPP006-ZJH = T_ITEM-ZZBH.
            COLLECT IT_ZSPP006.
          WHEN OTHERS.
            SELECT SINGLE COUNT(*)
              FROM MARA
              WHERE MATNR = T_ITEM-MATNR
              AND   MTART = 'Z005'.
            IF SY-SUBRC EQ 0.
              IT_ZSPP006-ZJH = T_ITEM-ZZBH.
              COLLECT IT_ZSPP006.
            ENDIF.
        ENDCASE.

        CASE O_ZTMM201-ZDHLX+0(2).
          WHEN 'WW'.
            CASE O_ZTMM201-ZDHLX.
              WHEN 'WWHC' OR 'WWGD'.
                IT_SORTF-BWART = '543'.
                IT_SORTF-FIELD = 'MBLNR'.
                IT_SORTF-CODE = '01'.
                IT_SORTF-SORTF = 1.
                COLLECT IT_SORTF.
                IF T_ITEM-ZJBS = 'X'
                  AND T_ITEM-ZJSL IS NOT INITIAL.
                  CLEAR IT_SORTF.
                  IT_SORTF-BWART = '542'.
                  IT_SORTF-FIELD = 'MBLNR1'.
                  IT_SORTF-SORTF = 2.
                  IT_SORTF-CODE = '04'.
                  COLLECT IT_SORTF.
                ENDIF.
              WHEN 'WWCL'.
                IT_SORTF-BWART = '121'.
                IT_SORTF-FIELD = 'MBLNR'.
                IT_SORTF-SORTF = 1.
                IT_SORTF-CODE = '07'.
                COLLECT IT_SORTF.
                CLEAR IT_SORTF.
                IT_SORTF-BWART = '542'.
                IT_SORTF-FIELD = 'MBLNR1'.
                IT_SORTF-SORTF = 2.
                IT_SORTF-CODE = '04'.
                COLLECT IT_SORTF.
            ENDCASE.
          WHEN OTHERS.
            IF T_ITEM-ZMF = 'X'.
              IT_SORTF-BWART = '511'.
              IT_SORTF-FIELD = 'MBLNR1'.
              IT_SORTF-SORTF = 2.
              IT_SORTF-CODE = '06'.
              COLLECT IT_SORTF.
            ELSE.
              IT_SORTF-BWART = '101'.
              IT_SORTF-FIELD = 'MBLNR'.
              IT_SORTF-SORTF = 1.
              IT_SORTF-CODE = '01'.
              COLLECT IT_SORTF.
            ENDIF.
        ENDCASE.
      ENDLOOP.
      LOOP AT IT_SORTF.
*防止重复执行
        ASSIGN COMPONENT IT_SORTF-FIELD OF STRUCTURE O_ZTMM201 TO <FS>.
        IF SY-SUBRC EQ 0.
          IF <FS> IS NOT INITIAL.
            IT_SORTF-MBLNR = <FS>.
            IT_SORTF-MJAHR = O_ZTMM201-MJAHR.
          ENDIF.
        ENDIF.
        MODIFY IT_SORTF.
      ENDLOOP.

      CLEAR:IT_SORTF.
      LOOP AT IT_SORTF WHERE MBLNR IS INITIAL.
        EXIT.
      ENDLOOP.
*若未过账，则检查自编号
      CALL FUNCTION 'ZFM_CHECKUSE_BYJH'
        EXPORTING
          ATNAM  = 'Z01'
          TSKC   = 'X'
        TABLES
          INTAB  = IT_ZSPP006
          OUTTAB = IT_ZSMM206.
      IF IT_SORTF IS NOT INITIAL.
        CASE O_ZTMM201-ZDHLX.
*委外材料的找批次在MSRD有没有数据，有则
          WHEN 'WWCL'.
            DELETE IT_ZSMM206 WHERE CLABS IS INITIAL.
            SORT IT_ZSMM206 BY WERKS MATNR CHARG PSPNR.
          WHEN OTHERS.
            DELETE IT_ZSMM206 WHERE MBLNR IS INITIAL.
            SORT IT_ZSMM206 BY Z01.
            LOOP AT T_ITEM WHERE DEL NE 'X'.
              READ TABLE IT_ZSMM206 WITH KEY Z01 = T_ITEM-ZZBH BINARY SEARCH.
              IF SY-SUBRC EQ 0.
                PERFORM MSGTOTEXT(ZPUBFORM) USING 'ZMSG_GP' '042'
                      T_ITEM-ZDHHH
                       T_ITEM-ZZBH IT_ZSMM206-MBLNR IT_ZSMM206-CHARG
                       CHANGING RTMSG.
                FILLMSG 'E' RTMSG 'X'.
              ENDIF.
            ENDLOOP.
        ENDCASE.

*过账前进行运费分摊
        IF O_ZTMM201-ZYSJE IS NOT INITIAL.
          CLEAR:IT_ZSMM208[],IT_EBELN[],IT_ZJSLSUM[],T_ITEM1[],
          RETURN[].
          T_ITEM1[] = T_ITEM[].
          LOOP AT T_ITEM WHERE DEL NE 'X'.
            CLEAR:IT_ZJSLSUM,IT_EBELN.
            IT_ZJSLSUM-EBELN = T_ITEM-EBELN.
            IT_EBELN-EBELN = T_ITEM-EBELN.
            IT_ZJSLSUM-EBELP = T_ITEM-EBELP.
            IT_ZJSLSUM-ZJSL = T_ITEM-ZJSL.
            COLLECT:IT_EBELN, IT_ZJSLSUM.
          ENDLOOP.
          DELETE T_ITEM1 WHERE ZYSJEI IS INITIAL.
          SORT T_ITEM1 BY EBELN EBELP.
          LOOP AT IT_EBELN.
            CLEAR:IT_ZSMM208[].
            LOOP AT IT_ZJSLSUM WHERE EBELN = IT_EBELN-EBELN
                                  AND ZJSL GT 0.
              CLEAR:IT_ZSMM208,T_ITEM1.
              READ TABLE T_ITEM1 WITH KEY EBELN = IT_ZJSLSUM-EBELN
                                          EBELP = IT_ZJSLSUM-EBELP
                                          BINARY SEARCH.
              READ TABLE IT_ZVMMPO INTO ZVMMPO WITH KEY EBELN = IT_ZJSLSUM-EBELN
                                                        EBELP = IT_ZJSLSUM-EBELP
                                                        BINARY SEARCH.
              IF SY-SUBRC EQ 0
                AND ZVMMPO-MENGE GT 0.
                IT_ZSMM208-EBELP = IT_ZJSLSUM-EBELP.
                IT_ZSMM208-KSCHL = 'ZFR1'.
                IT_ZSMM208-KBETR = T_ITEM1-ZYSJEI * ZVMMPO-MENGE / IT_ZJSLSUM-ZJSL.
                COLLECT IT_ZSMM208.
                CLEAR IT_ZSMM208.
                IT_ZSMM208-EBELP = IT_ZJSLSUM-EBELP.
                IT_ZSMM208-KSCHL = 'ZM01'.
                IT_ZSMM208-KBETR = 90.
                APPEND IT_ZSMM208.
                IF O_ZTMM201-ZYSGS IS NOT INITIAL.
                  CLEAR IT_ZSMM208.
                  IT_ZSMM208-EBELP = IT_ZJSLSUM-EBELP.
                  IT_ZSMM208-KSCHL = 'ZF01'.
                  IT_ZSMM208-LIFNR = O_ZTMM201-ZYSGS.
                  APPEND IT_ZSMM208.
                ENDIF.
              ENDIF.
            ENDLOOP.
            CALL FUNCTION 'ZFM_MM_CHGPOPRICE'
              EXPORTING
                EBELN  = IT_EBELN-EBELN
              IMPORTING
                RTYPE  = RTYPE
                RTMSG  = RTMSG
              TABLES
                RETURN = RETURN
                INTAB  = IT_ZSMM208.
            IF RTYPE = 'E'.
              CONCATENATE '采购订单' IT_EBELN-EBELN '运费分摊失败' RTMSG
              INTO RTMSG.
              FILLMSG 'E' RTMSG 'X'.
            ELSE.
              WAIT UP TO 1 SECONDS.
            ENDIF.
          ENDLOOP.
        ENDIF.
*添加物流对账平台逻辑-分摊成功才能过账
        IF O_ZTMM201-ZTHFS = 'ZT'.
          CLEAR:IT_ZTMM226[],IT_ZTMM226,T_ITEM.
          LOOP AT T_ITEM WHERE DEL NE 'X'.
            EXIT.
          ENDLOOP.
          MOVE-CORRESPONDING O_ZTMM201 TO IT_ZTMM226.
          IT_ZTMM226-ZYWDH = O_ZTMM201-ZDHDH.
          IT_ZTMM226-ZYSD = O_ZTMM201-ZCKDZ.
          IT_ZTMM226-ZSJDD = O_ZTMM201-ZSJDH.
          IT_ZTMM226-ZZDRQ = SY-DATUM.
          IT_ZTMM226-ZFYLX = 'CGYF'.
          IT_ZTMM226-ZDJLX = 'YS'.
          IT_ZTMM226-ZYFLX = '10'.
          IT_ZTMM226-ZZT = '10'.
          IT_ZTMM226-ZSL = '0.09'.
          IT_ZTMM226-MWSKZ = 'J4'.
          IT_ZTMM226-LIFNR = O_ZTMM201-ZYSGS.
          IT_ZTMM226-LGORT = T_ITEM-LGORT.
          IT_ZTMM226-WERKS = T_ITEM-WERKS.
          PERFORM GETBUKRS(ZPUBFORM) USING IT_ZTMM226-WERKS
                CHANGING IT_ZTMM226-BUKRS.
          SELECT SINGLE *
            FROM ZVMMPO
            WHERE EBELN = T_ITEM-EBELN
            AND   EBELP = T_ITEM-EBELP.
          IF SY-SUBRC EQ 0.
            SELECT SINGLE *
              FROM EBAN
              WHERE BANFN = ZVMMPO-BANFN
              AND   BNFPO = ZVMMPO-BNFPO.
            IT_ZTMM226-ZYWY = EBAN-AFNAM.
            SELECT SINGLE BU_SORT1
              INTO IT_ZTMM226-ZYWBM
              FROM BUT000
              WHERE NAME_ORG1 = IT_ZTMM226-ZYWY.
          ENDIF.
          SELECT SINGLE LGOBE
            INTO IT_ZTMM226-LGOBE
            FROM T001L
            WHERE WERKS = T_ITEM-WERKS
            AND   LGORT = T_ITEM-LGORT.
          SELECT SINGLE NAME1
            INTO IT_ZTMM226-ZYWKH
            FROM LFA1
            WHERE LIFNR = O_ZTMM201-LIFNR.

          APPEND IT_ZTMM226.
*若单已写入，则不更新
          SELECT SINGLE COUNT(*)
            FROM ZTMM226
            WHERE ZYWDH = O_ZTMM201-ZDHDH.
          IF SY-SUBRC NE 0.
            CALL FUNCTION 'ZFM_YFMX001'
              IMPORTING
                RTYPE  = RTYPE
                RTMSG  = RTMSG
              TABLES
                IN_TAB = IT_ZTMM226.
            IF RTYPE = 'E'.
              CONCATENATE '写入物流对账平台:' RTMSG INTO RTMSG.
              FILLMSG RTYPE RTMSG 'X'.
            ENDIF.
          ENDIF.

        ENDIF.
      ENDIF.
      CLEAR:RTYPE,RTMSG.
      SORT IT_SORTF BY SORTF.
*根据上边识别进行凭证生成
      LOOP AT IT_SORTF WHERE MBLNR IS INITIAL.
        CLEAR:IT_MIGO[],BKTXT,XBLNR,GOODSMVT_HEADER,
        GOODSMVT_CODE,GOODSMVT_ITEM[],RETURN[],LINENUM,
        PARTNUM.
        BKTXT = IN_TAB-ZGUID.
        CASE IT_SORTF-BWART.
          WHEN '101' OR '542' OR '511'."直接用封装方法实现
            LOOP AT T_ITEM WHERE ZJSL IS NOT INITIAL
                              AND DEL NE 'X'.
              CLEAR IT_MIGO.
              IT_MIGO-MATNR = T_ITEM-MATNR.
              IT_MIGO-WERKS = T_ITEM-WERKS.
              IT_MIGO-MENGE = T_ITEM-ZJSL.
              IT_MIGO-EBELN = T_ITEM-EBELN.
              IT_MIGO-LIFNR = O_ZTMM201-LIFNR.
              IF STRLEN( T_ITEM-ZZBH ) LE 10.
                IT_MIGO-CHARG = T_ITEM-ZZBH.
              ENDIF.
*              IT_MIGO-MEINS = T_ITEM-RKDW.
              IT_MIGO-EBELP = T_ITEM-EBELP.
              IT_MIGO-LGORT = T_ITEM-LGORT.
*委外材料的匹配MSPR，做542Q
              CASE O_ZTMM201-ZDHLX.
                WHEN 'WWCL'.
                  IT_MIGO-MEINS = T_ITEM-ZJDW.
                  READ TABLE IT_EKKN INTO EKKN WITH KEY EBELN = T_ITEM-EBELN
                                                        EBELP = T_ITEM-EBELP
                                                        BINARY SEARCH.
                  IF SY-SUBRC EQ 0.
                    IT_MIGO-PSPNR = EKKN-PS_PSP_PNR.
                    IT_MIGO-SOBKZ = 'Q'.
                  ENDIF.
*                  READ TABLE IT_ZSMM206 WITH KEY WERKS = T_ITEM-WERKS
*                                                 MATNR = T_ITEM-MATNR
*                                                 BINARY SEARCH.
*                  IF SY-SUBRC EQ 0.
*                    IT_MIGO-CHARG = IT_ZSMM206-CHARG.
*                    IF IT_ZSMM206-PSPNR IS NOT INITIAL.
*                      IT_MIGO-PSPNR = IT_ZSMM206-PSPNR.
*                      CASE IT_SORTF-BWART.
*                        WHEN '542'.
*                          IT_MIGO-SOBKZ = 'Q'.
*                      ENDCASE.
*                    ENDIF.
*                  ENDIF.
              ENDCASE.
*写批次特征
              CONCATENATE T_ITEM-ZDHDH T_ITEM-ZDHHH T_ITEM-MATNR
              INTO IT_MIGO-SGTXT.
              PERFORM FILLPCTX USING IT_MIGO-SGTXT O_ZTMM201 T_ITEM ACT.
              CASE O_ZTMM201-ZDHLX+0(2).
                WHEN 'WW'.
                  IF T_ITEM-ZJBS = 'X'.
                    APPEND IT_MIGO.
                  ENDIF.
                WHEN OTHERS.
                  APPEND IT_MIGO.
              ENDCASE.
            ENDLOOP.

            CALL FUNCTION 'ZFMS_01_MIGOPOST'
              EXPORTING
                BUDAT  = O_ZTMM201-BUDAT
                BKTXT  = BKTXT
                XBLNR  = XBLNR
                CODE   = IT_SORTF-CODE
                BWART  = IT_SORTF-BWART
              IMPORTING
                RTYPE  = IT_SORTF-RTYPE
                RTMSG  = IT_SORTF-RTMSG
                MBLNR  = IT_SORTF-MBLNR
                MJAHR  = IT_SORTF-MJAHR
              TABLES
                ITEM   = IT_MIGO
              EXCEPTIONS
                OTHERS = 1.
          WHEN '121'.
            IF IT_EBELP[] IS INITIAL.
              FILLPCTX 'E' '无采购订单' 'X'.
            ENDIF.
            GOODSMVT_HEADER-PSTNG_DATE = O_ZTMM201-BUDAT.
            GOODSMVT_HEADER-DOC_DATE = SY-DATUM.
            GOODSMVT_HEADER-HEADER_TXT = BKTXT.
            GOODSMVT_HEADER-PR_UNAME = SY-UNAME.
            GOODSMVT_CODE-GM_CODE = IT_SORTF-CODE.
            LOOP AT IT_EBELP.
              CLEAR:GOODSMVT_ITEM,ZVMMPO.
              ADD 1 TO LINENUM.
              READ TABLE IT_ZVMMPO INTO ZVMMPO WITH KEY EBELN = IT_EBELP-EBELN
                                                        EBELP = IT_EBELP-EBELP
                                                        BINARY SEARCH.
              GOODSMVT_ITEM-MOVE_TYPE = IT_SORTF-BWART.
              GOODSMVT_ITEM-MATERIAL = ZVMMPO-MATNR.
              GOODSMVT_ITEM-PLANT = ZVMMPO-WERKS.
              GOODSMVT_ITEM-ENTRY_QNT = 0.
              GOODSMVT_ITEM-PO_PR_QNT = 0.
              GOODSMVT_ITEM-VENDOR = ZVMMPO-LIFNR.
              GOODSMVT_ITEM-MVT_IND = 'O'.
              GOODSMVT_ITEM-PO_NUMBER = IT_EBELP-EBELN.
              GOODSMVT_ITEM-PO_ITEM = IT_EBELP-EBELP.
              GOODSMVT_ITEM-LINE_ID = LINENUM.
              READ TABLE IT_EKKN INTO EKKN WITH KEY EBELN = IT_EBELP-EBELN
                                                    EBELP = IT_EBELP-EBELP
                                                    BINARY SEARCH.
              IF SY-SUBRC EQ 0.
                CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
                  EXPORTING
                    INPUT  = EKKN-PS_PSP_PNR
                  IMPORTING
                    OUTPUT = GOODSMVT_ITEM-VAL_WBS_ELEM.
              ENDIF.
              APPEND GOODSMVT_ITEM.
              PARTNUM = LINENUM.
              LOOP AT T_ITEM WHERE EBELN = IT_EBELP-EBELN
                               AND EBELP = IT_EBELP-EBELP
                               AND DEL NE 'X'
                               AND ZJBS = 'X'
                               AND ZJSL GT 0.
                CLEAR:GOODSMVT_ITEM.
                GOODSMVT_ITEM-MOVE_TYPE = '544'.
                GOODSMVT_ITEM-SPEC_STOCK = 'O'.
                GOODSMVT_ITEM-MVT_IND = 'W'.
                GOODSMVT_ITEM-VENDOR = ZVMMPO-LIFNR.
                GOODSMVT_ITEM-MATERIAL = T_ITEM-MATNR.
                GOODSMVT_ITEM-BATCH = T_ITEM-ZZBH.
                GOODSMVT_ITEM-PLANT = ZVMMPO-WERKS.
*                GOODSMVT_ITEM-PO_NUMBER = IT_EBELP-EBELN.
*                GOODSMVT_ITEM-PO_ITEM = IT_EBELP-EBELP.
                GOODSMVT_ITEM-ENTRY_QNT = T_ITEM-ZJSL.
                GOODSMVT_ITEM-PO_PR_QNT = T_ITEM-ZJSL.
                CASE O_ZTMM201-ZDHLX.
                  WHEN 'WWCL'.
                    GOODSMVT_ITEM-ENTRY_UOM = T_ITEM-ZJDW.
                ENDCASE.

                ADD 1 TO LINENUM.
                GOODSMVT_ITEM-LINE_ID = LINENUM.
                GOODSMVT_ITEM-PARENT_ID = PARTNUM.
                GOODSMVT_ITEM-LINE_DEPTH = '01'.
                READ TABLE IT_EKKN INTO EKKN WITH KEY EBELN = IT_EBELP-EBELN
                                                      EBELP = IT_EBELP-EBELP
                                                      BINARY SEARCH.
                IF SY-SUBRC EQ 0.
                  CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
                    EXPORTING
                      INPUT  = EKKN-PS_PSP_PNR
                    IMPORTING
                      OUTPUT = GOODSMVT_ITEM-VAL_WBS_ELEM.
                ENDIF.
*委外材料的匹配MSPR，做544R
*                CASE O_ZTMM201-ZDHLX.
*                  WHEN 'WWCL'.
*                    READ TABLE IT_ZSMM206 WITH KEY WERKS = T_ITEM-WERKS
*                                                   MATNR = T_ITEM-MATNR
*                                                   BINARY SEARCH.
*                    IF SY-SUBRC EQ 0.
*                      GOODSMVT_ITEM-BATCH = IT_ZSMM206-CHARG.
*                      IF IT_ZSMM206-PSPNR IS NOT INITIAL.
*                        CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
*                          EXPORTING
*                            INPUT  = IT_ZSMM206-PSPNR
*                          IMPORTING
*                            OUTPUT = GOODSMVT_ITEM-VAL_WBS_ELEM.
*                        GOODSMVT_ITEM-SPEC_STOCK = 'R'.
*                      ENDIF.
*                    ENDIF.
*                ENDCASE.
                IF GOODSMVT_ITEM-VAL_WBS_ELEM IS NOT INITIAL.
                  GOODSMVT_ITEM-SPEC_STOCK = 'R'.
                ENDIF.
                APPEND GOODSMVT_ITEM.
              ENDLOOP.
            ENDLOOP.

            IF GOODSMVT_ITEM[] IS INITIAL.
              FILLMSG 'E' '行项目数量必填' 'X'.
            ENDIF.
            CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
              EXPORTING
                GOODSMVT_HEADER  = GOODSMVT_HEADER
                GOODSMVT_CODE    = GOODSMVT_CODE
                TESTRUN          = ''
              IMPORTING
                MATERIALDOCUMENT = IT_SORTF-MBLNR
                MATDOCUMENTYEAR  = IT_SORTF-MJAHR
              TABLES
                GOODSMVT_ITEM    = GOODSMVT_ITEM
                RETURN           = RETURN.
            LOOP AT RETURN WHERE TYPE CA 'AEX'.
              CONCATENATE IT_SORTF-RTMSG RETURN-MESSAGE INTO IT_SORTF-RTMSG
              SEPARATED BY '/'.
            ENDLOOP.
            IF SY-SUBRC EQ 0
              OR IT_SORTF-MBLNR IS INITIAL.
              IT_SORTF-RTYPE = 'E'.
              PERFORM BAPIRUN(ZPUBFORM) USING 'E'.
            ELSE.
              IT_SORTF-RTYPE = 'S'.
              IT_SORTF-RTMSG = '成功'.
              PERFORM BAPIRUN(ZPUBFORM) USING 'S'.
            ENDIF.
          WHEN '543'.
            GOODSMVT_HEADER-PSTNG_DATE = O_ZTMM201-BUDAT.
            GOODSMVT_HEADER-DOC_DATE = SY-DATUM.
            GOODSMVT_HEADER-HEADER_TXT = BKTXT.
            GOODSMVT_HEADER-PR_UNAME = SY-UNAME.
            GOODSMVT_CODE-GM_CODE = IT_SORTF-CODE.
            LOOP AT T_ITEM WHERE ZJBS NE 'X'
                             AND DEL NE 'X'.
              CLEAR:GOODSMVT_ITEM.
              ADD 1 TO LINENUM.
              GOODSMVT_ITEM-MOVE_TYPE = '101'.
              GOODSMVT_ITEM-MATERIAL = T_ITEM-MATNR.
              GOODSMVT_ITEM-PLANT = T_ITEM-WERKS.
              GOODSMVT_ITEM-STGE_LOC = T_ITEM-LGORT.
              GOODSMVT_ITEM-ENTRY_QNT = T_ITEM-ZJSL.
              GOODSMVT_ITEM-PO_PR_QNT = T_ITEM-ZJSL.
*              GOODSMVT_ITEM-ENTRY_UOM = T_ITEM-RKDW.
*            GOODSMVT_ITEM-ORDERPR_UN = IT_EKPO-MEINS.
              IF STRLEN( T_ITEM-ZZBH ) LE 10.
                GOODSMVT_ITEM-BATCH = T_ITEM-ZZBH.
              ENDIF.
*写批次特征
              CONCATENATE T_ITEM-ZDHDH T_ITEM-ZDHHH T_ITEM-MATNR
              INTO GOODSMVT_ITEM-ITEM_TEXT.
              PERFORM FILLPCTX USING IT_MIGO-SGTXT O_ZTMM201 T_ITEM ACT.
              GOODSMVT_ITEM-VENDOR = O_ZTMM201-LIFNR.
              GOODSMVT_ITEM-MVT_IND = 'B'.
              GOODSMVT_ITEM-PO_NUMBER = T_ITEM-EBELN.
              GOODSMVT_ITEM-PO_ITEM = T_ITEM-EBELP.
              GOODSMVT_ITEM-LINE_ID = LINENUM.
              APPEND GOODSMVT_ITEM.
              PARTNUM = LINENUM.
              LOOP AT T_ITEM INTO ZTMM202 WHERE EBELN = T_ITEM-EBELN
                                            AND EBELP = T_ITEM-EBELP
                                            AND DEL NE 'X'
                                            AND ZJBS = 'X'.
                CLEAR:GOODSMVT_ITEM.
                GOODSMVT_ITEM-MOVE_TYPE = '543'.
                GOODSMVT_ITEM-SPEC_STOCK = 'O'.
                GOODSMVT_ITEM-VENDOR = O_ZTMM201-LIFNR.
                GOODSMVT_ITEM-MATERIAL = ZTMM202-MATNR.
                GOODSMVT_ITEM-BATCH = T_ITEM-ZXHPC.
                GOODSMVT_ITEM-PLANT = ZTMM202-WERKS.
*              GOODSMVT_ITEM-ENTRY_UOM = IT_EKPO-MEINS.
                ADD 1 TO LINENUM.
                GOODSMVT_ITEM-LINE_ID = LINENUM.
                GOODSMVT_ITEM-PARENT_ID = PARTNUM.
                GOODSMVT_ITEM-LINE_DEPTH = '01'.
                APPEND GOODSMVT_ITEM.
              ENDLOOP.
            ENDLOOP.
            IF GOODSMVT_ITEM[] IS INITIAL.
              FILLMSG 'E' '行项目数量必填' 'X'.
            ENDIF.
            CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
              EXPORTING
                GOODSMVT_HEADER  = GOODSMVT_HEADER
                GOODSMVT_CODE    = GOODSMVT_CODE
                TESTRUN          = ''
              IMPORTING
                MATERIALDOCUMENT = IT_SORTF-MBLNR
                MATDOCUMENTYEAR  = IT_SORTF-MJAHR
              TABLES
                GOODSMVT_ITEM    = GOODSMVT_ITEM
                RETURN           = RETURN.
            LOOP AT RETURN WHERE TYPE CA 'AEX'.
              CONCATENATE IT_SORTF-RTMSG RETURN-MESSAGE INTO IT_SORTF-RTMSG
              SEPARATED BY '/'.
            ENDLOOP.
            IF SY-SUBRC EQ 0
              OR IT_SORTF-MBLNR IS INITIAL.
              IT_SORTF-RTYPE = 'E'.
              PERFORM BAPIRUN(ZPUBFORM) USING 'E'.
            ELSE.
              IT_SORTF-RTYPE = 'S'.
              IT_SORTF-RTMSG = '成功'.
              PERFORM BAPIRUN(ZPUBFORM) USING 'S'.
            ENDIF.
        ENDCASE.
        MODIFY IT_SORTF.
      ENDLOOP.
*将执行的结果回写
      LOOP AT IT_SORTF.
        ASSIGN COMPONENT IT_SORTF-FIELD OF STRUCTURE O_ZTMM201 TO <FS>.
        IF SY-SUBRC EQ 0.
          <FS> = IT_SORTF-MBLNR.
          O_ZTMM201-MJAHR = IT_SORTF-MJAHR.
        ENDIF.
      ENDLOOP.
*若完全成功，GZ='X',ZDHZT='E'
      LOOP AT IT_SORTF WHERE MBLNR IS INITIAL.
        EXIT.
      ENDLOOP.
      IF SY-SUBRC EQ 0.
        CLEAR:O_ZTMM201-GZ.
        O_ZTMM201-ZDHZT = 'D'.
        IF O_ZTMM201-MBLNR IS NOT INITIAL.
          CLEAR:O_ZTMM201-CXMBLNR,O_ZTMM201-CXMJAHR.
        ENDIF.
        IF O_ZTMM201-MBLNR1 IS NOT INITIAL.
          CLEAR:O_ZTMM201-CXMBLNR1.
        ENDIF.
        IF O_ZTMM201-MJAHR IS INITIAL.
          O_ZTMM201-MJAHR = BUDAT+0(4).
        ENDIF.
*过账失败删除物流对账平台
        IF O_ZTMM201-ZTHFS = 'ZT'.
          DELETE FROM ZTMM226 WHERE ZYWDH = O_ZTMM201-ZDHDH.
          COMMIT WORK.
        ENDIF.
        FILLMSG 'E' IT_SORTF-RTMSG ''.
      ELSE.
        CLEAR:O_ZTMM201-CXMBLNR,O_ZTMM201-CXMJAHR,
        O_ZTMM201-CXMBLNR1.
        IF O_ZTMM201-MJAHR IS INITIAL.
          O_ZTMM201-MJAHR = BUDAT+0(4).
        ENDIF.
        O_ZTMM201-GZ = 'X'.
        O_ZTMM201-ZWCRQ = SY-DATUM.
        O_ZTMM201-ZDHZT = 'E'.
        FILLMSG 'S' '成功' ''.
********ADD BY DONGPZ BEGIN AT 29.12.2022 11:14:59
*将出米率反写采购申请增强ZSJCML
        CLEAR:IT_EBANJS[].
        LOOP AT T_ITEM WHERE ZCML IS NOT INITIAL
                         AND DEL NE 'X'.
          CLEAR:IT_EBANJS.
          READ TABLE IT_ZVMMPO INTO ZVMMPO WITH KEY EBELN = T_ITEM-EBELN
                                                    EBELP = T_ITEM-EBELP
                                                    BINARY SEARCH.
          IF SY-SUBRC EQ 0.
            IT_EBANJS-BANFN = ZVMMPO-BANFN.
            IT_EBANJS-BNFPO = ZVMMPO-BNFPO.
            IT_EBANJS-N = 1.
            IT_EBANJS-ZSJCML = T_ITEM-ZCML.
            COLLECT IT_EBANJS.
          ENDIF.
        ENDLOOP.
        LOOP AT IT_EBANJS WHERE N GT 0.
          IT_EBANJS-ZSJCML = IT_EBANJS-ZSJCML / IT_EBANJS-N.
          UPDATE EBAN
          SET ZSJCML = IT_EBANJS-ZSJCML
          WHERE BANFN = IT_EBANJS-BANFN
          AND   BNFPO = IT_EBANJS-BNFPO.
        ENDLOOP.
        COMMIT WORK.
********ADD BY DONGPZ END AT 29.12.2022 11:14:59
      ENDIF.
      UPDATE ZTMM201
      SET CXMBLNR  = O_ZTMM201-CXMBLNR
          CXMJAHR  = O_ZTMM201-CXMJAHR
          CXMBLNR1 = O_ZTMM201-CXMBLNR1
          ZDHZT = O_ZTMM201-ZDHZT
          GZ = O_ZTMM201-GZ
          MBLNR = O_ZTMM201-MBLNR
          MJAHR = O_ZTMM201-MJAHR
          MBLNR1 = O_ZTMM201-MBLNR1
          BUDAT = O_ZTMM201-BUDAT
       WHERE ZDHDH = ZDHDH.
      COMMIT WORK.
    WHEN 'CANCEL'.
      CASE O_ZTMM201-GZ.
        WHEN 'X' OR ''.
          IF O_ZTMM201-MBLNR1 IS NOT INITIAL."先冲销最后一张过账的凭证
            PERFORM MBST(ZPUBFORM) TABLES ITEM
              USING O_ZTMM201-MBLNR1 O_ZTMM201-MJAHR O_ZTMM201-BUDAT
                    CHANGING RTMSG.
            RTYPE = RTMSG+0(1).
            IF RTYPE = 'S'.
              O_ZTMM201-CXMBLNR1 = RTMSG+2(10).
              O_ZTMM201-CXMJAHR = RTMSG+12(4).
            ENDIF.
          ENDIF.
          IF RTYPE NE 'E'.
            FILLMSG 'S' RTMSG ''.
            O_ZTMM201-MBLNR1 = ''.
            UPDATE ZTMM201
            SET BUDAT = O_ZTMM201-BUDAT
                MBLNR = O_ZTMM201-MBLNR1
                MJAHR = O_ZTMM201-MJAHR
                CXMBLNR = O_ZTMM201-CXMBLNR1
                CXMJAHR = O_ZTMM201-CXMJAHR
            WHERE ZDHDH = ZDHDH.
          ELSE.
            FILLMSG 'E' RTMSG 'X'.
          ENDIF.
          COMMIT WORK.
          IF O_ZTMM201-MBLNR IS NOT INITIAL."再冲销第一张
            CLEAR:RTMSG,RTYPE.
            PERFORM MBST(ZPUBFORM) TABLES ITEM
              USING O_ZTMM201-MBLNR O_ZTMM201-MJAHR O_ZTMM201-BUDAT
                    CHANGING RTMSG.
            RTYPE = RTMSG+0(1).
            IF RTYPE = 'S'.
              O_ZTMM201-CXMBLNR = RTMSG+2(10).
            ENDIF.
          ENDIF.
          IF RTYPE NE 'E'.
            O_ZTMM201-ZDHZT = 'D'.
            O_ZTMM201-MBLNR1 = ''.
            O_ZTMM201-MJAHR = ''.
            O_ZTMM201-GZ = ''.
            O_ZTMM201-BUDAT = ''.
            FILLMSG 'S' RTMSG ''.
            UPDATE ZTMM201
            SET BUDAT = O_ZTMM201-BUDAT
                MBLNR1 = O_ZTMM201-MBLNR
                MJAHR  = O_ZTMM201-MJAHR
                ZDHZT = O_ZTMM201-ZDHZT
                GZ = O_ZTMM201-GZ
                CXMBLNR1 = O_ZTMM201-CXMBLNR
            WHERE ZDHDH = ZDHDH.
          ELSE.
            FILLMSG 'E' RTMSG 'X'.
          ENDIF.
          COMMIT WORK.
        WHEN OTHERS.
          FILLMSG 'E' '到货通知单状态不允许冲销' 'X'.
      ENDCASE.
  ENDCASE.
*状态变更后进行推送
*判断触发推送WMS
  CHECK RTYPE = 'S'.
  PERFORM GETDATA(ZPUB_DATA) USING 'ZDHTZCT' CHANGING ZDHTZCT.
  IF ZDHTZCT = 'X'.
    PERFORM PDSENDWMS IN PROGRAM ZRMM206A
     USING O_ZTMM201 CHANGING O_ZTMM201-ZWMSJG.
  ENDIF.
*推送钉钉
  PERFORM PUSHDD IN PROGRAM ZRMM206A
   USING ZDHDH ''.
ENDFUNCTION.
FORM FILLPCTX USING P_IN_SGTXT TYPE SGTXT
                    P_INHEAD TYPE ZTMM201
                    P_IN_ITEM TYPE ZTMM202
                    P_ACT.
  DATA:ATNAM TYPE ATNAM.
  CLEAR:MARM,ATNAM,ZVMMPO,EKKN,PRPS,EBAN,KNA1.
  SELECT SINGLE *
    FROM ZVMMPO
    WHERE EBELN = P_IN_ITEM-EBELN
    AND   EBELP = P_IN_ITEM-EBELP.
  IF SY-SUBRC EQ 0.
    SELECT SINGLE *
      FROM EKKN
      WHERE EBELN = ZVMMPO-EBELN
      AND   EBELP = ZVMMPO-EBELP.
    IF SY-SUBRC EQ 0.
      SELECT SINGLE *
        FROM PRPS
        WHERE PSPNR = EKKN-PS_PSP_PNR.
    ENDIF.
    SELECT SINGLE *
      FROM EBAN
      WHERE BANFN = ZVMMPO-BANFN
      AND   BNFPO = ZVMMPO-BNFPO.
    IF SY-SUBRC EQ 0.
      SELECT SINGLE *
        FROM KNA1
        WHERE KUNNR = EBAN-KUNNR.
    ENDIF.
  ENDIF.
*出米率的写入
  SELECT *
    INTO TABLE @DATA(IT_MARM)
    FROM MARM
    WHERE MATNR = @P_IN_ITEM-MATNR
    AND   KZWSO = 'B'.
  CLEAR:MARA.
  SELECT SINGLE *
    FROM MARA
    WHERE MATNR = P_IN_ITEM-MATNR.
  LOOP AT IT_MARM INTO MARM WHERE ATINN IS NOT INITIAL .
    CLEAR:ATNAM.
    CALL FUNCTION 'CONVERSION_EXIT_ATINN_OUTPUT'
      EXPORTING
        INPUT  = MARM-ATINN
      IMPORTING
        OUTPUT = ATNAM.
    CASE MARA-MATKL.
      WHEN 'E0400'.
        IF P_IN_ITEM-ZJSL GT 0.
          P_IN_ITEM-ZZHXS = P_IN_ITEM-ZRKL / P_IN_ITEM-ZJSL.
          CASE P_INHEAD-ZDHLX.
            WHEN 'WWCL'.
              IF P_IN_ITEM-ZZHXS IS INITIAL
                OR P_IN_ITEM-ZZHXS = 0.
                CONTINUE.
              ENDIF.
          ENDCASE.
          FILLPCTX P_IN_SGTXT ATNAM  P_IN_ITEM-ZZHXS.
        ENDIF.
      WHEN OTHERS.
        CASE P_INHEAD-ZDHLX.
          WHEN 'WWCL'.
            IF P_IN_ITEM-ZZHXS IS INITIAL
              OR P_IN_ITEM-ZZHXS = 0.
              CONTINUE.
            ENDIF.
        ENDCASE.
        FILLPCTX P_IN_SGTXT ATNAM  P_IN_ITEM-ZCML.
    ENDCASE.
  ENDLOOP.
  FILLPCTX P_IN_SGTXT 'Z00' P_IN_ITEM-RKDW.
  FILLPCTX P_IN_SGTXT 'Z02' P_IN_ITEM-ZJH.
  FILLPCTX P_IN_SGTXT 'Z01' P_IN_ITEM-ZZBH.
  FILLPCTX P_IN_SGTXT 'Z10' P_IN_ITEM-ZJSL.
  IF P_ACT NE 'POSTWMS'.
    FILLPCTX P_IN_SGTXT 'Z11' P_IN_ITEM-ZRKL.
  ENDIF.
  FILLPCTX P_IN_SGTXT 'Z03' P_IN_ITEM-ZZYH.
  FILLPCTX P_IN_SGTXT 'Z05' P_IN_ITEM-ZCD.
  FILLPCTX P_IN_SGTXT 'Z08' P_IN_ITEM-ZKW.
  FILLPCTX P_IN_SGTXT 'Z38' P_INHEAD-BUDAT.
  FILLPCTX P_IN_SGTXT 'Z14' P_INHEAD-BUDAT.
  FILLPCTX P_IN_SGTXT 'Z15' '是'.
  FILLPCTX P_IN_SGTXT 'Z06' P_IN_ITEM-ZSCRQ.
  FILLPCTX P_IN_SGTXT 'Z07' P_IN_ITEM-ZBZRQ.
  FILLPCTX P_IN_SGTXT 'Z16' P_IN_ITEM-ZBZH.
  FILLPCTX P_IN_SGTXT 'Z17' P_IN_ITEM-ZYXQ.
  FILLPCTX P_IN_SGTXT 'Z24' PRPS-POSID.
  FILLPCTX P_IN_SGTXT 'Z09' PRPS-POST1.
  FILLPCTX P_IN_SGTXT 'Z37' PRPS-POST1.
  IF EBAN-AFNAM IS NOT INITIAL.
    FILLPCTX P_IN_SGTXT 'Z13' EBAN-AFNAM.
  ENDIF.
  FILLPCTX P_IN_SGTXT 'Z04' EBAN-ZSEH.
  FILLPCTX P_IN_SGTXT 'Z12' EBAN-ZGGXH.
  FILLPCTX P_IN_SGTXT 'ZGY' EBAN-ZWWGY.
  CASE P_INHEAD-ZDHLX.
    WHEN 'WWGD' OR 'WWHC'.
      FILLPCTX P_IN_SGTXT 'ZWW' '是'.
  ENDCASE.

*  SELECT  SINGLE *
*    INTO @DATA(WA_ADDR)
*    FROM USER_ADDR
*    WHERE BNAME = @EBAN-ERNAM.
*  IF SY-SUBRC EQ 0.
*    FILLPCTX P_IN_SGTXT 'Z13' WA_ADDR-NAME_TEXTC.
*  ENDIF.

  FILLPCTX P_IN_SGTXT 'Z18' EBAN-AFNAM.
  FILLPCTX P_IN_SGTXT 'Z37' KNA1-NAME1.
  FILLPCTX P_IN_SGTXT 'Z25' EBAN-BEDNR.
ENDFORM.
