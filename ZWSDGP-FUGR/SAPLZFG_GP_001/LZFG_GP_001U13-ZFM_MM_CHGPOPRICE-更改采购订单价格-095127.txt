FUNCTION ZFM_MM_CHGPOPRICE.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     REFERENCE(EBELN) TYPE  EBELN
*"  EXPORTING
*"     REFERENCE(RTYPE) TYPE  BAPI_MTYPE
*"     REFERENCE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      RETURN STRUCTURE  BAPIRET2 OPTIONAL
*"      INTAB STRUCTURE  ZSMM208
*"----------------------------------------------------------------------
  DATA:POCOND  TYPE TABLE OF BAPIMEPOCOND WITH HEADER LINE,
       POCONDX TYPE TABLE OF BAPIMEPOCONDX WITH HEADER LINE.
  DATA:POSNR TYPE POSNR.
  CLEAR: RETURN[],POCOND[],POCONDX[],RTYPE,RTMSG.
  DELETE INTAB WHERE EBELP IS INITIAL
                  OR KSCHL IS INITIAL.
  SORT INTAB BY EBELP KSCHL.
  DELETE ADJACENT DUPLICATES FROM INTAB
  COMPARING EBELP KSCHL.
  IF INTAB[] IS INITIAL.
    FILLMSG 'E' '无数据' 'X'.
  ENDIF.
  SORT INTAB BY EBELP.
  SELECT *
    INTO TABLE @DATA(IT_ZVMMPO)
    FROM ZVMMPO
    FOR ALL ENTRIES IN @INTAB
    WHERE EBELP = @INTAB-EBELP
    AND   EBELN = @EBELN.
  IF SY-SUBRC NE 0.
    FILLMSG 'E' '无数据' 'X'.
  ENDIF.
  SORT IT_ZVMMPO BY KNUMV.
  SELECT *
    INTO TABLE @DATA(IT_PRCD)
    FROM PRCD_ELEMENTS
    FOR ALL ENTRIES IN @IT_ZVMMPO
    WHERE KNUMV = @IT_ZVMMPO-KNUMV
    AND   KINAK = @SPACE.
  SORT IT_PRCD BY KPOSN KSCHL.
  SORT IT_ZVMMPO BY EBELP.
  LOOP AT IT_ZVMMPO INTO ZVMMPO.
    LOOP AT INTAB WHERE EBELP = ZVMMPO-EBELP.
      CLEAR:POCOND,POCONDX,POSNR.
      POSNR = INTAB-EBELP.
      READ TABLE IT_PRCD INTO DATA(WA_PRCD) WITH KEY KPOSN = POSNR
                                                     KSCHL = INTAB-KSCHL
                                                     BINARY SEARCH.
      CASE INTAB-KSCHL.
        WHEN 'ZF01' OR 'ZF04'.
          IF INTAB-LIFNR NE WA_PRCD-LIFNR.
            POCOND-ITM_NUMBER = INTAB-EBELP.
            POCOND-COND_TYPE = INTAB-KSCHL.
            POCOND-VENDOR_NO = INTAB-LIFNR.
            POCOND-CHANGE_ID = 'U'.
          ENDIF.
        WHEN OTHERS.
          IF INTAB-KBETR NE WA_PRCD-KBETR.
            POCOND-ITM_NUMBER = INTAB-EBELP.
            POCOND-COND_TYPE = INTAB-KSCHL.
            POCOND-CURRENCY = ZVMMPO-WAERS.
            POCOND-COND_P_UNT = ZVMMPO-PEINH.
            POCOND-COND_VALUE = INTAB-KBETR.
            POCOND-CHANGE_ID = 'U'.
          ENDIF.
      ENDCASE.
      IF POCOND-COND_TYPE IS INITIAL.
        CONTINUE.
      ENDIF.
      PERFORM SETBAPIX(ZPUBFORM) USING POCOND CHANGING POCONDX.
      APPEND:POCOND,POCONDX.
    ENDLOOP.
  ENDLOOP.
  CHECK POCOND[] IS NOT INITIAL.
  SET UPDATE TASK LOCAL.
  CALL FUNCTION 'BAPI_PO_CHANGE'
    EXPORTING
      PURCHASEORDER    = EBELN
      NO_PRICE_FROM_PO = 'X'
    TABLES
      RETURN           = RETURN
      POCOND           = POCOND
      POCONDX          = POCONDX.
  LOOP AT RETURN WHERE TYPE CA 'AEX'.
    CONCATENATE RTMSG RETURN-MESSAGE INTO RTMSG.
  ENDLOOP.
  IF SY-SUBRC = 0.
    RTYPE = 'E'.
    PERFORM BAPIRUN(ZPUBFORM) USING 'E'.
  ELSE.
    SET UPDATE TASK LOCAL.
    PERFORM BAPIRUN(ZPUBFORM) USING 'S'.
    RTYPE = 'S'.
    RTMSG = '运费分摊成功'.
  ENDIF.

ENDFUNCTION.
