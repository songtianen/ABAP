FUNCTION ZFM_CALMNG_BYHT.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  TABLES
*"      INTAB STRUCTURE  LIPS_KEY
*"      OUTTAB STRUCTURE  ZSSD263 OPTIONAL
*"----------------------------------------------------------------------
  DATA:IT_VBELN TYPE TABLE OF LIPS_KEY WITH HEADER LINE,
       IT_ZPCDH TYPE TABLE OF ZSPP205 WITH HEADER LINE,
       IT_YSKS  TYPE TABLE OF ZSPP205 WITH HEADER LINE.
  DATA: TABIX  TYPE SY-TABIX,
        TABIX1 TYPE SY-TABIX.
  DATA:ABGRU  TYPE VBAP-ABGRU.
  "销售合同行 订单状态 不同 会导致 预开票冲回金额 强制处理金额 不同
  "ADD 20221212 BY HANWQ
  CLEAR:OUTTAB[],IT_VBELN[],IT_ZPCDH.
  DELETE INTAB WHERE VBELN IS INITIAL OR POSNR IS INITIAL.
  CHECK INTAB[] IS NOT INITIAL.
  SORT INTAB BY VBELN POSNR.
  SELECT *
    INTO TABLE @DATA(IT_VBAK)
    FROM VBAK
    FOR ALL ENTRIES IN @INTAB
    WHERE VBELN = @INTAB-VBELN.
  CHECK SY-SUBRC  = 0.
  SORT IT_VBAK BY KNUMV.
  SELECT *
    INTO TABLE @DATA(IT_KONV)
    FROM V_KONV_CDS
    FOR ALL ENTRIES IN @IT_VBAK
    WHERE KNUMV = @IT_VBAK-KNUMV
    AND   KSCHL IN ('ZPR0','ZPRR').
  SORT IT_KONV BY KNUMV KPOSN KSCHL.
  SORT IT_VBAK BY VBELN.
*加工明细量
  SELECT *
    INTO TABLE @DATA(IT_ZTSD207)
    FROM ZTSD207
    FOR ALL ENTRIES IN @INTAB
    WHERE VBELN = @INTAB-VBELN
    AND   POSNR = @INTAB-POSNR.
  SORT IT_ZTSD207 BY VBELN POSNR.
*排产量、计划量、验收量
*取已排产数量
  SELECT ZTPP_205~ZPCDH,
         ZTPP_205~VBELN,
         ZTPP_205~POSNR,
         ZTPP_205A~ZPCDHH,
         ZTPP_205A~ZPCSL
    INTO TABLE @DATA(IT_205A)
    FROM ZTPP_205 INNER JOIN ZTPP_205A ON ZTPP_205~ZPCDH = ZTPP_205A~ZPCDH
    FOR ALL ENTRIES IN @INTAB
    WHERE ZTPP_205~VBELN = @INTAB-VBELN
    AND   ZTPP_205~POSNR = @INTAB-POSNR
    AND   ZTPP_205A~DEL NE 'X'
    AND   ZTPP_205~ZADUIT = 'A'.
  IF SY-SUBRC EQ 0.
*取验收量
    LOOP AT IT_205A INTO DATA(WA_205A).
      CLEAR:IT_ZPCDH.
      IT_ZPCDH-ZPCDH = WA_205A-ZPCDH.
      IT_ZPCDH-ZPCDHH = WA_205A-ZPCDHH.
      COLLECT IT_ZPCDH.
    ENDLOOP.
    PERFORM CALZYSKS IN PROGRAM ZPPD201_V4 TABLES IT_ZPCDH IT_YSKS.
    SORT IT_205A BY ZPCDH ZPCDHH.
    SELECT *
      INTO TABLE @DATA(IT_ZTPP206)
      FROM ZTPP_206
      FOR ALL ENTRIES IN @IT_205A
      WHERE ZPCDH = @IT_205A-ZPCDH
      AND   ZPCDHH = @IT_205A-ZPCDHH
      AND   DEL NE 'X'.
    SORT IT_ZTPP206 BY ZPCDH ZPCDHH.
  ENDIF.
  SORT IT_205A BY VBELN POSNR.
*已通知量、补差
  SELECT VBAP~*
    INTO TABLE @DATA(IT_VBAP)
    FROM VBAP
    FOR ALL ENTRIES IN @INTAB
    WHERE VBAP~VGBEL = @INTAB-VBELN
    AND   VBAP~VGPOS = @INTAB-POSNR
    AND   VBAP~ZCKZT NE 'Z'
    AND   VBAP~VBTYP_ANA IN ('K','L','C').
  SORT IT_VBAP BY VGBEL VGPOS.
  LOOP AT IT_VBAP INTO DATA(WA_VBAP) WHERE VBTYP_ANA = 'C'.
    CLEAR :IT_VBELN.
    IT_VBELN-VBELN = WA_VBAP-VBELN.
    IT_VBELN-POSNR = WA_VBAP-POSNR.
    COLLECT IT_VBELN.
  ENDLOOP.

  IF IT_VBELN[] IS NOT INITIAL.
    SORT IT_VBELN BY VBELN POSNR.
*发货量-根据发货通知单
    SELECT *
      INTO TABLE @DATA(IT_LIPS)
      FROM LIPS
      FOR ALL ENTRIES IN @IT_VBELN
      WHERE VGBEL = @IT_VBELN-VBELN
      AND   VGPOS = @IT_VBELN-POSNR
      AND   WBSTA = 'C'.
    SORT IT_LIPS BY VGBEL VGPOS.
*开票量-根据发货通知单
    SELECT VBRP~*
      INTO TABLE @DATA(IT_VBRP)
      FROM VBRP INNER JOIN VBRK ON VBRP~VBELN = VBRK~VBELN
      FOR ALL ENTRIES IN @IT_VBELN
      WHERE VBRP~AUBEL = @IT_VBELN-VBELN
      AND   VBRP~AUPOS = @IT_VBELN-POSNR
      AND   VBRK~FKSTO = @SPACE
      AND   VBRK~SFAKN = @SPACE.
    SORT IT_VBRP BY AUBEL AUPOS.
  ENDIF.
*预开票
  SELECT ZTFI_GTRE_HD~KPSQ,
         ZTFI_GTRE_HD~VBELN,
         ZTFI_GTRE_IT~SQHH,
         ZTFI_GTRE_IT~MENGE_GTSJ,
         ZTFI_GTRE_IT~DMBTR_GTSJ
    INTO TABLE @DATA(IT_KPSQ)
    FROM ZTFI_GTRE_HD INNER JOIN ZTFI_GTRE_IT ON ZTFI_GTRE_HD~KPSQ = ZTFI_GTRE_IT~KPSQ
    FOR ALL ENTRIES IN @INTAB
    WHERE ZTFI_GTRE_HD~VBELN = @INTAB-VBELN
    AND   ZTFI_GTRE_HD~GTRTYPE = 'RY'.
  SORT IT_KPSQ BY VBELN.
*金税开票数量金额
  SELECT ZTFI_GTRCONT~*
    INTO TABLE @DATA(IT_GTRCONT)
    FROM ZTFI_GTRCONT
    INNER JOIN ZTFI_GTRE_HD ON ZTFI_GTRE_HD~KPSQ = ZTFI_GTRCONT~KPSQ
    FOR ALL ENTRIES IN @INTAB
    WHERE ZTFI_GTRCONT~VBELN = @INTAB-VBELN
    AND   ZTFI_GTRCONT~POSNR = @INTAB-POSNR
    AND   ZTFI_GTRE_HD~SPZT <> '3'
    .
  SORT IT_GTRCONT BY VBELN POSNR.
*剩余预开票金额 预开票冲回金额 强制处理金额 ADD 20221212 BY HANWQ
  SELECT
     *
    INTO TABLE @DATA(IT_ACCRYBK)
    FROM ZTFI_ACCRYBK
    FOR ALL ENTRIES IN @INTAB
    WHERE VBELN = @INTAB-VBELN
    AND   POSNR = @INTAB-POSNR
    AND   XSTOV <>  'X' .
  SORT IT_ACCRYBK BY VBELN POSNR .
*履约计划量 ADD 20221227 BY HANWQ
  SELECT
     ZTSD200~ZVBELN,
     ZTSD200A~ZPOSNR,
     ZTSD200~VBELN,
     ZTSD200A~POSNR,
     ZTSD200A~ZPCL
     INTO TABLE @DATA(IT_200)
     FROM ZTSD200
     INNER JOIN ZTSD200A ON ZTSD200A~ZVBELN = ZTSD200~ZVBELN
     FOR ALL ENTRIES IN @INTAB
     WHERE ZTSD200~VBELN = @INTAB-VBELN
      AND  ZTSD200A~POSNR = @INTAB-POSNR
      AND  ZTSD200A~ZSCBZ = ''
      .
  SORT IT_200 BY VBELN POSNR.
  SELECT
     ZTSD220~ZVBELN,
     ZTSD220A~ZPOSNR,
     ZTSD220~VBELN,
     ZTSD220A~POSNR,
     ZTSD220A~ZPCL
     INTO TABLE @DATA(IT_220)
     FROM ZTSD220
     INNER JOIN ZTSD220A ON ZTSD220A~ZVBELN = ZTSD220~ZVBELN
     FOR ALL ENTRIES IN @INTAB
     WHERE ZTSD220~VBELN = @INTAB-VBELN
      AND  ZTSD220A~POSNR = @INTAB-POSNR
      AND  ZTSD220A~ZSCBZ = ''
      .
  SORT IT_220 BY VBELN POSNR.


  LOOP AT INTAB.
    CLEAR:OUTTAB.
    MOVE-CORRESPONDING INTAB TO OUTTAB.
    READ TABLE IT_VBAK INTO DATA(WA_VBAK) WITH KEY VBELN = INTAB-VBELN BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      READ TABLE IT_KONV INTO DATA(WA_KONV) WITH KEY KNUMV = WA_VBAK-KNUMV
                                                     KPOSN = INTAB-POSNR
                                                     KSCHL = 'ZPR0'
                                                     BINARY SEARCH.
      READ TABLE IT_ZTSD207 INTO DATA(WA_ZTSD207) WITH KEY VBELN = INTAB-VBELN
                                                           POSNR = INTAB-POSNR
                                                           BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        TABIX = SY-TABIX.
        LOOP AT IT_ZTSD207 INTO WA_ZTSD207 FROM TABIX.
          IF WA_ZTSD207-VBELN NE INTAB-VBELN
            OR WA_ZTSD207-POSNR NE INTAB-POSNR.
            EXIT.
          ENDIF.
          OUTTAB-JGMXL = OUTTAB-JGMXL + WA_ZTSD207-ZAMOUNT.
        ENDLOOP.
      ENDIF.
      READ TABLE IT_205A INTO WA_205A WITH KEY VBELN = INTAB-VBELN
                                               POSNR = INTAB-POSNR
                                               BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        TABIX = SY-TABIX.
        LOOP AT IT_205A INTO WA_205A FROM TABIX.
          IF WA_205A-VBELN NE INTAB-VBELN
            OR WA_205A-POSNR NE INTAB-POSNR.
            EXIT.
          ENDIF.
*验收量
          READ TABLE IT_YSKS WITH KEY ZPCDH = WA_205A-ZPCDH
                                      ZPCDHH = WA_205A-ZPCDHH
                                      BINARY SEARCH.
          IF SY-SUBRC EQ 0.
            OUTTAB-YSL = OUTTAB-YSL + OUTTAB-YSL.
          ENDIF.
          OUTTAB-PCL = WA_205A-ZPCSL + OUTTAB-PCL.
          READ TABLE IT_ZTPP206 INTO DATA(WA_ZTPP206) WITH KEY ZPCDH = WA_205A-ZPCDH
                                                               ZPCDHH = WA_205A-ZPCDHH
                                                               BINARY SEARCH.
          IF SY-SUBRC EQ 0.
            TABIX1 = SY-TABIX.
            LOOP AT IT_ZTPP206 INTO WA_ZTPP206 FROM TABIX.
              IF WA_ZTPP206-ZPCDH NE WA_205A-ZPCDH
                OR WA_ZTPP206-ZPCDHH NE WA_205A-ZPCDHH.
                EXIT.
              ENDIF.
              OUTTAB-JHL = OUTTAB-JHL + WA_ZTPP206-GSMNG.
*              OUTTAB-YSL = OUTTAB-YSL + WA_ZTPP206-ZCD
*                                     * WA_ZTPP206-ZXISHU
*                                     * WA_ZTPP206-ZKS / 1000.
            ENDLOOP.
          ENDIF.
        ENDLOOP.
      ENDIF.
      CLEAR ABGRU. "ADD
      READ TABLE IT_VBAP INTO WA_VBAP WITH KEY VGBEL = INTAB-VBELN
                                               VGPOS = INTAB-POSNR
                                               BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        ABGRU = WA_VBAP-ABGRU."ADD
        TABIX = SY-TABIX.
        LOOP AT IT_VBAP INTO WA_VBAP FROM TABIX.
          IF WA_VBAP-VGBEL NE INTAB-VBELN
            OR WA_VBAP-VGPOS NE INTAB-POSNR.
            EXIT.
          ENDIF.
          CASE WA_VBAP-VBTYP_ANA.
            WHEN 'C'.
*发货通知量
              OUTTAB-FHTZL = OUTTAB-FHTZL + WA_VBAP-KWMENG.
*计算发货量和开票量
              READ TABLE IT_LIPS INTO DATA(WA_LIPS) WITH KEY VGBEL = WA_VBAP-VBELN
                                                             VGPOS = WA_VBAP-POSNR
                                                             BINARY SEARCH.
              IF SY-SUBRC EQ 0.
                TABIX = SY-TABIX.
                LOOP AT IT_LIPS INTO WA_LIPS FROM TABIX.
                  IF WA_LIPS-VGBEL NE WA_VBAP-VBELN
                    OR WA_LIPS-VGPOS NE WA_VBAP-POSNR.
                    EXIT.
                  ENDIF.
                  OUTTAB-YTZL = OUTTAB-YTZL + WA_LIPS-LFIMG.
                  OUTTAB-FHL = OUTTAB-FHL + WA_LIPS-LFIMG.
                ENDLOOP.
              ENDIF.
              READ TABLE IT_VBRP INTO DATA(WA_VBRP) WITH KEY AUBEL = WA_VBAP-VBELN
                                                             AUPOS = WA_VBAP-POSNR
                                                             BINARY SEARCH.
              IF SY-SUBRC EQ 0.
                TABIX = SY-TABIX.
                LOOP AT IT_VBRP INTO WA_VBRP FROM TABIX.
                  IF WA_VBRP-AUBEL NE WA_VBAP-VBELN
                    OR WA_VBRP-AUPOS NE WA_VBAP-POSNR.
                    EXIT.
                  ENDIF.
                  OUTTAB-KPL = OUTTAB-KPL + WA_VBRP-FKIMG.
                ENDLOOP.
              ENDIF.
            WHEN OTHERS.
              OUTTAB-BCL = OUTTAB-BCL + WA_VBAP-KWMENG.
          ENDCASE.
        ENDLOOP.
      ENDIF.
      READ TABLE IT_KPSQ INTO DATA(WA_KPSQ) WITH KEY VBELN = INTAB-VBELN BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        TABIX = SY-TABIX.
        LOOP AT IT_KPSQ INTO WA_KPSQ FROM TABIX.
          IF WA_KPSQ-VBELN NE INTAB-VBELN.
            EXIT.
          ENDIF.
          OUTTAB-YKPL = OUTTAB-YKPL + WA_KPSQ-MENGE_GTSJ.
          OUTTAB-YKPJE = OUTTAB-YKPJE + WA_KPSQ-DMBTR_GTSJ.
        ENDLOOP.
      ENDIF.
    ENDIF.
    READ TABLE IT_GTRCONT INTO DATA(WA_GTRCONT) WITH KEY VBELN = INTAB-VBELN
                                                         POSNR = INTAB-POSNR
                                                         BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      TABIX = SY-TABIX.
      LOOP AT IT_GTRCONT INTO WA_GTRCONT FROM TABIX.
        IF WA_GTRCONT-VBELN NE INTAB-VBELN
          OR WA_GTRCONT-POSNR NE INTAB-POSNR.
          EXIT.
        ENDIF.
        OUTTAB-JSKPSL = OUTTAB-JSKPSL + WA_GTRCONT-MENGE_GTSJ.
        OUTTAB-JSKPJE = OUTTAB-JSKPJE + WA_GTRCONT-DMBTRDIFA_P.
      ENDLOOP.
    ENDIF.
    "ADD 20221212 BY HANWQ --BEGIN
    READ TABLE IT_ACCRYBK INTO DATA(WA_ACCRYBK) WITH KEY VBELN = INTAB-VBELN
                                                         POSNR = INTAB-POSNR
                                                         BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      TABIX = SY-TABIX.
      OUTTAB-SYYKPJE = OUTTAB-YKPJE.
      LOOP AT IT_ACCRYBK INTO WA_ACCRYBK FROM TABIX.
        IF WA_ACCRYBK-VBELN NE INTAB-VBELN OR WA_ACCRYBK-POSNR NE INTAB-POSNR.
          EXIT.
        ENDIF.
        OUTTAB-SYYKPJE = OUTTAB-SYYKPJE - WA_ACCRYBK-DMBTR_RYBK.
      ENDLOOP.
      IF ABGRU  = 'Z2'.
        OUTTAB-QZCLJE  = OUTTAB-SYYKPJE - ( OUTTAB-YKPJE - OUTTAB-KPJE ).
      ELSE.
        OUTTAB-YKPCHJE = OUTTAB-SYYKPJE - ( OUTTAB-YKPJE - OUTTAB-KPJE ).
      ENDIF.
    ENDIF.
    CLEAR OUTTAB-LYJHL.
    READ TABLE IT_200 INTO DATA(WA_2001) WITH KEY VBELN = OUTTAB-VBELN POSNR = OUTTAB-POSNR BINARY SEARCH.
    IF SY-SUBRC = 0.
      LOOP AT IT_200 INTO DATA(WA_200) FROM SY-TABIX.
        IF WA_200-VBELN NE OUTTAB-VBELN OR WA_200-POSNR NE OUTTAB-POSNR.
          EXIT.
        ENDIF.
        OUTTAB-LYJHL = OUTTAB-LYJHL + WA_200-ZPCL.
      ENDLOOP.
    ENDIF.
    READ TABLE IT_220 INTO DATA(WA_2201) WITH KEY VBELN = OUTTAB-VBELN POSNR = OUTTAB-POSNR BINARY SEARCH.
    IF SY-SUBRC = 0.
      LOOP AT IT_220 INTO DATA(WA_220) FROM SY-TABIX.
        IF WA_220-VBELN NE OUTTAB-VBELN OR WA_220-POSNR NE OUTTAB-POSNR.
          EXIT.
        ENDIF.
        OUTTAB-LYJHL = OUTTAB-LYJHL + WA_220-ZPCL.
      ENDLOOP.
    ENDIF.

    "ADD 20221212 BY HANWQ --END
    OUTTAB-FHJE = OUTTAB-FHL * WA_KONV-KBETR.
    OUTTAB-BCJE = OUTTAB-BCL * WA_KONV-KBETR.
    OUTTAB-THJE = OUTTAB-THL * WA_KONV-KBETR.
    APPEND OUTTAB.
  ENDLOOP.
  SORT OUTTAB BY VBELN POSNR.
ENDFUNCTION.
