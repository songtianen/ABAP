FUNCTION ZFM_GP_SD_MDM_KHZSJCJ.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(ZCZLX) TYPE  ZEMM_CZLX DEFAULT 'I'
*"  EXPORTING
*"     VALUE(FLAG) TYPE  ZEMM_FLAG
*"     VALUE(MESSAGE) TYPE  ZEMM_MESSAGE
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"  TABLES
*"      INTAB1 STRUCTURE  ZSSD215
*"      INTAB2 STRUCTURE  ZSSD216
*"      INTAB3 STRUCTURE  ZSSD217
*"      INTAB4 STRUCTURE  ZSSD218
*"----------------------------------------------------------------------
  ZFMDATASAVE1 'ZFM_GP_SD_MDM_KHZSJCJ'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  DEFINE CHECKINITIAL.
    IF &1 IS INITIAL.
      FLAG = 'N'.
      MESSAGE = &2 && '必填！'.
      ZFMDATASAVE2 'R'.
      RETURN .
    ENDIF.
  END-OF-DEFINITION.
  DEFINE DEFAULTVALUE.
    IF &1 IS INITIAL.
      &1 = &2.
    ENDIF.
  END-OF-DEFINITION.
  DATA : LV_MSG TYPE STRING.
  DATA : LV_MSG1 TYPE STRING.
  DATA : LV_BPARTNERGUID TYPE BU_PARTNER_GUID_BAPI.
  DATA : LV_BPARTNERGUID1 TYPE BU_PARTNER_GUID_BAPI.
  DATA : LV_BPARTNERGUID2 TYPE BU_PARTNER_GUID_BAPI.
  DATA:LT_RETURN_TAX TYPE TABLE OF BAPIRET2 WITH HEADER LINE,
       LT_RETURN_FRG TYPE TABLE OF BAPIRET2 WITH HEADER LINE.
  DATA:CZLX TYPE  ZEMM_CZLX .
  DATA:LT_RETURN_UKMBP TYPE UKM_T_MONITOR_RETURN .
  DATA:IT_ZTSD212 TYPE TABLE OF ZTSD212 WITH HEADER LINE .

  IF LINES( INTAB1[] ) <> '1' .
    FLAG = 'N' .
    MESSAGE = '只允许创建或修改一个客户！' .
    ZFMDATASAVE2 'R'.
    RETURN .
  ENDIF.
  LOOP AT INTAB1.
    "检查必填
    CHECKINITIAL INTAB1-PARTENER 'MDM编码' .
    CHECKINITIAL INTAB1-NAME_ORG1 '名称' .
    CHECKINITIAL INTAB1-LAND1 '国家' .
    CHECKINITIAL INTAB1-REGIO '省' .
*    CHECKINITIAL INTAB1-WERKS '工厂' .
    CHECKINITIAL INTAB1-VTWEG '分销渠道' .
    CHECKINITIAL INTAB1-TAXNUMXL '业务伙伴税号' .
    "加默认值
    DEFAULTVALUE INTAB1-TYPE '2'."业务伙伴类别
    DEFAULTVALUE INTAB1-PARTNER_ROLE 'ZWSDCUX'."BP 角色分组类别
    DEFAULTVALUE INTAB1-BU_GROUP 'Z100'."业务伙伴类别
    DEFAULTVALUE INTAB1-SPRAS SY-LANGU ."语言
  ENDLOOP.
*  LOOP AT INTAB4."可不填，但填就最少需要 银行名称 银行账号 账户持有人
*    CHECKINITIAL INTAB4-ACCNAME '银行名称' .
*    CHECKINITIAL INTAB4-BANKN '银行账号' .
**    CHECKINITIAL INTAB4-KOINH '账户持有人' .
*  ENDLOOP.
  "第一版逻辑 根据 itab1工厂 带出 销售组织 公司视图
*  IF INTAB2[] IS INITIAL AND INTAB3[] IS INITIAL.
*    READ TABLE INTAB1 INDEX 1.
*    SELECT SINGLE
*     VKORG
*     VTWEG
*     INTO (INTAB3-VKORG,INTAB3-VTWEG)
*     FROM ZTSD204
*     WHERE WERKS = INTAB1-WERKS.
*    INTAB3-SPART = '00'.
*    APPEND INTAB3.
*    SELECT SINGLE
*      BUKRS
*      INTO INTAB2-BUKRS
*      FROM TVKO
*      WHERE VKORG = INTAB3-VKORG.
*    INTAB2-TAXKD = '0001'.
*    INTAB2-AKONT = '2203020000'.
*    APPEND INTAB2.
*
*  ENDIF.
  "第三版逻辑 ZCZLX 启用，自行判断是否下发过
  READ TABLE INTAB1 INDEX 1.


  SELECT SINGLE
    BUT000~PARTNER
    INTO @DATA(PARTNER)
    FROM BUT000
    WHERE BUT000~PARTNER = @INTAB1-PARTENER.
  IF SY-SUBRC <> 0.
    CZLX = 'C'."创建客户
  ELSE.
    SELECT SINGLE
      KNVV~KLABC
      INTO @DATA(KLABC)
      FROM KNVV
      WHERE KNVV~KUNNR = @INTAB1-PARTENER
       AND  KNVV~VTWEG = @INTAB1-VTWEG .
    IF SY-SUBRC <> 0 .
      CZLX = 'I'."插入销售视图 、更新一般视图

      "排除已扩充的公司视图
      SELECT
        BUKRS
        INTO TABLE @DATA(IT_BUKRS)
        FROM KNB1
        WHERE KNB1~KUNNR = @INTAB1-PARTENER
         .
      SORT IT_BUKRS BY BUKRS.
    ELSE .
      IF KLABC = INTAB1-KLABC .
        CZLX = 'U'."更新一般视图
      ELSE.
        CZLX = 'F'."更新一般视图 更新销售视图
      ENDIF.
    ENDIF.
  ENDIF.
  "第二版逻辑 根据 itab1 分销渠道 带出 所有 的 销售组织 公司视图
  IF INTAB2[] IS INITIAL AND INTAB3[] IS INITIAL AND ( CZLX = 'I' OR CZLX = 'C' OR CZLX = 'F').
    SELECT
      ZTSD204~WERKS,
      ZTSD204~VKORG,
      TVKO~BUKRS,
      ZTSD204~VTWEG
     INTO TABLE @DATA(IT_204)
     FROM ZTSD204
     INNER JOIN TVKO ON TVKO~VKORG = ZTSD204~VKORG
     WHERE ZTSD204~VTWEG = @INTAB1-VTWEG.
    IF SY-SUBRC <> 0.
      FLAG = 'N' .
      MESSAGE = '未查询到分销渠道对应的销售组织及公司！' .
      ZFMDATASAVE2 'R'.
    ENDIF.

    LOOP AT IT_204 INTO DATA(WA_204).
      INTAB3-VKORG = WA_204-VKORG.
      INTAB3-VTWEG = WA_204-VTWEG.
      INTAB3-SPART = '00'.
      INTAB3-WAERS = 'CNY'.
      INTAB3-PODKZ = 'X'.
*      INTAB3-ZTERM = '0001'.
      INTAB3-KLABC = INTAB1-KLABC.
      INTAB3-VSBED = '01'.
      INTAB3-KTGRD = '01'.
      COLLECT INTAB3.
      IF CZLX = 'F'.
      ELSEIF CZLX = 'I'.
        READ TABLE IT_BUKRS INTO DATA(WA_BUKRS) WITH KEY BUKRS = WA_204-BUKRS BINARY SEARCH.
        IF SY-SUBRC <> 0.
          INTAB2-BUKRS = WA_204-BUKRS.
          INTAB2-ZTERM = '0001'.
          INTAB2-AKONT = '2203020000'.
          COLLECT INTAB2.
        ENDIF.
      ELSE.
        INTAB2-BUKRS = WA_204-BUKRS.
        INTAB2-ZTERM = '0001'.
        INTAB2-AKONT = '2203020000'.
        COLLECT INTAB2.
      ENDIF.
    ENDLOOP.
  ENDIF.

  READ TABLE INTAB1 INDEX 1.
  CASE CZLX.
    WHEN 'C'.
      "校验系统中是否已存在当前税号，如果存在，则报错修改
      SELECT *
        INTO TABLE @DATA(IT_DFKKBPTAXNUM)
        FROM DFKKBPTAXNUM
        WHERE TAXNUMXL = @INTAB1-TAXNUMXL
        .
      DATA:TAX_MSG TYPE CHAR200.
      IF IT_DFKKBPTAXNUM IS NOT INITIAL.
        FLAG = 'N'.
        CONCATENATE '系统中已存在导入的税号，客户号：' INTAB1-PARTENER  '请修改!' INTO MESSAGE.
        ZFMDATASAVE2 'R'.
        RETURN.
      ENDIF.
      PERFORM CREATE_CUSTOMER TABLES INTAB1 INTAB2 INTAB3 INTAB4 CHANGING FLAG RTYPE MESSAGE .
      CLEAR: IT_ZTSD212,IT_ZTSD212[].
      READ TABLE INTAB1 INDEX 1.
      IT_ZTSD212-PARTNER  = INTAB1-PARTENER.
      IT_ZTSD212-LIFNR    = ''.
      IT_ZTSD212-KUNNR    = INTAB1-KUNNR.
      IT_ZTSD212-ERDATE   = SY-UNAME.
      IT_ZTSD212-ERTIME   = SY-UZEIT.
      IT_ZTSD212-ERNAME   = SY-DATUM.
      APPEND IT_ZTSD212.
      INSERT ZTSD212 FROM TABLE IT_ZTSD212.
      COMMIT WORK .
    WHEN 'I'.

      PERFORM INSERT_CUSTOMER TABLES INTAB1 INTAB2 INTAB3 INTAB4 CHANGING FLAG RTYPE MESSAGE .
      READ TABLE INTAB1 INDEX 1.
      UPDATE ZTSD212
         SET KUNNR = INTAB1-KUNNR
         WHERE PARTNER  = INTAB1-PARTENER.
      COMMIT WORK .

    WHEN 'U'.

      PERFORM UPDATE_UNIVERSAL TABLES INTAB1 INTAB2 INTAB3 INTAB4 CHANGING FLAG RTYPE MESSAGE .

      READ TABLE INTAB1 INDEX 1.
      UPDATE ZTSD212
         SET KUNNR = INTAB1-KUNNR
         WHERE PARTNER  = INTAB1-PARTENER.
      COMMIT WORK .

    WHEN 'F'.

      PERFORM UPDATE_CUSTOMER TABLES INTAB1 INTAB2 INTAB3 INTAB4 CHANGING FLAG RTYPE MESSAGE .
      READ TABLE INTAB1 INDEX 1.
      UPDATE ZTSD212
         SET KUNNR = INTAB1-KUNNR
         WHERE PARTNER  = INTAB1-PARTENER.
      COMMIT WORK .
*    WHEN 'D'.
*      "检查是否有kunnr
*      SELECT SINGLE
*        BUT000~PARTNER
*       INTO @DATA(PARTNER_D)
*       FROM BUT000
*       WHERE PARTNER = @INTAB1-PARTENER.
*      IF SY-SUBRC <> 0 .
*        FLAG = 'N'.
*        MESSAGE = '客户 编码不存在！' .
*        ZFMDATASAVE2 'R'.
*        RETURN.
*      ENDIF.


    WHEN OTHERS.
      FLAG = 'N'.
      RTYPE = 'E'.
      MESSAGE = '客户编码不存在！' .
      ZFMDATASAVE2 'R'.
      RETURN.
  ENDCASE.

  ZFMDATASAVE2 'R'.

ENDFUNCTION.


FORM CREATE_CUSTOMER TABLES INTAB1 STRUCTURE ZSSD215
                            INTAB2 STRUCTURE ZSSD216
                            INTAB3 STRUCTURE ZSSD217
                            INTAB4 STRUCTURE ZSSD218
                     CHANGING FLAG    TYPE ZEMM_FLAG
                              RTYPE   TYPE BAPI_MTYPE
                              MESSAGE TYPE ZEMM_MESSAGE

                      .


  CONSTANTS : C_PARVW1 TYPE PARVW VALUE 'SP', "售达方
              C_PARVW2 TYPE PARVW VALUE 'BP', "收票方
              C_PARVW3 TYPE PARVW VALUE 'PY', "付款方
              C_PARVW4 TYPE PARVW VALUE 'SH'. "送达方'

  DATA : LT_ROLES TYPE BUS_EI_BUPA_ROLES_T,         "Role Data
         LS_ROLES TYPE BUS_EI_BUPA_ROLES.

  DATA : LT_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS_T,
         LS_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS.

  DATA : LT_PHONE TYPE BUS_EI_BUPA_TELEPHONE_T,
         LS_PHONE TYPE BUS_EI_BUPA_TELEPHONE.

  DATA : LT_TEL  TYPE TABLE OF BAPIADTEL,
         LS_TEL  TYPE BAPIADTEL,
         LT_TELX TYPE TABLE OF BAPIADTELX,
         LS_TELX TYPE BAPIADTELX.

  DATA : LT_FAX TYPE BUS_EI_BUPA_FAX_T,           "传真
         LS_FAX TYPE BUS_EI_BUPA_FAX.

  DATA : LT_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK_T,
         LS_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK.

  DATA : LT_TAX TYPE BUS_EI_BUPA_TAXNUMBER_T,
         LS_TAX TYPE BUS_EI_BUPA_TAXNUMBER.

  DATA : LT_ID TYPE BUS_EI_BUPA_IDENTIFICATION_T,
         LS_ID TYPE BUS_EI_BUPA_IDENTIFICATION.

  DATA : LT_COMPANY TYPE CMDS_EI_COMPANY_T,
         LS_COMPANY TYPE CMDS_EI_COMPANY.

  DATA : LT_TEXT TYPE CVIS_EI_TEXT_T,
         LS_TEXT TYPE CVIS_EI_TEXT.

  DATA : LT_LINES TYPE TLINE_TAB,
         LS_LINES TYPE TLINE.

  DATA : LT_TAX_IND TYPE CMDS_EI_TAX_IND_T,
         LS_TAX_IND TYPE CMDS_EI_TAX_IND.

  DATA : LT_SALES TYPE CMDS_EI_SALES_T,
         LS_SALES TYPE CMDS_EI_SALES.

  DATA : LT_FUNCTIONS TYPE CMDS_EI_FUNCTIONS_T,
         LS_FUNCTIONS TYPE CMDS_EI_FUNCTIONS.

  DATA : LT_DATA TYPE CVIS_EI_EXTERN_T,
         LS_DATA TYPE CVIS_EI_EXTERN.

  DATA : LT_PARTNERGUID_LIST TYPE BU_PARTNER_GUID_T,
         LS_PARTNERGUID_LIST LIKE LINE OF LT_PARTNERGUID_LIST.

  DATA : LT_CUSTOMER_LIST TYPE CVIS_CUST_LINK_T,
         LS_CUSTOMER_LIST TYPE CVI_CUST_LINK.

  DATA : LT_RETURN TYPE BAPIRETM,
         LS_RETURN TYPE BAPIRETI.

  DATA : LS_BANK_DATA TYPE BUS_EI_BUPA_BANKDETAIL.

  DATA : LS_PARTNER  TYPE BUS_EI_EXTERN,
         LS_CUSTOMER TYPE CMDS_EI_EXTERN.

  DATA : LS_MSG        TYPE BAPIRETC.

  DATA : LT_MASTER_DATA TYPE CMDS_EI_MAIN,
         LS_MASTER_DATA TYPE CMDS_EI_EXTERN.

  DATA : LT_ERROR_MESS TYPE CVIS_MESSAGE,
         LS_ERROR_MESS TYPE BAPIRET2.

  DATA : LS_BASIC TYPE CMDS_EI_CMD_CENTRAL.

  DATA : LV_BPARTNERGUID TYPE BU_PARTNER_GUID_BAPI,
         LV_GUID         TYPE GUID_16,
         LV_BANKY        TYPE BUT0BK-BANKL.

  DATA : LT_RETURN_TEL TYPE STANDARD TABLE OF BAPIRET2,
         LS_RETURN_TEL TYPE BAPIRET2.

  DATA : C_MESSAGE TYPE CHAR255.
  DATA : LV_ERROR.

  CLEAR : LS_PARTNER.
  CLEAR : LV_BPARTNERGUID.
  CLEAR : LT_DATA.

*  CLEAR LV_BPARTNERGUID.
*  WAIT UP TO '0.01' SECONDS.
*  TRY .
*      LV_BPARTNERGUID = CL_UUID_FACTORY=>CREATE_SYSTEM_UUID( )->CREATE_UUID_X16( ).
*    CATCH CX_UUID_ERROR.
*
*      "返回消息
*
*  ENDTRY.
*  "开始

**********************************************************************
* 基础数据
**********************************************************************

  CLEAR:LS_PARTNER,LV_GUID,LV_BPARTNERGUID.
*& 获取GUID，根据GUID生成客户编码
  CALL FUNCTION 'GUID_CREATE'
    IMPORTING
      EV_GUID_16 = LV_GUID.
  CALL FUNCTION 'GUID_CONVERT'
    EXPORTING
      IV_GUID_X16            = LV_GUID
    IMPORTING
      EV_GUID_C32            = LV_BPARTNERGUID
    EXCEPTIONS
      NO_UNICODE_SUPPORT_YET = 1
      PARAMETERS_ERROR       = 2.
  CHECK LV_BPARTNERGUID IS NOT INITIAL.
  LS_PARTNER-HEADER-OBJECT_TASK = 'I'.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID          = LV_BPARTNERGUID.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER              = INTAB1-PARTENER.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-CATEGORY = INTAB1-TYPE.  "2      "业务伙伴类别(组织)
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-GROUPING = INTAB1-BU_GROUP." 'Z100'.  "科目组

  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-TITLE_KEY = '0003'.                 " 称谓
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME1      = INTAB1-NAME_ORG1.      "名称1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME2      = INTAB1-NAME_ORG2.      "名称2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME3      = INTAB1-NAME_ORG3.      "名称3
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME4      = INTAB1-NAME_ORG4.      "名称4
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM1 = INTAB1-BU_SORT1.       "搜索项1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM2 = INTAB1-BU_SORT2.       "搜索项2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-PARTNERLANGUAGE = SY-LANGU.

  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-TITLE_KEY   = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME1      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME2      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME3      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME4      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM1 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM2 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-PARTNERLANGUAGE = 'X'.

**********************************************************************
* Role
**********************************************************************
  CLEAR : LT_ROLES, LS_ROLES.
  LS_ROLES-TASK = 'I'.
  LS_ROLES-DATA_KEY = 'FLCU00'.     "FI客户
  APPEND LS_ROLES TO LT_ROLES.
  LS_ROLES-TASK = 'I'.
  LS_ROLES-DATA_KEY = 'FLCU01'.     "客户
  APPEND LS_ROLES TO LT_ROLES.
  LS_ROLES-TASK = 'I'.
  LS_ROLES-DATA_KEY = 'UKM000'.     "客户
  APPEND LS_ROLES TO LT_ROLES.
  LS_PARTNER-CENTRAL_DATA-ROLE-ROLES = LT_ROLES.

*---> Fullfill address 填充地址数据
  CLEAR : LT_ADDRESSES, LS_ADDRESSES.

  LS_ADDRESSES-TASK = 'I'.
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU = SY-LANGU."语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-C_O_NAME   = INTAB1-ZRECEIVER.         "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATA-POSTL_COD1 = INTAB1-PSTLZ.            "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATA-STREET     = INTAB1-STREET.           "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL1 = INTAB1-STR_SUPPL1.       "收票地址2
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL2 = INTAB1-STR_SUPPL2.       "收票地址3
  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL3 = INTAB1-STR_SUPPL3.       "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATA-LOCATION   = INTAB1-LOCATION.         "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATA-COUNTRY    = INTAB1-LAND1.              "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATA-REGION     = INTAB1-REGIO.              "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATA-CITY       = INTAB1-ORT01.              "城市
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU      = INTAB1-SPRAS.              "语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-LANGUISO   = INTAB1-SPRAS.             "语言

  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU = 'X'."语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-C_O_NAME   = 'X'.    "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATAX-POSTL_COD1 = 'X'.    "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STREET     = 'X'.    "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL1 = 'X'.    "地址：2
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL2 = 'X'.    "地址：3
  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL3 = 'X'.    "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATAX-LOCATION   = 'X'.    "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATAX-COUNTRY    = 'X'.    "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-REGION     = 'X'.    "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-CITY       = 'X'.    "城市
  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU      = 'X'.    "语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU_ISO  = 'X'.    "语言


*--> 电话
  CLEAR : LS_PHONE, LT_PHONE.
  LS_PHONE-CONTACT-TASK = 'I'.
  LS_PHONE-CONTACT-DATA-R_3_USER = INTAB1-TELNR_CALL.  "电话
  LS_PHONE-CONTACT-DATAX-R_3_USER = 'X'.

  APPEND LS_PHONE TO LT_PHONE.

  APPEND LS_ADDRESSES TO LT_ADDRESSES.

  LS_PARTNER-CENTRAL_DATA-ADDRESS-ADDRESSES = LT_ADDRESSES.

**-->增值税信息
  LS_TAX-TASK = 'I'.
  LS_TAX-DATA_KEY-TAXTYPE   = 'CN5'.
*  LS_TAX-DATA_KEY-TAXNUMBER = INTAB1-TAXNUMXL.
  LS_TAX-DATA_KEY-TAXNUMXL  = INTAB1-TAXNUMXL.
  APPEND LS_TAX TO LT_TAX.
  LS_PARTNER-CENTRAL_DATA-TAXNUMBER-TAXNUMBERS = LT_TAX.


**-->银行信息
  LOOP AT INTAB4.
    IF INTAB4-BANKS <> '' AND INTAB4-BANKL <> '' AND INTAB4-BANKN <> ''.
      LS_BANK_DATA-TASK = 'I'.
      LS_BANK_DATA-DATA-BANK_CTRY = INTAB4-BANKS.          "银行国家代码
      LS_BANK_DATA-DATA-BANK_KEY  = INTAB4-BANKL.          "银行代码
      LS_BANK_DATA-DATA-BANK_ACCT = INTAB4-BANKN(18).      "银行帐户号码
      LS_BANK_DATA-DATA-EXTERNALBANKID = INTAB4-BANKN+18.  "银行帐户号码18位后内容
      LS_BANK_DATA-DATA-ACCOUNTHOLDER = INTAB4-KOINH.      "账户持有人
      LS_BANK_DATA-DATA-COLL_AUTH  = INTAB4-XEZER.         "托收授权-开户行

      LS_BANK_DATA-DATAX-BANK_CTRY      = 'X'.  "银行国家代码
      LS_BANK_DATA-DATAX-BANK_KEY       = 'X'.  "银行代码
      LS_BANK_DATA-DATAX-BANK_ACCT      = 'X'.  "银行帐户号码
      LS_BANK_DATA-DATAX-EXTERNALBANKID = 'X'.
      LS_BANK_DATA-DATAX-ACCOUNTHOLDER  = 'X'.  "账户持有人
      LS_BANK_DATA-DATAX-COLL_AUTH      = 'X'.  "托收授权-开户行
      APPEND LS_BANK_DATA TO LS_PARTNER-CENTRAL_DATA-BANKDETAIL-BANKDETAILS.
    ENDIF.
  ENDLOOP.


**********************************************************************
* 客户中心数据
**********************************************************************
* 客户数据表头
  CLEAR LS_CUSTOMER.
  LS_CUSTOMER-HEADER-OBJECT_TASK = 'I'.
  CLEAR: LS_TAX_IND , LT_TAX_IND.
  LS_TAX_IND-TASK = 'I'.
  LS_TAX_IND-DATA_KEY-ALAND = 'CN'.
  LS_TAX_IND-DATA_KEY-TATYP = 'MWST'.
  LS_TAX_IND-DATA-TAXKD  = '1'.  "客户税分类
  LS_TAX_IND-DATAX-TAXKD = 'X'.
  APPEND LS_TAX_IND TO LT_TAX_IND.

  LS_CUSTOMER-CENTRAL_DATA-TAX_IND-TAX_IND = LT_TAX_IND.

**********************************************************************
* 客户销售视图
**********************************************************************
  CLEAR : LT_SALES.
  CLEAR : LT_FUNCTIONS.
  LOOP AT INTAB3.
    CLEAR  LS_SALES.
    LS_SALES-TASK = 'I'.
    LS_SALES-DATA_KEY-VKORG = INTAB3-VKORG. "销售组织
    LS_SALES-DATA_KEY-VTWEG = INTAB3-VTWEG. "分销渠道
    LS_SALES-DATA_KEY-SPART = INTAB3-SPART. "产品组
*  LS_SALES-DATA-VKBUR     = INTAB3-VKBUR. "销售办公室
*  LS_SALES-DATA-VKGRP     = INTAB3-VKGRP. "销售组
*  LS_SALES-DATA-KDGRP     = INTAB3-KDGRP. "客户组
    LS_SALES-DATA-WAERS     = 'CNY'. "货币
    LS_SALES-DATA-KALKS     = '1'. "客户定价过程
    LS_SALES-DATA-VSBED     = '01'. "装运条件
*  LS_SALES-DATA-PLTYP     = GS_UPLOAD-PLTYP. "价格清单类型
*  LS_SALES-DATA-INCOV     = IS_DATA1-INCOV. "国际贸易条款版本
*  LS_SALES-DATA-INCO1     = GS_UPLOAD-INCO1. "国际贸易条款
*  LS_SALES-DATA-INCO2_L   = GS_UPLOAD-INCO2_L. "国际贸易条款位置 1
*  LS_SALES-DATA-INCO3_L   = IS_DATA1-INCO3_L. "国际贸易条款位置 2
    LS_SALES-DATA-KTGRD     = INTAB3-KTGRD.   "科目分配组
    LS_SALES-DATA-ZTERM     = '0001'.   "付款条件
    LS_SALES-DATA-KZAZU     = 'X'. "订单组合标识
    LS_SALES-DATA-PODKZ     = 'X'. "POD 相关
    LS_SALES-DATA-KLABC     = INTAB3-KLABC. "客户等级
*  LS_SALES-DATAX-VKBUR     = 'X'. "销售办公室
*  LS_SALES-DATAX-VKGRP     = 'X'. "销售组
*  LS_SALES-DATAX-KDGRP     = 'X'. "客户组
    LS_SALES-DATAX-WAERS     = 'X'. "货币
    LS_SALES-DATAX-KALKS     = 'X'. "客户定价过程
    LS_SALES-DATAX-VSBED     = 'X'. "装运条件
*  LS_SALES-DATAX-PLTYP     = 'X'. "价格清单类型
*  LS_SALES-DATAX-INCOV     = 'X'. "国际贸易条款版本
*  LS_SALES-DATAX-INCO1     = 'X'. "国际贸易条款
*  LS_SALES-DATAX-INCO2_L   = 'X'. "国际贸易条款位置 1
*  LS_SALES-DATAX-INCO3_L   = 'X'. "国际贸易条款位置 2
*  LS_SALES-DATAX-KTGRD     = 'X'. "科目分配组
    LS_SALES-DATAX-ZTERM     = 'X'. "付款条件
    LS_SALES-DATAX-KZAZU     = 'X'."订单组合标识
    LS_SALES-DATA-PODKZ      = 'X'. "POD 相关
    APPEND LS_SALES TO LT_SALES.
    LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.

**********************************************************************
* 销售视图-伙伴
**********************************************************************
    CLEAR : LS_FUNCTIONS.
    LS_FUNCTIONS-TASK = 'I'.
    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW1  "售达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW2 "收票方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW3 "付款方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW4 "送达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

  ENDLOOP.

  LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.
**********************************************************************
* 客户公司代码视图
**********************************************************************
  CLEAR : LT_COMPANY.
  LOOP AT INTAB2.
    CLEAR : LS_COMPANY.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'   " 统驭科目补零
      EXPORTING
        INPUT  = INTAB2-AKONT
      IMPORTING
        OUTPUT = INTAB2-AKONT.

    LS_COMPANY-TASK = 'I'.
    LS_COMPANY-DATA_KEY-BUKRS = INTAB2-BUKRS   . " 公司代码
    LS_COMPANY-DATA-AKONT     = INTAB2-AKONT   . " 统驭科目
    LS_COMPANY-DATA-ZTERM     = INTAB2-ZTERM   . " 付款条件

    LS_COMPANY-DATAX-AKONT = 'X'.
    LS_COMPANY-DATAX-ZTERM = 'X'.
    APPEND LS_COMPANY TO LT_COMPANY.


  ENDLOOP.
  LS_CUSTOMER-COMPANY_DATA-COMPANY = LT_COMPANY.

*--> 创建BP以及员工
  CLEAR : LT_DATA, LT_DATA.
  LS_DATA-PARTNER  = LS_PARTNER.
  LS_DATA-CUSTOMER = LS_CUSTOMER.
  APPEND LS_DATA TO LT_DATA.

  CALL FUNCTION 'CVI_EI_INBOUND_MAIN'
    EXPORTING
      I_DATA   = LT_DATA
*     I_EXT_DATA       =
    IMPORTING
      E_RETURN = LT_RETURN.

  CLEAR C_MESSAGE.
  LOOP AT LT_RETURN INTO LS_RETURN.
    LOOP AT LS_RETURN-OBJECT_MSG INTO LS_MSG WHERE TYPE = 'E' OR TYPE = 'A'.
      CONCATENATE C_MESSAGE LS_MSG-MESSAGE INTO C_MESSAGE.
    ENDLOOP.
  ENDLOOP.


  IF C_MESSAGE EQ ''.
    CLEAR:LT_CUSTOMER_LIST,LT_PARTNERGUID_LIST,LS_CUSTOMER_LIST,LS_PARTNERGUID_LIST.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = ABAP_TRUE.
*    PERFORM BAPIRUN(ZPUBFORM) USING 'S'.
*    GS_UPLOAD-DENG = C_GREEN.
    FLAG = 'Y'.
    RTYPE = 'S'.
    MESSAGE = '创建成功！'.

  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*    GS_UPLOAD-DENG    = C_RED.
    MESSAGE = C_MESSAGE.
  ENDIF.

ENDFORM.


FORM INSERT_CUSTOMER TABLES INTAB1 STRUCTURE ZSSD215
                            INTAB2 STRUCTURE ZSSD216
                            INTAB3 STRUCTURE ZSSD217
                            INTAB4 STRUCTURE ZSSD218
                     CHANGING FLAG    TYPE ZEMM_FLAG
                              RTYPE   TYPE BAPI_MTYPE
                              MESSAGE TYPE ZEMM_MESSAGE
                       .

  CONSTANTS : C_PARVW1 TYPE PARVW VALUE 'SP', "售达方
              C_PARVW2 TYPE PARVW VALUE 'BP', "收票方
              C_PARVW3 TYPE PARVW VALUE 'PY', "付款方
              C_PARVW4 TYPE PARVW VALUE 'SH'. "送达方'

  DATA : LT_ROLES TYPE BUS_EI_BUPA_ROLES_T,         "Role Data
         LS_ROLES TYPE BUS_EI_BUPA_ROLES.

  DATA : LT_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS_T,
         LS_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS.

  DATA : LT_PHONE TYPE BUS_EI_BUPA_TELEPHONE_T,
         LS_PHONE TYPE BUS_EI_BUPA_TELEPHONE.

  DATA : LT_TEL  TYPE TABLE OF BAPIADTEL,
         LS_TEL  TYPE BAPIADTEL,
         LT_TELX TYPE TABLE OF BAPIADTELX,
         LS_TELX TYPE BAPIADTELX.

  DATA : LT_FAX TYPE BUS_EI_BUPA_FAX_T,           "传真
         LS_FAX TYPE BUS_EI_BUPA_FAX.

  DATA : LT_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK_T,
         LS_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK.

  DATA : LT_TAX TYPE BUS_EI_BUPA_TAXNUMBER_T,
         LS_TAX TYPE BUS_EI_BUPA_TAXNUMBER.

  DATA : LT_ID TYPE BUS_EI_BUPA_IDENTIFICATION_T,
         LS_ID TYPE BUS_EI_BUPA_IDENTIFICATION.

  DATA : LT_COMPANY TYPE CMDS_EI_COMPANY_T,
         LS_COMPANY TYPE CMDS_EI_COMPANY.

  DATA : LT_TEXT TYPE CVIS_EI_TEXT_T,
         LS_TEXT TYPE CVIS_EI_TEXT.

  DATA : LT_LINES TYPE TLINE_TAB,
         LS_LINES TYPE TLINE.

  DATA : LT_TAX_IND TYPE CMDS_EI_TAX_IND_T,
         LS_TAX_IND TYPE CMDS_EI_TAX_IND.

  DATA : LT_SALES TYPE CMDS_EI_SALES_T,
         LS_SALES TYPE CMDS_EI_SALES.

  DATA : LT_FUNCTIONS TYPE CMDS_EI_FUNCTIONS_T,
         LS_FUNCTIONS TYPE CMDS_EI_FUNCTIONS.

  DATA : LT_DATA TYPE CVIS_EI_EXTERN_T,
         LS_DATA TYPE CVIS_EI_EXTERN.

  DATA : LT_PARTNERGUID_LIST TYPE BU_PARTNER_GUID_T,
         LS_PARTNERGUID_LIST LIKE LINE OF LT_PARTNERGUID_LIST.

  DATA : LT_CUSTOMER_LIST TYPE CVIS_CUST_LINK_T,
         LS_CUSTOMER_LIST TYPE CVI_CUST_LINK.

  DATA : LT_RETURN TYPE BAPIRETM,
         LS_RETURN TYPE BAPIRETI.

  DATA : LS_BANK_DATA TYPE BUS_EI_BUPA_BANKDETAIL.

  DATA : LS_PARTNER  TYPE BUS_EI_EXTERN,
         LS_CUSTOMER TYPE CMDS_EI_EXTERN.

  DATA : LS_MSG        TYPE BAPIRETC.

  DATA : LT_MASTER_DATA TYPE CMDS_EI_MAIN,
         LS_MASTER_DATA TYPE CMDS_EI_EXTERN.

  DATA : LT_ERROR_MESS TYPE CVIS_MESSAGE,
         LS_ERROR_MESS TYPE BAPIRET2.

  DATA : LS_BASIC TYPE CMDS_EI_CMD_CENTRAL.

  DATA : LV_BPARTNERGUID TYPE BU_PARTNER_GUID_BAPI,
         LV_GUID         TYPE GUID_16,
         LV_BANKY        TYPE BUT0BK-BANKL.

  DATA : LT_RETURN_TEL TYPE STANDARD TABLE OF BAPIRET2,
         LS_RETURN_TEL TYPE BAPIRET2.

  DATA : C_MESSAGE TYPE CHAR255.
  DATA : LV_ERROR.

  CLEAR : LS_PARTNER.
  CLEAR : LV_BPARTNERGUID.
  CLEAR : LT_DATA.


**********************************************************************
* 基础数据
**********************************************************************

  READ TABLE INTAB1 INDEX 1.
  SELECT SINGLE
         PARTNER_GUID
         INTO @DATA(PARTNER_GUID)
         FROM BUT000
         WHERE PARTNER = @INTAB1-PARTENER.
*  CALL FUNCTION 'GUID_CONVERT'
*    EXPORTING
*      IV_GUID_X16            = PARTNER_GUID
*    IMPORTING
*      EV_GUID_C32            = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID
*    EXCEPTIONS
*      NO_UNICODE_SUPPORT_YET = 1
*      PARAMETERS_ERROR       = 2.
*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'   " 客户编码补零
*    EXPORTING
*      INPUT  = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER
*    IMPORTING
*      OUTPUT = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER.

  LS_PARTNER-HEADER-OBJECT_TASK = 'U'.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER = INTAB1-PARTENER.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID  = PARTNER_GUID.
*  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID          = LV_BPARTNERGUID.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-CATEGORY = INTAB1-TYPE.  "2      "业务伙伴类别(组织)
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-GROUPING = INTAB1-BU_GROUP." 'Z100'.  "科目组

  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-TITLE_KEY = '0003'.                 " 称谓
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME1      = INTAB1-NAME_ORG1.      "名称1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME2      = INTAB1-NAME_ORG2.      "名称2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME3      = INTAB1-NAME_ORG3.      "名称3
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME4      = INTAB1-NAME_ORG4.      "名称4
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM1 = INTAB1-BU_SORT1.       "搜索项1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM2 = INTAB1-BU_SORT2.       "搜索项2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-PARTNERLANGUAGE = SY-LANGU.

  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-TITLE_KEY   = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME1      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME2      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME3      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME4      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM1 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM2 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-PARTNERLANGUAGE = 'X'.

**********************************************************************
* Role
**********************************************************************
*  CLEAR : LT_ROLES, LS_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU00'.     "FI客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU01'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'UKM000'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_PARTNER-CENTRAL_DATA-ROLE-ROLES = LT_ROLES.

*---> Fullfill address 填充地址数据
  CLEAR : LT_ADDRESSES, LS_ADDRESSES.
  SELECT SINGLE
    ADDRESS_GUID
    INTO @DATA(ADDRESS_GUID)
    FROM BUT020
    WHERE PARTNER = @INTAB1-PARTENER.
  LS_ADDRESSES-TASK = 'U'.
  LS_ADDRESSES-DATA_KEY-GUID = ADDRESS_GUID .
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU = SY-LANGU."语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-C_O_NAME   = INTAB1-ZRECEIVER.         "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATA-POSTL_COD1 = INTAB1-PSTLZ.            "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATA-STREET     = INTAB1-STREET.           "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL1 = INTAB1-STR_SUPPL1.       "收票地址2
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL2 = INTAB1-STR_SUPPL2.       "收票地址3
  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL3 = INTAB1-STR_SUPPL3.       "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATA-LOCATION   = INTAB1-LOCATION.         "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATA-COUNTRY    = INTAB1-LAND1.              "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATA-REGION     = INTAB1-REGIO.              "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATA-CITY       = INTAB1-ORT01.              "城市
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU      = INTAB1-SPRAS.              "语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-LANGUISO   = INTAB1-SPRAS.             "语言

  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU = 'X'."语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-C_O_NAME   = 'X'.    "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATAX-POSTL_COD1 = 'X'.    "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STREET     = 'X'.    "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL1 = 'X'.    "地址：2
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL2 = 'X'.    "地址：3
  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL3 = 'X'.    "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATAX-LOCATION   = 'X'.    "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATAX-COUNTRY    = 'X'.    "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-REGION     = 'X'.    "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-CITY       = 'X'.    "城市
  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU      = 'X'.    "语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU_ISO  = 'X'.    "语言


*--> 电话
  CLEAR : LS_PHONE, LT_PHONE.
  LS_PHONE-CONTACT-TASK = 'U'.
  LS_PHONE-CONTACT-DATA-R_3_USER = INTAB1-TELNR_CALL.  "电话
  LS_PHONE-CONTACT-DATAX-R_3_USER = 'X'.

  APPEND LS_PHONE TO LT_PHONE.

  APPEND LS_ADDRESSES TO LT_ADDRESSES.

  LS_PARTNER-CENTRAL_DATA-ADDRESS-ADDRESSES = LT_ADDRESSES.

**-->增值税信息
  LS_TAX-TASK = 'U'.
  LS_TAX-DATA_KEY-TAXTYPE   = 'CN5'.
*  LS_TAX-DATA_KEY-TAXNUMBER = INTAB1-TAXNUMXL.
  LS_TAX-DATA_KEY-TAXNUMXL  = INTAB1-TAXNUMXL.
  APPEND LS_TAX TO LT_TAX.
  LS_PARTNER-CENTRAL_DATA-TAXNUMBER-TAXNUMBERS = LT_TAX.


***-->银行信息
  LOOP AT INTAB4.
    IF INTAB4-BANKS <> '' AND INTAB4-BANKL <> '' AND INTAB4-BANKN <> '' AND INTAB4-KOINH IS NOT INITIAL.
      LS_BANK_DATA-TASK = 'U'.
      LS_BANK_DATA-DATA-BANK_CTRY = INTAB4-BANKS.          "银行国家代码
      LS_BANK_DATA-DATA-BANK_KEY  = INTAB4-BANKL.          "银行代码
      LS_BANK_DATA-DATA-BANK_ACCT = INTAB4-BANKN(18).      "银行帐户号码
      LS_BANK_DATA-DATA-EXTERNALBANKID = INTAB4-BANKN+18.  "银行帐户号码18位后内容
      LS_BANK_DATA-DATA-ACCOUNTHOLDER = INTAB4-KOINH.      "账户持有人
      LS_BANK_DATA-DATA-COLL_AUTH  = INTAB4-XEZER.         "托收授权-开户行

      LS_BANK_DATA-DATAX-BANK_CTRY      = 'X'.  "银行国家代码
      LS_BANK_DATA-DATAX-BANK_KEY       = 'X'.  "银行代码
      LS_BANK_DATA-DATAX-BANK_ACCT      = 'X'.  "银行帐户号码
      LS_BANK_DATA-DATAX-EXTERNALBANKID = 'X'.
      LS_BANK_DATA-DATAX-ACCOUNTHOLDER  = 'X'.  "账户持有人
      LS_BANK_DATA-DATAX-COLL_AUTH      = 'X'.  "托收授权-开户行
      APPEND LS_BANK_DATA TO LS_PARTNER-CENTRAL_DATA-BANKDETAIL-BANKDETAILS.
    ENDIF.
  ENDLOOP.


**********************************************************************
* 客户中心数据
**********************************************************************
* 客户数据表头
  CLEAR LS_CUSTOMER.
  LS_CUSTOMER-HEADER-OBJECT_TASK = 'U'.
  CLEAR: LS_TAX_IND , LT_TAX_IND.
  LS_TAX_IND-TASK = 'U'.
  LS_TAX_IND-DATA_KEY-ALAND = 'CN'.
  LS_TAX_IND-DATA_KEY-TATYP = 'MWST'.
  LS_TAX_IND-DATA-TAXKD  = '1'.  "客户税分类
  LS_TAX_IND-DATAX-TAXKD = 'X'.
  APPEND LS_TAX_IND TO LT_TAX_IND.

  LS_CUSTOMER-CENTRAL_DATA-TAX_IND-TAX_IND = LT_TAX_IND.

**********************************************************************
* 客户销售视图
**********************************************************************
  CLEAR : LT_SALES.
  CLEAR : LT_FUNCTIONS.
  LOOP AT INTAB3.
    CLEAR : LS_SALES.
    LS_SALES-TASK = 'I'.
    LS_SALES-DATA_KEY-VKORG = INTAB3-VKORG. "销售组织
    LS_SALES-DATA_KEY-VTWEG = INTAB3-VTWEG. "分销渠道
    LS_SALES-DATA_KEY-SPART = INTAB3-SPART. "产品组
*  LS_SALES-DATA-VKBUR     = INTAB3-VKBUR. "销售办公室
*  LS_SALES-DATA-VKGRP     = INTAB3-VKGRP. "销售组
*  LS_SALES-DATA-KDGRP     = INTAB3-KDGRP. "客户组
    LS_SALES-DATA-WAERS     = 'CNY'. "货币
    LS_SALES-DATA-KALKS     = '1'. "客户定价过程
    LS_SALES-DATA-VSBED     = '01'. "装运条件
*  LS_SALES-DATA-PLTYP     = GS_UPLOAD-PLTYP. "价格清单类型
*  LS_SALES-DATA-INCOV     = IS_DATA1-INCOV. "国际贸易条款版本
*  LS_SALES-DATA-INCO1     = GS_UPLOAD-INCO1. "国际贸易条款
*  LS_SALES-DATA-INCO2_L   = GS_UPLOAD-INCO2_L. "国际贸易条款位置 1
*  LS_SALES-DATA-INCO3_L   = IS_DATA1-INCO3_L. "国际贸易条款位置 2
*  LS_SALES-DATA-KTGRD     = GS_UPLOAD-KTGRD.   "科目分配组
    LS_SALES-DATA-ZTERM     = '0001'.   "付款条件
    LS_SALES-DATA-KZAZU     = 'X'. "订单组合标识
    LS_SALES-DATA-PODKZ     = 'X'. "POD 相关

*  LS_SALES-DATAX-VKBUR     = 'X'. "销售办公室
*  LS_SALES-DATAX-VKGRP     = 'X'. "销售组
*  LS_SALES-DATAX-KDGRP     = 'X'. "客户组
    LS_SALES-DATAX-WAERS     = 'X'. "货币
    LS_SALES-DATAX-KALKS     = 'X'. "客户定价过程
    LS_SALES-DATAX-VSBED     = 'X'. "装运条件
*  LS_SALES-DATAX-PLTYP     = 'X'. "价格清单类型
*  LS_SALES-DATAX-INCOV     = 'X'. "国际贸易条款版本
*  LS_SALES-DATAX-INCO1     = 'X'. "国际贸易条款
*  LS_SALES-DATAX-INCO2_L   = 'X'. "国际贸易条款位置 1
*  LS_SALES-DATAX-INCO3_L   = 'X'. "国际贸易条款位置 2
*  LS_SALES-DATAX-KTGRD     = 'X'. "科目分配组
    LS_SALES-DATAX-ZTERM     = 'X'. "付款条件
    LS_SALES-DATAX-KZAZU     = 'X'."订单组合标识
    LS_SALES-DATA-PODKZ      = 'X'. "POD 相关
    APPEND LS_SALES TO LT_SALES.
*    LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.

**********************************************************************
* 销售视图-伙伴
**********************************************************************
    CLEAR : LS_FUNCTIONS.
    LS_FUNCTIONS-TASK = 'I'.
    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW1  "售达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW2 "收票方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW3 "付款方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW4 "送达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.
  ENDLOOP.

**********************************************************************
* 客户公司代码视图
**********************************************************************
  LOOP AT INTAB2.
    CLEAR : LT_COMPANY.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'   " 统驭科目补零
      EXPORTING
        INPUT  = INTAB2-AKONT
      IMPORTING
        OUTPUT = INTAB2-AKONT.

    LS_COMPANY-TASK = 'I'.
    LS_COMPANY-DATA_KEY-BUKRS = INTAB2-BUKRS   . " 公司代码
    LS_COMPANY-DATA-AKONT     = INTAB2-AKONT   . " 统驭科目
    LS_COMPANY-DATA-ZTERM     = INTAB2-ZTERM   . " 付款条件

    LS_COMPANY-DATAX-AKONT = 'X'.
    LS_COMPANY-DATAX-ZTERM = 'X'.
    APPEND LS_COMPANY TO LT_COMPANY.

    LS_CUSTOMER-COMPANY_DATA-COMPANY = LT_COMPANY.

  ENDLOOP.

*--> 创建BP以及员工
  CLEAR : LT_DATA, LT_DATA.
  LS_DATA-PARTNER  = LS_PARTNER.
  LS_DATA-CUSTOMER = LS_CUSTOMER.
  APPEND LS_DATA TO LT_DATA.

  CALL FUNCTION 'CVI_EI_INBOUND_MAIN'
    EXPORTING
      I_DATA   = LT_DATA
*     I_EXT_DATA       =
    IMPORTING
      E_RETURN = LT_RETURN.

  CLEAR C_MESSAGE.
  LOOP AT LT_RETURN INTO LS_RETURN.
    LOOP AT LS_RETURN-OBJECT_MSG INTO LS_MSG WHERE TYPE = 'E' OR TYPE = 'A'.
      CONCATENATE C_MESSAGE LS_MSG-MESSAGE INTO C_MESSAGE.
    ENDLOOP.
  ENDLOOP.


  IF C_MESSAGE EQ ''.
    CLEAR:LT_CUSTOMER_LIST,LT_PARTNERGUID_LIST,LS_CUSTOMER_LIST,LS_PARTNERGUID_LIST.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = ABAP_TRUE.

*    GS_UPLOAD-DENG = C_GREEN.
    FLAG = 'Y'.
    RTYPE = 'S'.
    MESSAGE = '创建成功！'.

  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*    GS_UPLOAD-DENG    = C_RED.
    MESSAGE = C_MESSAGE.
  ENDIF.

ENDFORM.



FORM UPDATE_UNIVERSAL TABLES INTAB1 STRUCTURE ZSSD215
                            INTAB2 STRUCTURE ZSSD216
                            INTAB3 STRUCTURE ZSSD217
                            INTAB4 STRUCTURE ZSSD218
                     CHANGING FLAG    TYPE ZEMM_FLAG
                              RTYPE   TYPE BAPI_MTYPE
                              MESSAGE TYPE ZEMM_MESSAGE
                       .

  CONSTANTS : C_PARVW1 TYPE PARVW VALUE 'SP', "售达方
              C_PARVW2 TYPE PARVW VALUE 'BP', "收票方
              C_PARVW3 TYPE PARVW VALUE 'PY', "付款方
              C_PARVW4 TYPE PARVW VALUE 'SH'. "送达方'

  DATA : LT_ROLES TYPE BUS_EI_BUPA_ROLES_T,         "Role Data
         LS_ROLES TYPE BUS_EI_BUPA_ROLES.

  DATA : LT_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS_T,
         LS_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS.

  DATA : LT_PHONE TYPE BUS_EI_BUPA_TELEPHONE_T,
         LS_PHONE TYPE BUS_EI_BUPA_TELEPHONE.

  DATA : LT_TEL  TYPE TABLE OF BAPIADTEL,
         LS_TEL  TYPE BAPIADTEL,
         LT_TELX TYPE TABLE OF BAPIADTELX,
         LS_TELX TYPE BAPIADTELX.

  DATA : LT_FAX TYPE BUS_EI_BUPA_FAX_T,           "传真
         LS_FAX TYPE BUS_EI_BUPA_FAX.

  DATA : LT_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK_T,
         LS_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK.

  DATA : LT_TAX TYPE BUS_EI_BUPA_TAXNUMBER_T,
         LS_TAX TYPE BUS_EI_BUPA_TAXNUMBER.

  DATA : LT_ID TYPE BUS_EI_BUPA_IDENTIFICATION_T,
         LS_ID TYPE BUS_EI_BUPA_IDENTIFICATION.

  DATA : LT_COMPANY TYPE CMDS_EI_COMPANY_T,
         LS_COMPANY TYPE CMDS_EI_COMPANY.

  DATA : LT_TEXT TYPE CVIS_EI_TEXT_T,
         LS_TEXT TYPE CVIS_EI_TEXT.

  DATA : LT_LINES TYPE TLINE_TAB,
         LS_LINES TYPE TLINE.

  DATA : LT_TAX_IND TYPE CMDS_EI_TAX_IND_T,
         LS_TAX_IND TYPE CMDS_EI_TAX_IND.

  DATA : LT_SALES TYPE CMDS_EI_SALES_T,
         LS_SALES TYPE CMDS_EI_SALES.

  DATA : LT_FUNCTIONS TYPE CMDS_EI_FUNCTIONS_T,
         LS_FUNCTIONS TYPE CMDS_EI_FUNCTIONS.

  DATA : LT_DATA TYPE CVIS_EI_EXTERN_T,
         LS_DATA TYPE CVIS_EI_EXTERN.

  DATA : LT_PARTNERGUID_LIST TYPE BU_PARTNER_GUID_T,
         LS_PARTNERGUID_LIST LIKE LINE OF LT_PARTNERGUID_LIST.

  DATA : LT_CUSTOMER_LIST TYPE CVIS_CUST_LINK_T,
         LS_CUSTOMER_LIST TYPE CVI_CUST_LINK.

  DATA : LT_RETURN TYPE BAPIRETM,
         LS_RETURN TYPE BAPIRETI.

  DATA : LS_BANK_DATA TYPE BUS_EI_BUPA_BANKDETAIL.

  DATA : LS_PARTNER  TYPE BUS_EI_EXTERN,
         LS_CUSTOMER TYPE CMDS_EI_EXTERN.

  DATA : LS_MSG        TYPE BAPIRETC.

  DATA : LT_MASTER_DATA TYPE CMDS_EI_MAIN,
         LS_MASTER_DATA TYPE CMDS_EI_EXTERN.

  DATA : LT_ERROR_MESS TYPE CVIS_MESSAGE,
         LS_ERROR_MESS TYPE BAPIRET2.

  DATA : LS_BASIC TYPE CMDS_EI_CMD_CENTRAL.

  DATA : LV_BPARTNERGUID TYPE BU_PARTNER_GUID_BAPI,
         LV_GUID         TYPE GUID_16,
         LV_BANKY        TYPE BUT0BK-BANKL.

  DATA : LT_RETURN_TEL TYPE STANDARD TABLE OF BAPIRET2,
         LS_RETURN_TEL TYPE BAPIRET2.

  DATA : C_MESSAGE TYPE CHAR255.
  DATA : LV_ERROR.

  CLEAR : LS_PARTNER.
  CLEAR : LV_BPARTNERGUID.
  CLEAR : LT_DATA.


**********************************************************************
* 基础数据
**********************************************************************

  READ TABLE INTAB1 INDEX 1.
  SELECT SINGLE
         PARTNER_GUID
         INTO @DATA(PARTNER_GUID)
         FROM BUT000
         WHERE PARTNER = @INTAB1-PARTENER.
*  CALL FUNCTION 'GUID_CONVERT'
*    EXPORTING
*      IV_GUID_X16            = PARTNER_GUID
*    IMPORTING
*      EV_GUID_C32            = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID
*    EXCEPTIONS
*      NO_UNICODE_SUPPORT_YET = 1
*      PARAMETERS_ERROR       = 2.

  LS_PARTNER-HEADER-OBJECT_TASK = 'U'.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID  = PARTNER_GUID.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER      = INTAB1-PARTENER.
*  LS_CUSTOMER-HEADER-OBJECT_INSTANCE-KUNNR        = INTAB1-PARTENER.
*  LS_CUSTOMER-HEADER-OBJECT_TASK = 'U'.

*  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID          = LV_BPARTNERGUID.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-CATEGORY = INTAB1-TYPE.  "2      "业务伙伴类别(组织)
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-GROUPING = INTAB1-BU_GROUP." 'Z100'.  "科目组

*  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-TITLE_KEY = '0003'.                 " 称谓
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME1      = INTAB1-NAME_ORG1.      "名称1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME2      = INTAB1-NAME_ORG2.      "名称2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME3      = INTAB1-NAME_ORG3.      "名称3
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME4      = INTAB1-NAME_ORG4.      "名称4
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM1 = INTAB1-BU_SORT1.       "搜索项1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM2 = INTAB1-BU_SORT2.       "搜索项2
*  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-PARTNERLANGUAGE = SY-LANGU.

*  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-TITLE_KEY   = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME1      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME2      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME3      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME4      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM1 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM2 = 'X'.
*  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-PARTNERLANGUAGE = 'X'.

**********************************************************************
* Role
**********************************************************************
*  CLEAR : LT_ROLES, LS_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU00'.     "FI客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU01'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'UKM000'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_PARTNER-CENTRAL_DATA-ROLE-ROLES = LT_ROLES.

*---> Fullfill address 填充地址数据
  CLEAR : LT_ADDRESSES, LS_ADDRESSES.

  SELECT SINGLE
    ADDRESS_GUID
    INTO @DATA(ADDRESS_GUID)
    FROM BUT020
    WHERE PARTNER = @INTAB1-PARTENER.
  LS_ADDRESSES-TASK = 'U'.
  LS_ADDRESSES-DATA_KEY-GUID = ADDRESS_GUID .
*  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU = SY-LANGU."语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-C_O_NAME   = INTAB1-ZRECEIVER.         "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATA-POSTL_COD1 = INTAB1-PSTLZ.            "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATA-STREET     = INTAB1-STREET.           "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL1 = INTAB1-STR_SUPPL1.       "收票地址2
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL2 = INTAB1-STR_SUPPL2.       "收票地址3
  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL3 = INTAB1-STR_SUPPL3.       "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATA-LOCATION   = INTAB1-LOCATION.         "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATA-COUNTRY    = INTAB1-LAND1.              "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATA-REGION     = INTAB1-REGIO.              "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATA-CITY       = INTAB1-ORT01.              "城市
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU      = INTAB1-SPRAS.              "语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-LANGUISO   = INTAB1-SPRAS.             "语言

*  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU = 'X'."语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-C_O_NAME   = 'X'.    "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATAX-POSTL_COD1 = 'X'.    "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STREET     = 'X'.    "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL1 = 'X'.    "地址：2
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL2 = 'X'.    "地址：3
  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL3 = 'X'.    "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATAX-LOCATION   = 'X'.    "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATAX-COUNTRY    = 'X'.    "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-REGION     = 'X'.    "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-CITY       = 'X'.    "城市
  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU      = 'X'.    "语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU_ISO  = 'X'.    "语言

*--> 电话
  CLEAR : LS_PHONE, LT_PHONE.
  LS_PHONE-CONTACT-TASK = 'U'.
  LS_PHONE-CONTACT-DATA-R_3_USER = INTAB1-TELNR_CALL.  "电话
  LS_PHONE-CONTACT-DATAX-R_3_USER = 'X'.

  APPEND LS_PHONE TO LT_PHONE.

  APPEND LS_ADDRESSES TO LT_ADDRESSES.

  LS_PARTNER-CENTRAL_DATA-ADDRESS-ADDRESSES = LT_ADDRESSES.

***-->增值税信息
  LS_TAX-TASK = 'U'.
  LS_TAX-DATA_KEY-TAXTYPE   = 'CN5'.
*  LS_TAX-DATA_KEY-TAXNUMBER = INTAB1-TAXNUMXL.
  LS_TAX-DATA_KEY-TAXNUMXL  = INTAB1-TAXNUMXL.
  APPEND LS_TAX TO LT_TAX.
  LS_PARTNER-CENTRAL_DATA-TAXNUMBER-TAXNUMBERS = LT_TAX.


***-->银行信息
*  LOOP AT INTAB4.
*    IF INTAB4-BANKS <> '' AND INTAB4-BANKL <> '' AND INTAB4-BANKN <> '' AND INTAB4-KOINH IS NOT INITIAL.
*      LS_BANK_DATA-TASK = 'U'.
*      LS_BANK_DATA-DATA-BANK_CTRY = INTAB4-BANKS.          "银行国家代码
*      LS_BANK_DATA-DATA-BANK_KEY  = INTAB4-BANKL.          "银行代码
*      LS_BANK_DATA-DATA-BANK_ACCT = INTAB4-BANKN(18).      "银行帐户号码
*      LS_BANK_DATA-DATA-EXTERNALBANKID = INTAB4-BANKN+18.  "银行帐户号码18位后内容
*      LS_BANK_DATA-DATA-ACCOUNTHOLDER = INTAB4-KOINH.      "账户持有人
*      LS_BANK_DATA-DATA-COLL_AUTH  = INTAB4-XEZER.         "托收授权-开户行
*
*      LS_BANK_DATA-DATAX-BANK_CTRY      = 'X'.  "银行国家代码
*      LS_BANK_DATA-DATAX-BANK_KEY       = 'X'.  "银行代码
*      LS_BANK_DATA-DATAX-BANK_ACCT      = 'X'.  "银行帐户号码
*      LS_BANK_DATA-DATAX-EXTERNALBANKID = 'X'.
*      LS_BANK_DATA-DATAX-ACCOUNTHOLDER  = 'X'.  "账户持有人
*      LS_BANK_DATA-DATAX-COLL_AUTH      = 'X'.  "托收授权-开户行
*      APPEND LS_BANK_DATA TO LS_PARTNER-CENTRAL_DATA-BANKDETAIL-BANKDETAILS.
*    ENDIF.
*  ENDLOOP.


**********************************************************************
* 客户中心数据
**********************************************************************
* 客户数据表头
*  CLEAR LS_CUSTOMER.
*  LS_CUSTOMER-HEADER-OBJECT_TASK = 'U'.
*  CLEAR: LS_TAX_IND , LT_TAX_IND.
*  LS_TAX_IND-TASK = 'U'.
*  LS_TAX_IND-DATA_KEY-ALAND = 'CN'.
*  LS_TAX_IND-DATA_KEY-TATYP = 'MWST'.
*  LS_TAX_IND-DATA-TAXKD  = '1'.  "客户税分类
*  LS_TAX_IND-DATAX-TAXKD = 'X'.
*  APPEND LS_TAX_IND TO LT_TAX_IND.
*
*  LS_CUSTOMER-CENTRAL_DATA-TAX_IND-TAX_IND = LT_TAX_IND.


*--> 创建BP以及员工
  CLEAR:LS_DATA,LT_DATA.
  LS_DATA-PARTNER  = LS_PARTNER.
*  LS_DATA-CUSTOMER = LS_CUSTOMER.
  APPEND LS_DATA TO LT_DATA.

  CLEAR:LT_RETURN.
  CALL FUNCTION 'CVI_EI_INBOUND_MAIN'
    EXPORTING
      I_DATA   = LT_DATA
    IMPORTING
      E_RETURN = LT_RETURN.

  CLEAR C_MESSAGE.
  LOOP AT LT_RETURN INTO LS_RETURN.
    LOOP AT LS_RETURN-OBJECT_MSG INTO LS_MSG WHERE TYPE = 'E' OR TYPE = 'A'.
      CONCATENATE C_MESSAGE LS_MSG-MESSAGE INTO C_MESSAGE.
    ENDLOOP.
  ENDLOOP.


  IF C_MESSAGE EQ ''.
    CLEAR:LT_CUSTOMER_LIST,LT_PARTNERGUID_LIST,LS_CUSTOMER_LIST,LS_PARTNERGUID_LIST.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = ABAP_TRUE.

*    GS_UPLOAD-DENG = C_GREEN.
    MESSAGE = '创建成功！'.
    FLAG = 'Y'.
    RTYPE = 'S'.
    MESSAGE = '成功！'.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*    GS_UPLOAD-DENG    = C_RED.
    MESSAGE = C_MESSAGE.
  ENDIF.

ENDFORM.

FORM UPDATE_CUSTOMER TABLES INTAB1 STRUCTURE ZSSD215
                            INTAB2 STRUCTURE ZSSD216
                            INTAB3 STRUCTURE ZSSD217
                            INTAB4 STRUCTURE ZSSD218
                     CHANGING FLAG    TYPE ZEMM_FLAG
                              RTYPE   TYPE BAPI_MTYPE
                              MESSAGE TYPE ZEMM_MESSAGE
                       .

  CONSTANTS : C_PARVW1 TYPE PARVW VALUE 'SP', "售达方
              C_PARVW2 TYPE PARVW VALUE 'BP', "收票方
              C_PARVW3 TYPE PARVW VALUE 'PY', "付款方
              C_PARVW4 TYPE PARVW VALUE 'SH'. "送达方'

  DATA : LT_ROLES TYPE BUS_EI_BUPA_ROLES_T,         "Role Data
         LS_ROLES TYPE BUS_EI_BUPA_ROLES.

  DATA : LT_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS_T,
         LS_ADDRESSES TYPE BUS_EI_BUPA_ADDRESS.

  DATA : LT_PHONE TYPE BUS_EI_BUPA_TELEPHONE_T,
         LS_PHONE TYPE BUS_EI_BUPA_TELEPHONE.

  DATA : LT_TEL  TYPE TABLE OF BAPIADTEL,
         LS_TEL  TYPE BAPIADTEL,
         LT_TELX TYPE TABLE OF BAPIADTELX,
         LS_TELX TYPE BAPIADTELX.

  DATA : LT_FAX TYPE BUS_EI_BUPA_FAX_T,           "传真
         LS_FAX TYPE BUS_EI_BUPA_FAX.

  DATA : LT_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK_T,
         LS_REMARK TYPE BUS_EI_BUPA_ADDRESSREMARK.

  DATA : LT_TAX TYPE BUS_EI_BUPA_TAXNUMBER_T,
         LS_TAX TYPE BUS_EI_BUPA_TAXNUMBER.

  DATA : LT_ID TYPE BUS_EI_BUPA_IDENTIFICATION_T,
         LS_ID TYPE BUS_EI_BUPA_IDENTIFICATION.

  DATA : LT_COMPANY TYPE CMDS_EI_COMPANY_T,
         LS_COMPANY TYPE CMDS_EI_COMPANY.

  DATA : LT_TEXT TYPE CVIS_EI_TEXT_T,
         LS_TEXT TYPE CVIS_EI_TEXT.

  DATA : LT_LINES TYPE TLINE_TAB,
         LS_LINES TYPE TLINE.

  DATA : LT_TAX_IND TYPE CMDS_EI_TAX_IND_T,
         LS_TAX_IND TYPE CMDS_EI_TAX_IND.

  DATA : LT_SALES TYPE CMDS_EI_SALES_T,
         LS_SALES TYPE CMDS_EI_SALES.

  DATA : LT_FUNCTIONS TYPE CMDS_EI_FUNCTIONS_T,
         LS_FUNCTIONS TYPE CMDS_EI_FUNCTIONS.

  DATA : LT_DATA TYPE CVIS_EI_EXTERN_T,
         LS_DATA TYPE CVIS_EI_EXTERN.

  DATA : LT_PARTNERGUID_LIST TYPE BU_PARTNER_GUID_T,
         LS_PARTNERGUID_LIST LIKE LINE OF LT_PARTNERGUID_LIST.

  DATA : LT_CUSTOMER_LIST TYPE CVIS_CUST_LINK_T,
         LS_CUSTOMER_LIST TYPE CVI_CUST_LINK.

  DATA : LT_RETURN TYPE BAPIRETM,
         LS_RETURN TYPE BAPIRETI.

  DATA : LS_BANK_DATA TYPE BUS_EI_BUPA_BANKDETAIL.

  DATA : LS_PARTNER  TYPE BUS_EI_EXTERN,
         LS_CUSTOMER TYPE CMDS_EI_EXTERN.

  DATA : LS_MSG        TYPE BAPIRETC.

  DATA : LT_MASTER_DATA TYPE CMDS_EI_MAIN,
         LS_MASTER_DATA TYPE CMDS_EI_EXTERN.

  DATA : LT_ERROR_MESS TYPE CVIS_MESSAGE,
         LS_ERROR_MESS TYPE BAPIRET2.

  DATA : LS_BASIC TYPE CMDS_EI_CMD_CENTRAL.

  DATA : LV_BPARTNERGUID TYPE BU_PARTNER_GUID_BAPI,
         LV_GUID         TYPE GUID_16,
         LV_BANKY        TYPE BUT0BK-BANKL.

  DATA : LT_RETURN_TEL TYPE STANDARD TABLE OF BAPIRET2,
         LS_RETURN_TEL TYPE BAPIRET2.

  DATA : C_MESSAGE TYPE CHAR255.
  DATA : LV_ERROR.

  CLEAR : LS_PARTNER.
  CLEAR : LV_BPARTNERGUID.
  CLEAR : LT_DATA.


**********************************************************************
* 基础数据
**********************************************************************

  READ TABLE INTAB1 INDEX 1.
  SELECT SINGLE
         PARTNER_GUID
         INTO @DATA(PARTNER_GUID)
         FROM BUT000
         WHERE PARTNER = @INTAB1-PARTENER.
*  CALL FUNCTION 'GUID_CONVERT'
*    EXPORTING
*      IV_GUID_X16            = PARTNER_GUID
*    IMPORTING
*      EV_GUID_C32            = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID
*    EXCEPTIONS
*      NO_UNICODE_SUPPORT_YET = 1
*      PARAMETERS_ERROR       = 2.
*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'   " 客户编码补零
*    EXPORTING
*      INPUT  = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER
*    IMPORTING
*      OUTPUT = LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER.

  LS_PARTNER-HEADER-OBJECT_TASK = 'U'.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNER = INTAB1-PARTENER.
  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID  = PARTNER_GUID.
*  LS_PARTNER-HEADER-OBJECT_INSTANCE-BPARTNERGUID          = LV_BPARTNERGUID.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-CATEGORY = INTAB1-TYPE.  "2      "业务伙伴类别(组织)
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CONTROL-GROUPING = INTAB1-BU_GROUP." 'Z100'.  "科目组

  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-TITLE_KEY = '0003'.                 " 称谓
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME1      = INTAB1-NAME_ORG1.      "名称1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME2      = INTAB1-NAME_ORG2.      "名称2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME3      = INTAB1-NAME_ORG3.      "名称3
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_ORGANIZATION-NAME4      = INTAB1-NAME_ORG4.      "名称4
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM1 = INTAB1-BU_SORT1.       "搜索项1
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-SEARCHTERM2 = INTAB1-BU_SORT2.       "搜索项2
  LS_PARTNER-CENTRAL_DATA-COMMON-DATA-BP_CENTRALDATA-PARTNERLANGUAGE = SY-LANGU.

  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-TITLE_KEY   = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME1      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME2      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME3      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_ORGANIZATION-NAME4      = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM1 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-SEARCHTERM2 = 'X'.
  LS_PARTNER-CENTRAL_DATA-COMMON-DATAX-BP_CENTRALDATA-PARTNERLANGUAGE = 'X'.

**********************************************************************
* Role
**********************************************************************
*  CLEAR : LT_ROLES, LS_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU00'.     "FI客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'FLCU01'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_ROLES-TASK = 'U'.
*  LS_ROLES-DATA_KEY = 'UKM000'.     "客户
*  APPEND LS_ROLES TO LT_ROLES.
*  LS_PARTNER-CENTRAL_DATA-ROLE-ROLES = LT_ROLES.

*---> Fullfill address 填充地址数据
  CLEAR : LT_ADDRESSES, LS_ADDRESSES.
  SELECT SINGLE
    ADDRESS_GUID
    INTO @DATA(ADDRESS_GUID)
    FROM BUT020
    WHERE PARTNER = @INTAB1-PARTENER.
  LS_ADDRESSES-TASK = 'U'.
  LS_ADDRESSES-DATA_KEY-GUID = ADDRESS_GUID .
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU = SY-LANGU."语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-C_O_NAME   = INTAB1-ZRECEIVER.         "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATA-POSTL_COD1 = INTAB1-PSTLZ.            "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATA-STREET     = INTAB1-STREET.           "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL1 = INTAB1-STR_SUPPL1.       "收票地址2
*  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL2 = INTAB1-STR_SUPPL2.       "收票地址3
  LS_ADDRESSES-DATA-POSTAL-DATA-STR_SUPPL3 = INTAB1-STR_SUPPL3.       "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATA-LOCATION   = INTAB1-LOCATION.         "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATA-COUNTRY    = INTAB1-LAND1.              "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATA-REGION     = INTAB1-REGIO.              "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATA-CITY       = INTAB1-ORT01.              "城市
  LS_ADDRESSES-DATA-POSTAL-DATA-LANGU      = INTAB1-SPRAS.              "语言
*  LS_ADDRESSES-DATA-POSTAL-DATA-LANGUISO   = INTAB1-SPRAS.             "语言

  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU = 'X'."语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-C_O_NAME   = 'X'.    "收票人
*  LS_ADDRESSES-DATA-POSTAL-DATAX-POSTL_COD1 = 'X'.    "邮政编码
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STREET     = 'X'.    "开票街道
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL1 = 'X'.    "地址：2
*  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL2 = 'X'.    "地址：3
  LS_ADDRESSES-DATA-POSTAL-DATAX-STR_SUPPL3 = 'X'.    "开票街道4
  LS_ADDRESSES-DATA-POSTAL-DATAX-LOCATION   = 'X'.    "开票街道5
  LS_ADDRESSES-DATA-POSTAL-DATAX-COUNTRY    = 'X'.    "国家代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-REGION     = 'X'.    "地区代码
  LS_ADDRESSES-DATA-POSTAL-DATAX-CITY       = 'X'.    "城市
  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU      = 'X'.    "语言
*  LS_ADDRESSES-DATA-POSTAL-DATAX-LANGU_ISO  = 'X'.    "语言


*--> 电话
  CLEAR : LS_PHONE, LT_PHONE.
  LS_PHONE-CONTACT-TASK = 'U'.
  LS_PHONE-CONTACT-DATA-R_3_USER = INTAB1-TELNR_CALL.  "电话
  LS_PHONE-CONTACT-DATAX-R_3_USER = 'X'.

  APPEND LS_PHONE TO LT_PHONE.

  APPEND LS_ADDRESSES TO LT_ADDRESSES.

  LS_PARTNER-CENTRAL_DATA-ADDRESS-ADDRESSES = LT_ADDRESSES.

**-->增值税信息
  LS_TAX-TASK = 'U'.
  LS_TAX-DATA_KEY-TAXTYPE   = 'CN5'.
*  LS_TAX-DATA_KEY-TAXNUMBER = INTAB1-TAXNUMXL.
  LS_TAX-DATA_KEY-TAXNUMXL  = INTAB1-TAXNUMXL.
  APPEND LS_TAX TO LT_TAX.
  LS_PARTNER-CENTRAL_DATA-TAXNUMBER-TAXNUMBERS = LT_TAX.


***-->银行信息
  LOOP AT INTAB4.
    IF INTAB4-BANKS <> '' AND INTAB4-BANKL <> '' AND INTAB4-BANKN <> '' AND INTAB4-KOINH IS NOT INITIAL.
      LS_BANK_DATA-TASK = 'U'.
      LS_BANK_DATA-DATA-BANK_CTRY = INTAB4-BANKS.          "银行国家代码
      LS_BANK_DATA-DATA-BANK_KEY  = INTAB4-BANKL.          "银行代码
      LS_BANK_DATA-DATA-BANK_ACCT = INTAB4-BANKN(18).      "银行帐户号码
      LS_BANK_DATA-DATA-EXTERNALBANKID = INTAB4-BANKN+18.  "银行帐户号码18位后内容
      LS_BANK_DATA-DATA-ACCOUNTHOLDER = INTAB4-KOINH.      "账户持有人
      LS_BANK_DATA-DATA-COLL_AUTH  = INTAB4-XEZER.         "托收授权-开户行

      LS_BANK_DATA-DATAX-BANK_CTRY      = 'X'.  "银行国家代码
      LS_BANK_DATA-DATAX-BANK_KEY       = 'X'.  "银行代码
      LS_BANK_DATA-DATAX-BANK_ACCT      = 'X'.  "银行帐户号码
      LS_BANK_DATA-DATAX-EXTERNALBANKID = 'X'.
      LS_BANK_DATA-DATAX-ACCOUNTHOLDER  = 'X'.  "账户持有人
      LS_BANK_DATA-DATAX-COLL_AUTH      = 'X'.  "托收授权-开户行
      APPEND LS_BANK_DATA TO LS_PARTNER-CENTRAL_DATA-BANKDETAIL-BANKDETAILS.
    ENDIF.
  ENDLOOP.


**********************************************************************
* 客户中心数据
**********************************************************************
* 客户数据表头
  CLEAR LS_CUSTOMER.
  LS_CUSTOMER-HEADER-OBJECT_TASK = 'U'.
  CLEAR: LS_TAX_IND , LT_TAX_IND.
  LS_TAX_IND-TASK = 'U'.
  LS_TAX_IND-DATA_KEY-ALAND = 'CN'.
  LS_TAX_IND-DATA_KEY-TATYP = 'MWST'.
  LS_TAX_IND-DATA-TAXKD  = '1'.  "客户税分类
  LS_TAX_IND-DATAX-TAXKD = 'X'.
  APPEND LS_TAX_IND TO LT_TAX_IND.

  LS_CUSTOMER-CENTRAL_DATA-TAX_IND-TAX_IND = LT_TAX_IND.

**********************************************************************
* 客户销售视图
**********************************************************************
  CLEAR : LT_SALES.
  CLEAR : LT_FUNCTIONS.
  LOOP AT INTAB3.
    CLEAR : LS_SALES.
    LS_SALES-TASK = 'U'.
    LS_SALES-DATA_KEY-VKORG = INTAB3-VKORG. "销售组织
    LS_SALES-DATA_KEY-VTWEG = INTAB3-VTWEG. "分销渠道
    LS_SALES-DATA_KEY-SPART = INTAB3-SPART. "产品组
*  LS_SALES-DATA-VKBUR     = INTAB3-VKBUR. "销售办公室
*  LS_SALES-DATA-VKGRP     = INTAB3-VKGRP. "销售组
*  LS_SALES-DATA-KDGRP     = INTAB3-KDGRP. "客户组
    LS_SALES-DATA-WAERS     = 'CNY'. "货币
    LS_SALES-DATA-KALKS     = '1'. "客户定价过程
    LS_SALES-DATA-VSBED     = '01'. "装运条件
*  LS_SALES-DATA-PLTYP     = GS_UPLOAD-PLTYP. "价格清单类型
*  LS_SALES-DATA-INCOV     = IS_DATA1-INCOV. "国际贸易条款版本
*  LS_SALES-DATA-INCO1     = GS_UPLOAD-INCO1. "国际贸易条款
*  LS_SALES-DATA-INCO2_L   = GS_UPLOAD-INCO2_L. "国际贸易条款位置 1
*  LS_SALES-DATA-INCO3_L   = IS_DATA1-INCO3_L. "国际贸易条款位置 2
*  LS_SALES-DATA-KTGRD     = GS_UPLOAD-KTGRD.   "科目分配组
    LS_SALES-DATA-ZTERM     = '0001'.   "付款条件
    LS_SALES-DATA-KZAZU     = 'X'. "订单组合标识
    LS_SALES-DATA-PODKZ     = 'X'. "POD 相关
    LS_SALES-DATA-KLABC     = INTAB3-KLABC. "客户等级

*  LS_SALES-DATAX-VKBUR     = 'X'. "销售办公室
*  LS_SALES-DATAX-VKGRP     = 'X'. "销售组
*  LS_SALES-DATAX-KDGRP     = 'X'. "客户组
    LS_SALES-DATAX-WAERS     = 'X'. "货币
    LS_SALES-DATAX-KALKS     = 'X'. "客户定价过程
    LS_SALES-DATAX-VSBED     = 'X'. "装运条件
*  LS_SALES-DATAX-PLTYP     = 'X'. "价格清单类型
*  LS_SALES-DATAX-INCOV     = 'X'. "国际贸易条款版本
*  LS_SALES-DATAX-INCO1     = 'X'. "国际贸易条款
*  LS_SALES-DATAX-INCO2_L   = 'X'. "国际贸易条款位置 1
*  LS_SALES-DATAX-INCO3_L   = 'X'. "国际贸易条款位置 2
*  LS_SALES-DATAX-KTGRD     = 'X'. "科目分配组
    LS_SALES-DATAX-ZTERM     = 'X'. "付款条件
    LS_SALES-DATAX-KZAZU     = 'X'."订单组合标识
    LS_SALES-DATAX-PODKZ     = 'X'. "POD 相关
    LS_SALES-DATAX-KLABC     = 'X'. "客户等级
    APPEND LS_SALES TO LT_SALES.
    LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.

**********************************************************************
* 销售视图-伙伴
**********************************************************************
    CLEAR : LS_FUNCTIONS.
    LS_FUNCTIONS-TASK = 'U'.
    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW1  "售达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW2 "收票方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW3 "付款方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    CALL FUNCTION 'CONVERSION_EXIT_PARVW_INPUT'
      EXPORTING
        INPUT  = C_PARVW4 "送达方
      IMPORTING
        OUTPUT = INTAB1-PARTENER.

    APPEND LS_FUNCTIONS TO LT_FUNCTIONS.

    LS_CUSTOMER-SALES_DATA-SALES = LT_SALES.
  ENDLOOP.


*--> 创建BP以及员工
  CLEAR : LT_DATA, LT_DATA.
  LS_DATA-PARTNER  = LS_PARTNER.
  LS_DATA-CUSTOMER = LS_CUSTOMER.
  APPEND LS_DATA TO LT_DATA.

  CALL FUNCTION 'CVI_EI_INBOUND_MAIN'
    EXPORTING
      I_DATA   = LT_DATA
*     I_EXT_DATA       =
    IMPORTING
      E_RETURN = LT_RETURN.

  CLEAR C_MESSAGE.
  LOOP AT LT_RETURN INTO LS_RETURN.
    LOOP AT LS_RETURN-OBJECT_MSG INTO LS_MSG WHERE TYPE = 'E' OR TYPE = 'A'.
      CONCATENATE C_MESSAGE LS_MSG-MESSAGE INTO C_MESSAGE.
    ENDLOOP.
  ENDLOOP.


  IF C_MESSAGE EQ ''.
    CLEAR:LT_CUSTOMER_LIST,LT_PARTNERGUID_LIST,LS_CUSTOMER_LIST,LS_PARTNERGUID_LIST.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = ABAP_TRUE.

*    GS_UPLOAD-DENG = C_GREEN.
    FLAG = 'Y'.
    RTYPE = 'S'.
    MESSAGE = '创建成功！'.

  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
*    GS_UPLOAD-DENG    = C_RED.
    MESSAGE = C_MESSAGE.
  ENDIF.

ENDFORM.
