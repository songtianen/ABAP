FUNCTION ZFM_GP_MM_OA_ZLYY.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  EXPORTING
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"     VALUE(EBELN) TYPE  EBELN
*"     VALUE(MBLNR) TYPE  MBLNR
*"     VALUE(MJAHR) TYPE  MJAHR
*"  TABLES
*"      IN_TAB STRUCTURE  ZTMM010A OPTIONAL
*"----------------------------------------------------------------------
  ZFMDATASAVE1 'ZFM_GP_MM_OA_ZLYY' .
  ZFMDATASAVE2 'B'.
  DATA BEGIN OF ITAB OCCURS 0.
  INCLUDE STRUCTURE ZTMM010A.
  DATA:END OF ITAB.
  DATA:IT_ZSMM_207 TYPE TABLE OF ZSMM_207 WITH HEADER LINE,
       IT_MCHAS    TYPE TABLE OF MCHA WITH HEADER LINE,
       OUTTAB      TYPE TABLE OF ZSFMS_GETPCTX WITH HEADER LINE.
  DATA: POHEADER         TYPE BAPIMEPOHEADER,
        POHEADERX        TYPE BAPIMEPOHEADERX,
        WA_EXT           TYPE BAPI_TE_MEPOHEADER,
        WA_EXTX          TYPE BAPI_TE_MEPOHEADERX,
        EXPPURCHASEORDER TYPE BAPIMEPOHEADER-PO_NUMBER,
        EXTENSIONIN      TYPE TABLE OF BAPIPAREX WITH HEADER LINE,
        POCOMPONENTS     TYPE TABLE OF BAPIMEPOCOMPONENT WITH HEADER LINE,
        POCOMPONENTSX    TYPE TABLE OF BAPIMEPOCOMPONENTX WITH HEADER LINE,
        POITEM           TYPE STANDARD TABLE OF BAPIMEPOITEM WITH HEADER LINE,
        POITEMX          TYPE STANDARD TABLE OF BAPIMEPOITEMX WITH HEADER LINE,
        POSCHEDULE       TYPE STANDARD TABLE OF BAPIMEPOSCHEDULE WITH HEADER LINE,
        POSCHEDULEX      TYPE STANDARD TABLE OF BAPIMEPOSCHEDULX WITH HEADER LINE,
        POACCOUNT        TYPE STANDARD TABLE OF BAPIMEPOACCOUNT WITH HEADER LINE,
        POACCOUNTX       TYPE STANDARD TABLE OF BAPIMEPOACCOUNTX WITH HEADER LINE,
        POCOND           TYPE STANDARD TABLE OF BAPIMEPOCOND WITH HEADER LINE,
        POTEXTITEM       TYPE TABLE OF BAPIMEPOTEXT WITH HEADER LINE,
        RETURN           TYPE TABLE OF BAPIRET2 WITH HEADER LINE,
        POCONDX          TYPE STANDARD TABLE OF BAPIMEPOCONDX WITH HEADER LINE,
        POTEXTHEADER     TYPE TABLE OF BAPIMEPOTEXTHEADER WITH HEADER LINE,
        EBELP            TYPE EKPO-EBELP.
  DATA:
    IT_MIGO TYPE TABLE OF ZSFMS_MIGOPOST WITH HEADER LINE,
    BKTXT   TYPE BKTXT VALUE '质量异议'.
  DATA:IN_TABSP TYPE TABLE OF ZSMM_008 WITH HEADER LINE.
  DATA:IT_INBATCH TYPE TABLE OF ZSPP_006 WITH HEADER LINE.
  DATA:IT_OUTBATCH TYPE TABLE OF ZSMM206 WITH HEADER LINE.
  DATA:ZWERKS TYPE ZTMM010A-WERKS,
       ZLGORT TYPE ZTMM010A-LGORT,
       ZCLABS TYPE MCHB-CLABS,
       ZCHARG TYPE MCHB-CHARG.
  CLEAR:POACCOUNT[],POACCOUNTX[].

  IF in_tAB[] IS INITIAL.
    RTYPE = 'E'.
    RTMSG = '输入为空'.
    ZFMDATASAVE2 'R'.
    EXIT.
  ENDIF.
*&************************WMS传OA再传SAP的没有工厂BY LZF 29.12.2022 10:19:53************************&*
  READ TABLE IN_TAB INDEX 1.
  IF IN_TAB-WERKS IS INITIAL.
    SELECT SINGLE
      WERKS
      LGORT
     INTO ( ZWERKS,ZLGORT )
     FROM ZSAP2WMS WHERE ( WERKS = '3060' OR WERKS ='3062' ) AND ERPLGORT = IN_TAB-LGORT.
    IF ZWERKS IS NOT INITIAL AND ZLGORT IS NOT INITIAL.
      LOOP AT IN_TAB.
        IN_TAB-WERKS = ZWERKS.
        IN_TAB-LGORT = ZLGORT.
        MODIFY IN_TAB.
        CLEAR IN_TAB.
      ENDLOOP.                                                                       .
    ELSE.
      RTYPE = 'E'.
      RTMSG = '未获取到WMS对应的工厂或库存地'.
      ZFMDATASAVE2 'R'.
      RETURN.
    ENDIF.
    LOOP AT IN_TAB.
      IF IN_TAB-ZZBH IS NOT INITIAL."自编号
        IT_INBATCH-ZJH = IN_TAB-ZZBH.
        APPEND IT_INBATCH.
        CALL FUNCTION 'ZFM_CHECKUSE_BYJH'
          EXPORTING
            ATNAM  = 'Z01'
          TABLES
            INTAB  = IT_INBATCH
            OUTTAB = IT_OUTBATCH.
        IF IT_OUTBATCH IS NOT INITIAL.
          LOOP AT IT_OUTBATCH.
            SELECT SINGLE CLABS CHARG  INTO ( ZCLABS,ZCHARG )  FROM MCHB
              WHERE MATNR = IT_OUTBATCH-MATNR
              AND CHARG = IT_OUTBATCH-CHARG
              AND WERKS = IT_OUTBATCH-WERKS
              AND CLABS > 0.
            IF SY-SUBRC = 0.
              SELECT SINGLE PSPNR INTO @DATA(ZPSPNR) FROM MSPR
                WHERE MATNR = @IT_OUTBATCH-MATNR
                AND WERKS = @IT_OUTBATCH-WERKS
                AND LGORT = @IT_OUTBATCH-LGORT
                AND CHARG = @IT_OUTBATCH-CHARG.
              IF SY-SUBRC = 0.
                IN_TAB-PSPID = ZPSPNR.
              ENDIF.
            ENDIF.
          ENDLOOP.

        ELSE.
          RTYPE = 'E'.
          RTMSG = '未找到对应自编号的批次！'.
          ZFMDATASAVE2 'R'.
          RETURN.
        ENDIF.
      ENDIF.
    ENDLOOP.
  ELSE.
*&************************判断传入的批次是否为空，为空则需要根据卷号和自编号查询出批次 BY LZF 14.12.2022 09:45:11************************&*
    LOOP AT IN_TAB WHERE CHARG IS INITIAL.
      IF IN_TAB-ZZBH IS NOT INITIAL."自编号
        IT_INBATCH-ZJH = IN_TAB-ZZBH.
        APPEND IT_INBATCH.
        CALL FUNCTION 'ZFM_CHECKUSE_BYJH'
          EXPORTING
            ATNAM  = 'Z01'
          TABLES
            INTAB  = IT_INBATCH
            OUTTAB = IT_OUTBATCH.
      ELSEIF IN_TAB-ZJUANH IS NOT INITIAL ."卷号
        IT_INBATCH-ZJH = IN_TAB-ZJUANH.
        APPEND IT_INBATCH.
        CALL FUNCTION 'ZFM_CHECKUSE_BYJH'
          EXPORTING
            ATNAM  = 'Z02'
          TABLES
            INTAB  = IT_INBATCH
            OUTTAB = IT_OUTBATCH.
      ENDIF.
      IF IT_OUTBATCH[] IS NOT INITIAL.
        READ TABLE IT_OUTBATCH INDEX 1.
        in_tAB-CHARG = IT_OUTBATCH-CHARG.
      ELSE.
        RTYPE = 'E'.
        RTMSG = '未找到对应自编号或者卷号的批次！'.
        ZFMDATASAVE2 'R'.
        RETURN.
      ENDIF.
      MODIFY in_tAB.
      CLEAR:IN_TAB,IT_INBATCH,IT_INBATCH[],IT_OUTBATCH,IT_OUTBATCH[].
    ENDLOOP.
*&************************判断传入的批次是否为空，为空则需要根据卷号和自编号查询出批次 BY LZF 14.12.2022 09:45:11************************&*
  ENDIF.
*&************************WMS传OA再传SAP的没有工厂 BY LZF 29.12.2022 10:19:53************************&*

  SORT IN_TAB BY ZYYNO ZYYHH.
  READ TABLE IN_TAB INTO DATA(WA_TAB) INDEX 1.
  SELECT SINGLE EKORG, BUKRS
  FROM ZTMM228
  WHERE WERKS = @WA_TAB-WERKS
  INTO (@DATA(LS_EKORG),@DATA(LS_BUKRS)).
  IF WA_TAB-ZCLFS = '退货'.
    "抬头数据
    POHEADER-DOC_TYPE = 'Z08'."凭证类型
    POHEADER-COMP_CODE = LS_BUKRS."公司代码
    POHEADER-VENDOR = WA_TAB-LIFNR."供应商
    PERFORM ADDZERO(ZPUBFORM) CHANGING POHEADER-VENDOR.
    POHEADER-PURCH_ORG = LS_EKORG."采购组织
    POHEADER-PUR_GROUP = WA_TAB-ZCGZY."采购组
    POHEADER-CURRENCY = 'CNY'."货币
    POHEADER-CREAT_DATE = SY-DATUM."PO创建日期,制单日期
    POHEADER-DOC_DATE = SY-DATUM."PO创建日期
    PERFORM SETBAPIX(ZPUBFORM) USING POHEADER CHANGING POHEADERX.

    LOOP AT IN_TAB INTO DATA(LS_TAB).
      CLEAR:POITEM,POITEMX,POSCHEDULE,POSCHEDULEX,POCOND,POCONDX.
      ADD 10 TO EBELP.
*行项目
      POITEM-PO_ITEM = EBELP."行项目
      POITEM-MATERIAL = LS_TAB-MATNR.":物料
      POITEM-PLANT = LS_TAB-WERKS."工厂
*      POITEM-QUANTITY = LS_TAB-ZYYSL."数量
      POITEM-QUANTITY = LS_TAB-ZCGJS."数量
      POITEM-PO_UNIT = LS_TAB-MEINS1."单位
      POITEM-RET_ITEM = 'X'."退货项目
      POITEM-BATCH = LS_TAB-CHARG."批次
      POITEM-NET_PRICE = LS_TAB-ZPKDJ.
      POITEM-TAX_CODE = LS_TAB-MWSKZ.
      POITEM-GR_BASEDIV = 'X'.
      IF LS_TAB-PSPID IS NOT INITIAL.
        POITEM-ACCTASSCAT = 'Q'.
        POITEM-WBS_ELEMENT = LS_TAB-PSPID.
*科目分配
        POACCOUNT-PO_ITEM = EBELP.
        POACCOUNT-WBS_ELEMENT = LS_TAB-PSPID.
        PERFORM SETBAPIX(ZPUBFORM) USING POACCOUNT CHANGING POACCOUNTX.
        APPEND:POACCOUNT,POACCOUNTX.
      ENDIF.
*计划行
      POSCHEDULE-PO_ITEM = EBELP."
      POSCHEDULE-SCHED_LINE = 1."
      POSCHEDULE-DELIVERY_DATE = SY-DATUM."交货日期

      PERFORM SETBAPIX(ZPUBFORM) USING POITEM CHANGING POITEMX.
      PERFORM SETBAPIX(ZPUBFORM) USING POSCHEDULE CHANGING POSCHEDULEX.
      APPEND:POITEM,POITEMX,POSCHEDULE,POSCHEDULEX.
      CLEAR IT_MCHAS.
      IT_MCHAS-WERKS = LS_TAB-WERKS.
      IT_MCHAS-MATNR = LS_TAB-MATNR.
      IT_MCHAS-CHARG = LS_TAB-CHARG.
      COLLECT IT_MCHAS.
    ENDLOOP.
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_PO_CREATE1'
      EXPORTING
        POHEADER         = POHEADER
        POHEADERX        = POHEADERX
        NO_PRICE_FROM_PO = 'X'
      IMPORTING
        EXPPURCHASEORDER = EBELN
      TABLES
        RETURN           = RETURN
*       pocond           = pocond
*       pocondx          = pocondx
        POITEM           = POITEM
        POITEMX          = POITEMX
        POSCHEDULE       = POSCHEDULE
        POACCOUNT        = POACCOUNT
        POACCOUNTX       = POACCOUNTX
        POSCHEDULEX      = POSCHEDULEX
*       pocomponents     = pocomponents
*       pocomponentsx    = pocomponentsx
*       extensionin      = extensionin
*       potextheader     = potextheader
      EXCEPTIONS
        OTHERS           = 1.
    DATA(SUBRC) = SY-SUBRC.
    LOOP AT RETURN WHERE TYPE CA 'AEX'.
      CONCATENATE RETURN-MESSAGE RTMSG INTO RTMSG
      SEPARATED BY '/'.
    ENDLOOP.
    IF SY-SUBRC EQ 0 OR SUBRC NE 0.
      CONCATENATE 'E:' RTMSG INTO RTMSG.
      RTYPE = 'E'.
      SET UPDATE TASK LOCAL.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    ELSE.
      SET UPDATE TASK LOCAL.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
      RTYPE = 'S'.
      RTMSG = '成功'.

*改写采购订单状态 by LZF
      REFRESH IN_TABSP.
      CLEAR IN_TABSP.
      IN_TABSP-EBELN = EBELN.
      IN_TABSP-FRGKE = '1'.
      APPEND IN_TABSP.
      DATA:MSG2 TYPE BAPI_MSG.
      CALL FUNCTION 'ZFM_GP_OA_MM_POSP'
        IMPORTING
*         RTYPE  =
          RTMSG  = MSG2
        TABLES
          IN_TAB = IN_TABSP
*         T_RESULT       =
        .
********ADD BY DONGPZ BEGIN AT 19.12.2022 09:05:15
*推送WMS
*根据批次找Z01自编号
      CLEAR:IT_ZSMM_207[],OUTTAB[].
      CALL FUNCTION 'ZFMS_05_GETPCTX'
        EXPORTING
          ATNAM  = 'Z01'
        TABLES
          INTAB  = IT_MCHAS
          OUTTAB = OUTTAB.
      DELETE OUTTAB WHERE ATWRT IS INITIAL.
      SORT OUTTAB BY WERKS MATNR CHARG.

      LOOP AT IN_TAB.
        CLEAR:IT_ZSMM_207.
        MOVE-CORRESPONDING IN_TAB TO IT_ZSMM_207.
        IT_ZSMM_207-EBELN = EBELN.
        IT_ZSMM_207-ZCKLX = 'CGTH'.
        SELECT SINGLE LGOBE
          INTO IT_ZSMM_207-LGOBE
          FROM T001L
          WHERE WERKS = IN_TAB-WERKS
          AND   LGORT = IN_TAB-LGORT.
*        IT_ZSMM_207-ZZDR = IN_TAB-ZFQR.
*        IT_ZSMM_207-ZZDATE = IN_TAB-ZFQRQ.
        IT_ZSMM_207-ZBZ = IN_TAB-ZCLFS.
        IT_ZSMM_207-EBELP = IN_TAB-ZYYHH.
        IT_ZSMM_207-ZTHSL = IN_TAB-ZCGJS.
        IT_ZSMM_207-MEINS = IN_TAB-MEINS1.
        IT_ZSMM_207-PSPID = IN_TAB-PSPID.
        CALL FUNCTION 'CONVERSION_EXIT_ABPSP_INPUT'
          EXPORTING
            INPUT     = IT_ZSMM_207-PSPID
          IMPORTING
            OUTPUT    = IT_ZSMM_207-PSPNR
          EXCEPTIONS
            NOT_FOUND = 1
            OTHERS    = 2.
        SELECT SINGLE POST1
          INTO IT_ZSMM_207-POST1
          FROM PRPS
          WHERE PSPNR = IT_ZSMM_207-PSPNR.
        READ TABLE OUTTAB WITH KEY WERKS = IN_TAB-WERKS
                                   MATNR = IN_TAB-MATNR
                                   CHARG = IN_TAB-CHARG
                                   BINARY SEARCH.
        IF SY-SUBRC EQ 0.
          IT_ZSMM_207-ZZBH = OUTTAB-ATWRT.
        ENDIF.
        APPEND IT_ZSMM_207.
      ENDLOOP.

      CALL FUNCTION 'ZFM_GP_MM_WMS_SYNCOUTBOUNDDOC'
        TABLES
          IN_TAB = IT_ZSMM_207.

********ADD BY DONGPZ END AT 19.12.2022 09:05:15
      RTMSG = RTMSG && '/审批结果:' && MSG2.
    ENDIF.
  ELSE.
    IF WA_TAB-ZSFMZ = '否'.
      LOOP AT IN_TAB INTO DATA(LS_WA).
        IT_MIGO-MATNR = |{ LS_WA-MATNR ALPHA = IN }|.
        IT_MIGO-MENGE = LS_WA-ZYYSL."异议数量 ADD BY LZF 03.12.2022 09:26:58
        IT_MIGO-MEINS = LS_WA-ZMEINS.
        IT_MIGO-CHARG = LS_WA-CHARG.
        IT_MIGO-WERKS = LS_WA-WERKS.
        IF LS_WA-PSPID IS NOT INITIAL.
          CALL FUNCTION 'CONVERSION_EXIT_ABPSP_INPUT'
            EXPORTING
              INPUT  = LS_WA-PSPID
            IMPORTING
              OUTPUT = IT_MIGO-PSPNR.
          IT_MIGO-SOBKZ = 'Q'.
        ENDIF.
        SELECT SINGLE LGORT, UMLGO
        INTO (@DATA(LS_LGORT),@DATA(LS_UMLGO))
        FROM ZTMM229
        WHERE WERKS = @LS_WA-WERKS.
        IF LS_WA-WERKS <> '3002'.
          IT_MIGO-LGORT = LS_WA-LGORT.
          IT_MIGO-UMLGO = LS_UMLGO.
        ELSE.
          IT_MIGO-LGORT = LS_LGORT.
          IT_MIGO-UMLGO = LS_UMLGO.
        ENDIF.
        APPEND IT_MIGO.
        CLEAR:IT_MIGO,LS_LGORT, LS_UMLGO.
      ENDLOOP.
*&************************工厂3060或者3062时不移库 BY LZF 22.12.2022 10:26:01************************&*
      READ TABLE in_tAB INDEX 1.
      CASE in_tAB-WERKS.
        WHEN '3060' OR '3062'.
          ZFMDATASAVE2 'R'.
          RETURN.
      ENDCASE.
*&************************工厂3060或者3062时不移库 BY LZF 22.12.2022 10:26:01************************&*
      CALL FUNCTION 'ZFMS_01_MIGOPOST'
        EXPORTING
          BUDAT  = SY-DATUM
          BLDAT  = SY-DATUM
          BKTXT  = 'OA质量异议'
          "XBLNR  = XBLNR
          CODE   = '04'
          BWART  = '311'
        IMPORTING
          RTYPE  = RTYPE
          RTMSG  = RTMSG
          MBLNR  = MBLNR
          MJAHR  = MJAHR
        TABLES
          ITEM   = IT_MIGO
        EXCEPTIONS
          OTHERS = 1.
      IF RTYPE = 'S'.
        RTMSG = 'MES调拨出库成功'.
      ELSE.
        RTMSG = RTMSG.
      ENDIF.
    ENDIF.
  ENDIF.
  ZFMDATASAVE2 'R'.

ENDFUNCTION.
