FUNCTION ZFM_GPBX_MES_PP_CREATERUKU.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  EXPORTING
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      IN_TAB STRUCTURE  ZSPP_226
*"      OUT_TABPC STRUCTURE  ZSMM_017 OPTIONAL
*"----------------------------------------------------------------------
  ZFMDATASAVE1 'ZFM_GPBX_MES_PP_CREATERUKU'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.
  "bapi 参数
  DATA:LS_HEADER           TYPE          BAPI2017_GM_HEAD_01,
       LS_CODE             TYPE          BAPI2017_GM_CODE,
       LT_ITEM             TYPE TABLE OF BAPI2017_GM_ITEM_CREATE,
       LS_ITEM             TYPE          BAPI2017_GM_ITEM_CREATE,
       LT_RETURN           TYPE TABLE OF BAPIRET2,
       LS_RETURN           TYPE          BAPIRET2,
       LV_MATERIALDOCUMENT TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,
       LV_MATDOCUMENTYEAR  TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR.
  DATA:BEGIN OF IT_PCTX OCCURS 0.
         INCLUDE STRUCTURE ZSMMS_CHAR.
  DATA:  MATNR TYPE MATNR,
         CHARG TYPE CHARG_D,
         WERKS TYPE WERKS_D,
       END OF IT_PCTX.
  DATA:IT_CHAR TYPE TABLE OF ZSMMS_CHAR WITH HEADER LINE,
       P_TYPE  TYPE BAPI_MTYPE,
       P_MSG   TYPE BAPI_MSG.
  DATA:IT_316   TYPE TABLE OF ZTPP316 WITH HEADER LINE,
       IT_MCHAS TYPE TABLE OF MCHA WITH HEADER LINE.
  DATA:ZKS TYPE I.
  REFRESH: IT_316,IT_PCTX,IT_MCHAS.
  DEFINE DATACHECK.
    IF &1 IS INITIAL.
      rtype = 'E'.
      rtmsg = &2 && '不能为空'.
      zfmdatasave2 'R'.
      RETURN.
    ENDIF.
  END-OF-DEFINITION.

  IF IN_TAB[] IS INITIAL.
    RTYPE = 'E'.
    RTMSG = 'in_tab[]不能为空'.
    EXIT.
    ZFMDATASAVE2 'R'.
  ENDIF.
  LOOP AT IN_TAB.
    DATACHECK IN_TAB-WMSPC           '包号'.
*    datacheck in_tab-mwmgzdate       '过账日期'.
    DATACHECK IN_TAB-WERKS           '工厂'.
    DATACHECK IN_TAB-CORRELATIONNO   '订单号'.
    DATACHECK IN_TAB-PRODUCTCODE     '物料'.
    DATACHECK IN_TAB-JSQTY           '数量'.
    DATACHECK IN_TAB-UNIT           '单位'.
    DATACHECK IN_TAB-WMSNO           '存储地点'.
    DATACHECK IN_TAB-ZCD             '长度'.
    DATACHECK IN_TAB-ZKS             '块数'.

  ENDLOOP.


  " 物料号加前导零  12.10.2022 15:39:59 by kkw
  DATA MATNR1 TYPE MATNR.

  LS_CODE = '02'.
  "准备抬头数据
  LS_HEADER-PSTNG_DATE    = SY-DATUM.
  LS_HEADER-DOC_DATE      = SY-DATUM.             "凭证中的凭证日期
  LS_HEADER-PR_UNAME      = SY-UNAME.              "用户名
  LS_HEADER-HEADER_TXT = '博兴MES'.
  CLEAR:LS_ITEM,LT_ITEM.
  "行项目数据
  LOOP AT IN_TAB.
    LS_ITEM-ORDERID    =    |{ IN_TAB-CORRELATIONNO ALPHA = IN }|.         "工单号

    SELECT COUNT( * ) FROM AFKO WHERE AUFNR = LS_ITEM-ORDERID.
    IF SY-SUBRC NE 0.
      DATA(MSG) = 'SAP查无工单:' && LS_ITEM-ORDERID.
      FILL_RTYPE 'E' MSG .
    ENDIF.

    LS_ITEM-MATERIAL   =    IN_TAB-PRODUCTCODE.         "物料编号
    LS_ITEM-PLANT      =    IN_TAB-WERKS.         "工厂
    LS_ITEM-STGE_LOC   =    IN_TAB-WMSNO.         "库存地点
    CALL FUNCTION 'ZFM_GP_PP_MIGO_BATCHNO'
      EXPORTING
        AUFNR = LS_ITEM-ORDERID
      CHANGING
        CHARG = LS_ITEM-BATCH.
    LS_ITEM-ENTRY_QNT  =    IN_TAB-JSQTY.         "以录入项单位表示的数量
    LS_ITEM-ENTRY_UOM  =    IN_TAB-UNIT.
    LS_ITEM-MVT_IND    =    'F'.             "移动标识  ’B‘为采购收货  ’F ' 生产收货
    LS_ITEM-MOVE_TYPE  =    '101'.                 "移动类型
    APPEND LS_ITEM  TO LT_ITEM .
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z20'.
    IT_PCTX-VALUE = IN_TAB-WMSPC.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z107'.
    IT_PCTX-VALUE = IN_TAB-ZCC.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z22'.
    IT_PCTX-VALUE = IN_TAB-ZJHDH.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z23'.
    IT_PCTX-VALUE = IN_TAB-CORRELATIONNO.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z32'.
    CLEAR ZKS.
    ZKS = IN_TAB-ZKS.
    IT_PCTX-VALUE = ZKS.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z109'.
    IT_PCTX-VALUE = IN_TAB-ZCX.
    APPEND IT_PCTX.
*    CLEAR IT_PCTX.
*    IT_PCTX-CHARG = LS_ITEM-BATCH.
*    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
*    IT_PCTX-WERKS = IN_TAB-WERKS.
*    IT_PCTX-NO = 'Z19'.
*    IT_PCTX-VALUE = IN_TAB-JSQTY.
*    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z51'.
    IT_PCTX-VALUE = IN_TAB-ZDTMC.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z52'.
    IT_PCTX-VALUE = IN_TAB-ZLMZX.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z27'.
    IT_PCTX-VALUE = IN_TAB-WMSNO.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z38'.
    IT_PCTX-VALUE = IN_TAB-ZSJ.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z00'.
    IT_PCTX-VALUE = IN_TAB-UNIT.
    APPEND IT_PCTX.
    CLEAR IT_PCTX.
    IT_PCTX-CHARG = LS_ITEM-BATCH.
    IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
    IT_PCTX-WERKS = IN_TAB-WERKS.
    IT_PCTX-NO = 'Z108'.
    IT_PCTX-VALUE = IN_TAB-ZSCBZ.
    APPEND IT_PCTX.

    CLEAR IT_PCTX.
    SELECT SINGLE ZZL1
      INTO IT_PCTX-VALUE
      FROM MARA
      WHERE MATNR = IT_PCTX-MATNR.
    IF SY-SUBRC EQ 0.
      IT_PCTX-CHARG = LS_ITEM-BATCH.
      IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
      IT_PCTX-WERKS = IN_TAB-WERKS.
      IT_PCTX-NO = 'Z36'.
      APPEND IT_PCTX.
    ENDIF.
    CLEAR IT_PCTX.
    SELECT SINGLE ZPCDH
      INTO IT_PCTX-VALUE
      FROM ZTPP_206
      WHERE AUFNR = LS_ITEM-ORDERID.
    IF SY-SUBRC EQ 0.
      DATA(L_ZPCDH) = IT_PCTX-VALUE.
      IT_PCTX-CHARG = LS_ITEM-BATCH.
      IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
      IT_PCTX-WERKS = IN_TAB-WERKS.
      IT_PCTX-NO = 'Z21'.
      APPEND IT_PCTX.
      CLEAR IT_PCTX.
      SELECT SINGLE VBELN
        INTO IT_PCTX-VALUE
        FROM ZTPP_205
        WHERE ZPCDH = L_ZPCDH.
      IF SY-SUBRC EQ 0.
        DATA(L_VBELN) = IT_PCTX-VALUE.
        IT_PCTX-CHARG = LS_ITEM-BATCH.
        IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
        IT_PCTX-WERKS = IN_TAB-WERKS.
        IT_PCTX-NO = 'Z25'.
        APPEND IT_PCTX.
        CLEAR IT_PCTX.
        SELECT SINGLE *
          FROM VBAK
          WHERE VBELN = L_VBELN.
        IF SY-SUBRC EQ 0.
          CALL FUNCTION 'CONVERSION_EXIT_ABPSP_OUTPUT'
            EXPORTING
              INPUT  = VBAK-PS_PSP_PNR
            IMPORTING
              OUTPUT = IT_PCTX-VALUE.
          IT_PCTX-CHARG = LS_ITEM-BATCH.
          IT_PCTX-MATNR = IN_TAB-PRODUCTCODE.
          IT_PCTX-WERKS = IN_TAB-WERKS.
          IT_PCTX-NO = 'Z24'.
          APPEND IT_PCTX.
        ENDIF.
      ENDIF.
    ENDIF.
*    IT_PCTX-Z55   = IN_TAB-ZZS .
    CLEAR:IT_MCHAS.          .
    IT_MCHAS-CHARG = LS_ITEM-BATCH.
    IT_MCHAS-MATNR = IN_TAB-PRODUCTCODE.
    IT_MCHAS-WERKS = IN_TAB-WERKS.
    COLLECT IT_MCHAS.

*找到
    APPEND IT_PCTX.

    CLEAR IT_316.
    IT_316-WERKS      = IN_TAB-WERKS.
    IT_316-MATNR      = IN_TAB-PRODUCTCODE.
    IT_316-CHARG      = LS_ITEM-BATCH.
    IT_316-ZCC        = IN_TAB-ZCC.
    IT_316-AUFNR      = LS_ITEM-ORDERID.
    IT_316-ZBH        = IN_TAB-WMSPC.
    IT_316-ZZK        = IN_TAB-ZKS.
*    it_316-zkd        = in_tab-zkd.
    IT_316-ZCD        = IN_TAB-ZCD.
    IF IT_316-ZCC = '0'
      OR IT_316-ZCC IS INITIAL.
      IT_316-ZCC        = IN_TAB-ZCD.
      CONDENSE IT_316-ZCC NO-GAPS.
    ENDIF.
    IT_316-ZTXBH      = IN_TAB-ZTXBH.
    IT_316-ZZHANKUAN  = IN_TAB-ZZK.
    IT_316-ZZHESHU    = IN_TAB-ZZS.
    IT_316-ZSL    = IN_TAB-JSQTY.
    IT_316-PLNUMHH    = IN_TAB-PLNUMHH.
    IT_316-PLNUM    = IN_TAB-ZJHDH.
    IT_316-ZDTMC    = IN_TAB-ZDTMC.
    IT_316-ZLMZX    = IN_TAB-ZLMZX.
    PERFORM DELQFW(ZPUBFORM) CHANGING IN_TAB-ZKD.
    IT_316-ZKD = IN_TAB-ZKD.
    APPEND IT_316.
  ENDLOOP.


  SET UPDATE TASK LOCAL.
  CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
    EXPORTING
      GOODSMVT_HEADER  = LS_HEADER
      GOODSMVT_CODE    = LS_CODE
    IMPORTING
      MATERIALDOCUMENT = LV_MATERIALDOCUMENT
      MATDOCUMENTYEAR  = LV_MATDOCUMENTYEAR
    TABLES
      GOODSMVT_ITEM    = LT_ITEM
      RETURN           = LT_RETURN.

  IF ( LINE_EXISTS( LT_RETURN[ TYPE = 'A' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'E' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'X' ] ) ).
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

    DATA: LT_MSG_TAB TYPE ESP1_MESSAGE_TAB_TYPE,
          WA_MSG_TAB LIKE LINE OF LT_MSG_TAB.
    DATA:MSG1 TYPE BAPI_MSG.
    CLEAR MSG1.
    LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE CA 'AEX'.
      CONCATENATE '错误：' LS_RETURN-MESSAGE INTO MSG1.
    ENDLOOP.
    FILL_RTYPE 'E' MSG1 .
  ELSE.
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = 'X'.

    DATA(CC) = |101生产收货成功,凭证号:{ LV_MATERIALDOCUMENT }|.
    FILL_RTYPE 'S' CC .
  ENDIF.
*   更新批次特性  11.10.2022 17:54:13 by kkw
  IF RTYPE = 'S'.
********ADD BY DONGPZ BEGIN AT 31.12.2022 20:03:04
*收货成功后更新批次特征值
********ADD BY DONGPZ END AT 31.12.2022 20:03:04
    "存表
    MODIFY ZTPP316 FROM TABLE IT_316[].
    COMMIT WORK.

    CLEAR:IT_CHAR[],P_TYPE,P_MSG,OUT_TABPC.
    LOOP AT IT_MCHAS.
      CLEAR:IT_CHAR[].
      LOOP AT IT_PCTX WHERE WERKS = IT_MCHAS-WERKS
                       AND  MATNR = IT_MCHAS-MATNR
                       AND  CHARG = IT_MCHAS-CHARG.
        CLEAR:IT_CHAR.
        MOVE-CORRESPONDING IT_PCTX TO IT_CHAR.
        APPEND IT_CHAR.
      ENDLOOP.
      CALL FUNCTION 'ZMMS_UPDATE_OBJCL'
        EXPORTING
          MATNR  = IT_MCHAS-MATNR
          CHARG  = IT_MCHAS-CHARG
          WERKS  = IT_MCHAS-WERKS
        IMPORTING
          RTYPE  = P_TYPE
          RTMSG  = P_MSG
        TABLES
          CHAR   = IT_CHAR
        EXCEPTIONS
          OTHERS = 1.
      CLEAR OUT_TABPC.
      OUT_TABPC-FLAG = P_TYPE.
      OUT_TABPC-MESSAGE = IT_PCTX-CHARG && ',' && P_MSG.
      APPEND OUT_TABPC.
    ENDLOOP.

  ENDIF.
  ZFMDATASAVE2 'R'.




ENDFUNCTION.
