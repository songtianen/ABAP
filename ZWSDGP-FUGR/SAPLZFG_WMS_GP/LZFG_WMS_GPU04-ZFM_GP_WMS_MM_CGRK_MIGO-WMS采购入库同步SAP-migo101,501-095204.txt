FUNCTION ZFM_GP_WMS_MM_CGRK_MIGO .
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(BS) TYPE  CHAR1 OPTIONAL
*"  EXPORTING
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"     VALUE(MBLNR351) TYPE  MBLNR
*"     VALUE(MJAHR) TYPE  MJAHR
*"     VALUE(MBLNR101) TYPE  MBLNR
*"  TABLES
*"      IN_TAB STRUCTURE  ZSMM_205
*"      RET STRUCTURE  BAPIRET2 OPTIONAL
*"----------------------------------------------------------------------
  CONSTANTS:FMNAM TYPE CHAR70 VALUE 'ZFM_GP_WMS_MM_CGRK_MIGO'.
  ZFMDATASAVE1 FMNAM.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.
**********************************************************************
  " 按照ZDHNO by kkw 29.11.2022 17:33:381
**********************************************************************
  IF IN_TAB[] IS INITIAL.
    RTYPE = 'E'.
    RTMSG = '无数据'.
    ZFMDATASAVE2 'R'.
    EXIT.
  ENDIF.
  READ TABLE IN_TAB INDEX 1.
  IF IN_TAB-ZDHNO+0(4) = 'DHTZ'.
    PERFORM DHTZGZ TABLES IN_TAB CHANGING RTYPE RTMSG.
  ELSE.
    PERFORM DBGZ TABLES IN_TAB RET USING BS CHANGING RTYPE RTMSG MBLNR351 MBLNR101 MJAHR.
  ENDIF.
  ZFMDATASAVE2 'R'.

ENDFUNCTION.



"到货通知单过账
FORM DHTZGZ TABLES IN_TAB STRUCTURE ZSMM_205 CHANGING RTYPE RTMSG.
  CONSTANTS:FMNAM TYPE CHAR70 VALUE 'ZFM_GP_WMS_MM_CGRK_MIGO'.
  DEFINE FILLMSG.
    rtype = &1.
    rtmsg = &2.
    IF &3 = 'X'.
*  zfmdatasave2 'R'.
    ENDIF.
    IF &4 = 'X'.
    RETURN.
    ENDIF.
  END-OF-DEFINITION.
  TABLES:*ZTMM201,*ZTMM202.
  DATA BEGIN OF ITAB OCCURS 0.
  INCLUDE STRUCTURE ZSMM_205.
  DATA:UEPOS TYPE ZTMM202-ZDHHH,
       END OF ITAB,
       BEGIN OF IT_ZDHHH OCCURS 0,
         ZDHHH TYPE ZTMM202-ZDHHH,
       END OF IT_ZDHHH,
       IT_ZTPP316 TYPE TABLE OF ZTPP316 WITH HEADER LINE,
       IT_ZTMM202 TYPE TABLE OF ZTMM202 WITH HEADER LINE.
  DATA:ZDHHH TYPE ZTMM202-ZDHHH.

  DELETE IN_TAB WHERE ZDHNO IS INITIAL.
  IF IN_TAB[] IS INITIAL.
    FILLMSG 'E' '无数据' 'X' 'X'.
  ENDIF.
  CLEAR:ZTSAP_PUBSAVELOG,*ZTMM201, IN_TAB,
  TABIX,ITAB[],IT_ZDHHH[].
  READ TABLE IN_TAB INDEX 1.
  SELECT *
    INTO TABLE IT_ZTMM202
    FROM ZTMM202
    WHERE ZDHDH = IN_TAB-ZDHNO.
  IF SY-SUBRC NE 0.
    FILLMSG 'E' '无到货单数据' 'X' 'X'.
  ENDIF.
  SORT IT_ZTMM202 BY ZDHDH ZDHHH.
*取表数据进行修改，过账后进行更新表
  SORT IN_TAB BY ZDHNO ZDHHH.
  LOOP AT IN_TAB.
    CLEAR:IT_ZDHHH, ITAB.
    IF IN_TAB-ZDHHH MOD 100 GT 0.
      FILLMSG 'E' '行号不正确，不允许100，200之外的规则' 'X' 'X'.
    ENDIF.
    MOVE-CORRESPONDING IN_TAB TO ITAB.
    ITAB-UEPOS = ITAB-ZDHHH.
    APPEND ITAB.
    IT_ZDHHH-ZDHHH = ITAB-ZDHHH.
    COLLECT IT_ZDHHH.
  ENDLOOP.
*找到数据库最大行号
  IF IT_ZDHHH[] IS NOT INITIAL .
    SORT IT_ZDHHH BY ZDHHH.
    SELECT *
      INTO TABLE @DATA(IT_ZTMM202A)
      FROM ZTMM202
      FOR ALL ENTRIES IN @IT_ZDHHH
      WHERE UEPOS = @IT_ZDHHH-ZDHHH
      AND   ZDHDH = @IN_TAB-ZDHNO.
    SORT IT_ZTMM202A BY UEPOS ZDHHH DESCENDING.
  ENDIF.
  SELECT * INTO TABLE IT_ZSAP2WMS FROM ZSAP2WMS.
  SORT IT_ZSAP2WMS BY ERPLGORT WERKS.
*存在拆分,则以一行为原行,其他行变为拆分行
  LOOP AT ITAB.
    CLEAR:ZSAP2WMS,IT_ZTMM202,IT_ZDHHH,*ZTMM202,
    ZTMM202.
*根据WMS传过来的工厂库存地匹配SAP工厂库存地
    READ TABLE IT_ZDHHH WITH KEY ZDHHH = ITAB-ZDHHH.
    IF SY-SUBRC = 0."若存在,说明是第一个原行,只进行修改,修改后删除
*找最大行号
      READ TABLE IT_ZTMM202A INTO ZTMM202 WITH KEY UEPOS = ITAB-ZDHHH.
      ZDHHH = ZTMM202-ZDHHH.
      IF ZDHHH IS INITIAL.
        ZDHHH = IT_ZDHHH-ZDHHH.
      ENDIF.
      READ TABLE IT_ZTMM202 WITH KEY ZDHDH = ITAB-ZDHNO
                                     ZDHHH = ITAB-ZDHHH.
      IF SY-SUBRC EQ 0.
        TABIX = SY-TABIX.
        READ TABLE IT_ZSAP2WMS WITH KEY ERPLGORT = ITAB-LGORT
                                        WERKS = IT_ZTMM202-WERKS
                                        BINARY SEARCH.
        IF SY-SUBRC NE 0.
          FILLMSG 'E' 'WMS工厂库存地未在SAP找到映射关系' 'X' 'X'.
        ENDIF.
        IT_ZTMM202-LGORT = IT_ZSAP2WMS-LGORT.
        IT_ZTMM202-ZCML =  ITAB-ZZHXS.
        IT_ZTMM202-ZZHXS =  ITAB-ZZHXS.
        IT_ZTMM202-ZJSL =  ITAB-ZJSL.
        IT_ZTMM202-ZRKL =  ITAB-ZRKSL.
        IT_ZTMM202-ZJH =   ITAB-ZWGJPC.
        IT_ZTMM202-ZBZH =  ITAB-ZBZH.
        IT_ZTMM202-ZZBH =  ITAB-ZZBH.
        IT_ZTMM202-ZBHGL = ITAB-ZBHGL.
        IT_ZTMM202-UPDKZ = 'U'.
        MODIFY IT_ZTMM202 INDEX TABIX.
        DELETE IT_ZDHHH  WHERE ZDHHH = IT_ZTMM202-ZDHHH.
      ELSE.
        CONCATENATE '行号' ITAB-ZDHHH '不存在' INTO RTMSG.
        FILLMSG 'E' RTMSG 'X' 'X'.
      ENDIF.
    ELSE."没有的需要进行拆分
*行号的拆分
      READ TABLE IT_ZTMM202 INTO *ZTMM202 WITH KEY ZDHDH = ITAB-ZDHNO
                                                   ZDHHH = ITAB-ZDHHH.
      IF SY-SUBRC NE 0.
        CONCATENATE '行号' ITAB-ZDHHH '不存在' INTO RTMSG.
        FILLMSG 'E' RTMSG 'X' 'X'.
      ENDIF.
      ADD 1 TO ZDHHH.
      IT_ZTMM202 = *ZTMM202.
      IT_ZTMM202-UEPOS = *ZTMM202-ZDHHH.
      READ TABLE IT_ZSAP2WMS WITH KEY ERPLGORT = ITAB-LGORT
                                      WERKS = IT_ZTMM202-WERKS
                                      BINARY SEARCH.
      IF SY-SUBRC NE 0.
        FILLMSG 'E' 'WMS工厂库存地未在SAP找到映射关系' 'X' 'X'.
      ENDIF.
      CLEAR: IT_ZTMM202-ZYSJEI.
      IT_ZTMM202-ZDHHH = ZDHHH.
      IT_ZTMM202-LGORT = IT_ZSAP2WMS-LGORT.
      IT_ZTMM202-ZCML =  ITAB-ZZHXS.
      IT_ZTMM202-ZZHXS =  ITAB-ZZHXS.
      IT_ZTMM202-ZJSL =  ITAB-ZJSL.
      IT_ZTMM202-ZRKL =  ITAB-ZRKSL.
      IT_ZTMM202-ZJH =   ITAB-ZWGJPC.
      IT_ZTMM202-ZBZH =  ITAB-ZBZH.
      IT_ZTMM202-ZZBH =  ITAB-ZZBH.
      IT_ZTMM202-ZBHGL = ITAB-ZBHGL.
      IT_ZTMM202-UPDKZ = 'I'.
      APPEND IT_ZTMM202.
    ENDIF.

  ENDLOOP.
*添加通用程序锁
  PERFORM PUBGUIDLOCK(ZRSAP_PUBLOCK) USING FMNAM IN_TAB-ZGUID
          CHANGING RTMSG ZTSAP_PUBSAVELOG.
  CASE RTMSG+0(1).
    WHEN 'S'.
      FILLMSG 'S' RTMSG 'X' 'X'.
    WHEN 'E'.
      FILLMSG 'E' RTMSG 'X' 'X'.
  ENDCASE.

  CALL FUNCTION 'ZFM_DHTZ_MOVE_CANCEL'
    EXPORTING
      ZDHDH     = IN_TAB-ZDHNO
*     BUDAT     = SY-DATUM
      ACT       = 'POSTWMS'
    IMPORTING
      RTYPE     = RTYPE
      RTMSG     = RTMSG
    TABLES
      T_ITEM    = IT_ZTMM202
      IN_TAB    = IN_TAB
    CHANGING
      O_ZTMM201 = *ZTMM201.
  IF RTYPE = 'S'.
    CALL FUNCTION 'ZFM_UPDDHDH'
      IMPORTING
        RTMSG     = RTMSG
      TABLES
        I_ZTMM202 = IT_ZTMM202.
*委外回场的向ZTPP316写值
    CASE *ZTMM201-ZDHLX.
      WHEN 'WWHC'.
        IF *ZTMM201-MBLNR IS NOT INITIAL.
          SELECT *
            INTO TABLE @DATA(IT_MSEG)
            FROM MSEG
            WHERE MBLNR = @*ZTMM201-MBLNR
            AND   MJAHR = @*ZTMM201-MJAHR
            AND   BWART = '101'.
          IF SY-SUBRC EQ 0.
            SORT IT_MSEG BY EBELN EBELP.
            CLEAR:IT_ZTPP316[].
            LOOP AT ITAB.
              CLEAR:IT_ZTPP316.
              READ TABLE IT_ZTMM202 WITH KEY ZDHHH = ITAB-UEPOS.
              IF SY-SUBRC EQ 0.
                READ TABLE IT_MSEG INTO MSEG WITH KEY EBELN  = IT_ZTMM202-EBELN
                                                      EBELP  = IT_ZTMM202-EBELP
                                                      BINARY SEARCH.
                IF SY-SUBRC EQ 0.
                  IT_ZTPP316-WERKS = IT_ZTMM202-WERKS.
                  IT_ZTPP316-MATNR = IT_ZTMM202-MATNR.
                  IT_ZTPP316-CHARG = MSEG-CHARG.
                  IT_ZTPP316-ZBH = ITAB-ZBAOHAO.
                  IT_ZTPP316-ZZK = ITAB-ZKUAISHU.
                  APPEND IT_ZTPP316.
                ENDIF.
              ENDIF.
            ENDLOOP.
            IF IT_ZTPP316[] IS NOT INITIAL.
              MODIFY ZTPP316 FROM TABLE IT_ZTPP316.
            ENDIF.
          ENDIF.
        ENDIF.
    ENDCASE.

*更新自建表
    ZTSAP_PUBSAVELOG-FMNAM = FMNAM.
    ZTSAP_PUBSAVELOG-GUID = IN_TAB-ZGUID.
    ZTSAP_PUBSAVELOG-ERDAT = SY-DATUM.
    ZTSAP_PUBSAVELOG-ERTIM = SY-UZEIT.
    ZTSAP_PUBSAVELOG-ERNAM = SY-UNAME.
    ZTSAP_PUBSAVELOG-ENDFLG = 'X'.
    ZTSAP_PUBSAVELOG-ZDHDH = *ZTMM201-ZDHDH.
*    ZTSAP_PUBSAVELOG-MBLNR = MBLNR.
*    ZTSAP_PUBSAVELOG-MJAHR = MJAHR.
    MODIFY ZTSAP_PUBSAVELOG FROM ZTSAP_PUBSAVELOG.
    COMMIT WORK .
  ELSE.
*若为部分成功,也存表
    IF *ZTMM201-MBLNR IS NOT INITIAL
      OR *ZTMM201-MBLNR1 IS NOT INITIAL.
      CALL FUNCTION 'ZFM_UPDDHDH'
        IMPORTING
          RTMSG     = RTMSG
        TABLES
          I_ZTMM202 = IT_ZTMM202.
    ENDIF.
  ENDIF.
  FILLMSG RTYPE RTMSG 'X' 'X'.
ENDFORM.


"调拨单过账
FORM DBGZ TABLES IN_TAB STRUCTURE ZSMM_205
                   RET STRUCTURE BAPIRET2
  USING BS TYPE CHAR1 CHANGING RTYPE RTMSG MBLNR351 MBLNR101 MJAHR.
  DEFINE FILLMSG.
    rtype = &1.
    rtmsg = &2.
    IF &3 = 'X'.
*  zfmdatasave2 'R'.
    ENDIF.
    IF &4 = 'X'.
    RETURN.
    ENDIF.
  END-OF-DEFINITION.

*  DATA BEGIN OF itab OCCURS 0.
*  INCLUDE STRUCTURE ztmm221.
*  DATA:wmsno TYPE ztmm220-zwmsno,
*       werks TYPE werks_d,
*       END OF itab.
  DATA:IT_ZTMM221 TYPE TABLE OF ZTMM221 WITH HEADER LINE,
       WA_ZTMM220 TYPE  ZTMM220.

  DELETE IN_TAB WHERE ZDHNO IS INITIAL.
  IF IN_TAB[] IS INITIAL.
    FILLMSG 'E' '无数据' 'X' 'X'.
  ENDIF.
  READ TABLE IN_TAB INDEX 1.
  SELECT *
    INTO TABLE IT_ZTMM221
    FROM ZTMM221
    WHERE ZDBDH = IN_TAB-ZDHNO.
  SELECT SINGLE *
    INTO  WA_ZTMM220
    FROM ZTMM220
    WHERE ZDBDH = IN_TAB-ZDHNO.
  IF SY-SUBRC NE 0.
    FILLMSG 'E' '无调拨单数据' 'X' 'X'.
  ENDIF.
  SORT IT_ZTMM221 BY ZDBDH ZHH.
  IF BS NE 'X'.
    SELECT * INTO TABLE IT_ZSAP2WMS FROM ZSAP2WMS.
    SORT IT_ZSAP2WMS BY ERPLGORT WERKS.

    LOOP AT IN_TAB.
      READ TABLE IT_ZTMM221 WITH KEY ZDBDH = IN_TAB-ZDHNO ZHH = |{ IN_TAB-ZDHHH ALPHA = IN }| BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        TABIX = SY-TABIX.
        READ TABLE IT_ZSAP2WMS WITH KEY ERPLGORT = IN_TAB-LGORT
                                        WERKS = WA_ZTMM220-WERKS
                                               BINARY SEARCH.
        IF SY-SUBRC NE 0.
          FILLMSG 'E' 'WMS工厂库存地未在SAP找到映射关系' 'X' 'X'.
        ENDIF.
        IT_ZTMM221-LGORT = IT_ZSAP2WMS-LGORT.
        IT_ZTMM221-ZCML  = IN_TAB-ZZHXS.
        IT_ZTMM221-ZDBSL_IN = IN_TAB-ZJSL.
        IT_ZTMM221-ZJH   = IN_TAB-ZWGJPC.
        IT_ZTMM221-ZBZ   = IN_TAB-ZBZH.
        IT_ZTMM221-ZZBH  = IN_TAB-ZZBH.
        IT_ZTMM221-UPDKZ = 'U'.
        MODIFY IT_ZTMM221 FROM IT_ZTMM221 INDEX TABIX.
        WA_ZTMM220-ZWMSNO = IN_TAB-ZGUID.
      ENDIF.
    ENDLOOP.
    DELETE IT_ZTMM221 WHERE UPDKZ IS INITIAL.
  ENDIF.
**********************************************************************
  " 更新价格条件by kkw 29.11.2022 21:39:40
  " 改用董老师的函数  07.12.2022 19:59:11 by kkw
  DATA:IT_ZSMM208 TYPE TABLE OF ZSMM208 WITH HEADER LINE.
  CLEAR:IT_ZSMM208[].
  LOOP AT IT_ZTMM221.
    IF IT_ZTMM221-ZYSJE GT 0.
      CLEAR IT_ZSMM208.
      IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
      IT_ZSMM208-KSCHL = 'ZFR1'.
      IT_ZSMM208-KBETR = IT_ZTMM221-ZYSJE.
      APPEND IT_ZSMM208.
      CLEAR IT_ZSMM208.
      IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
      IT_ZSMM208-KSCHL = 'ZM01'.
      IT_ZSMM208-KBETR = 90.
      APPEND IT_ZSMM208.
      IF WA_ZTMM220-LIFNR  IS NOT INITIAL.
        CLEAR IT_ZSMM208.
        IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
        IT_ZSMM208-KSCHL = 'ZF01'.
        IT_ZSMM208-LIFNR = WA_ZTMM220-LIFNR.
        APPEND IT_ZSMM208.
      ENDIF.
    ENDIF.
    IF IT_ZTMM221-ZCCF GT 0.
      CLEAR IT_ZSMM208.
      IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
      IT_ZSMM208-KSCHL = 'ZFR4'.
      IT_ZSMM208-KBETR = IT_ZTMM221-ZCCF.
      APPEND IT_ZSMM208.
      CLEAR IT_ZSMM208.
      IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
      IT_ZSMM208-KSCHL = 'ZM04'.
      IT_ZSMM208-KBETR = 90.
      APPEND IT_ZSMM208.
      IF WA_ZTMM220-LIFNR  IS NOT INITIAL.
        CLEAR IT_ZSMM208.
        IT_ZSMM208-EBELP = IT_ZTMM221-ZHH.
        IT_ZSMM208-KSCHL = 'ZF04'.
        IT_ZSMM208-LIFNR = WA_ZTMM220-LIFNR.
        APPEND IT_ZSMM208.
      ENDIF.
    ENDIF.
  ENDLOOP.
  IF IT_ZSMM208[] IS NOT INITIAL.
    CALL FUNCTION 'ZFM_MM_CHGPOPRICE'
      EXPORTING
        EBELN  = WA_ZTMM220-EBELN
      IMPORTING
        RTYPE  = RTYPE
        RTMSG  = RTMSG
      TABLES
        RETURN = RET
        INTAB  = IT_ZSMM208.
    RET-TYPE = 'I'.
    RET-MESSAGE = '以上为运费分摊返回信息'.
    APPEND RET.
    IF RTYPE = 'E'.
      CONCATENATE '采购订单' WA_ZTMM220-EBELN '运费分摊失败' RTMSG INTO RTMSG.
      FILLMSG 'E' RTMSG 'X' 'X'.
    ELSE.
      WAIT UP TO 1 SECONDS.
    ENDIF.
  ELSE.
    RET-TYPE = 'I'.
    RET-MESSAGE = '运费或者仓储费不大于0,没有进行运费分摊'.
    APPEND RET.
    RET-TYPE = 'I'.
    RET-MESSAGE = '以上为运费分摊返回信息'.
    APPEND RET.
  ENDIF.

**********************************************************************
**********************************************************************
  " migo 351 101 by kkw 29.11.2022 22:00:19
  DATA:LS_HEADER           TYPE          BAPI2017_GM_HEAD_01,
       LS_CODE             TYPE          BAPI2017_GM_CODE,
       LT_ITEM             TYPE TABLE OF BAPI2017_GM_ITEM_CREATE,
       LS_ITEM             TYPE          BAPI2017_GM_ITEM_CREATE,
       LT_RETURN           TYPE TABLE OF BAPIRET2,
       LS_RETURN           TYPE          BAPIRET2,
       LV_MATERIALDOCUMENT TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,
       LV_MATDOCUMENTYEAR  TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR.
  DATA:IT_CHAR TYPE TABLE OF ZSMMS_CHAR WITH HEADER LINE,
       P_TYPE  TYPE BAPI_MTYPE,
       P_MSG   TYPE BAPI_MSG.
  IF WA_ZTMM220-MBLNR IS INITIAL."351过账了则不再过账
    "migo351
    CLEAR:LS_HEADER,LS_CODE,LS_ITEM,LS_ITEM,LV_MATERIALDOCUMENT,LV_MATDOCUMENTYEAR,P_TYPE,P_MSG.
    REFRESH:LT_ITEM,LT_RETURN,IT_CHAR.

    LS_CODE = '04'.
    "准备抬头数据
    LS_HEADER-PSTNG_DATE    = SY-DATUM.
    LS_HEADER-DOC_DATE      = SY-DATUM.             "凭证中的凭证日期
    LS_HEADER-PR_UNAME      = SY-UNAME.              "用户名
    LS_HEADER-HEADER_TXT = '转储单过账'.
    CLEAR:LS_ITEM,LT_ITEM.
    "行项目数据
    LOOP AT IT_ZTMM221.
      LS_ITEM-MOVE_TYPE  = '351'.  "移动类型
      LS_ITEM-PLANT      = WA_ZTMM220-ZDCGC.  "原工厂
      LS_ITEM-MATERIAL   = IT_ZTMM221-MATNR.  "原物料号
      LS_ITEM-STGE_LOC   = IT_ZTMM221-ZDCKCD. "原库存地
      LS_ITEM-ENTRY_QNT  = IT_ZTMM221-ZDBSL_IN. "数量
      LS_ITEM-ENTRY_UOM  = IT_ZTMM221-MEINS_IN.
      LS_ITEM-BATCH      = IT_ZTMM221-CHARG.  "原批次
      LS_ITEM-SPEC_STOCK = IT_ZTMM221-SOBKZ. "特殊库存
      LS_ITEM-VAL_WBS_ELEM = IT_ZTMM221-ZXMH.
      LS_ITEM-PO_NUMBER = WA_ZTMM220-EBELN.
      LS_ITEM-PO_ITEM = |{ IT_ZTMM221-ZHH ALPHA = IN }|.
      APPEND LS_ITEM  TO LT_ITEM .
    ENDLOOP.
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
      EXPORTING
        GOODSMVT_HEADER  = LS_HEADER
        GOODSMVT_CODE    = LS_CODE
*       testrun          = testrun
      IMPORTING
        MATERIALDOCUMENT = MBLNR351 "lv_materialdocument
        MATDOCUMENTYEAR  = MJAHR "lv_matdocumentyear
      TABLES
        GOODSMVT_ITEM    = LT_ITEM
        RETURN           = LT_RETURN.

    IF ( LINE_EXISTS( LT_RETURN[ TYPE = 'A' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'E' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'X' ] ) ).
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

      DATA:MSG1 TYPE BAPI_MSG.
      CLEAR MSG1.
      LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE CA 'AEX'.
        CONCATENATE '错误：' LS_RETURN-MESSAGE INTO MSG1.
      ENDLOOP.
      APPEND LINES OF LT_RETURN TO RET.
      RET-TYPE = 'I'.
      RET-MESSAGE = '以上为migo351返回信息'.
      APPEND RET.
      FILLMSG 'E' MSG1 'X' 'X'.
    ELSE.
      SET UPDATE TASK LOCAL.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
      MSG1 = |供应商调拨回厂351过账成功,凭证号:{ MBLNR351 }|.
      RET-TYPE = 'S'.
      RET-MESSAGE = MSG1.
      APPEND RET.
      RET-TYPE = 'I'.
      RET-MESSAGE = '以上为migo351返回信息'.
      APPEND RET.
*    UPDATE ztmm221 FROM TABLE itab.
      UPDATE ZTMM220 SET ZWMSNO = IN_TAB-ZGUID MBLNR = MBLNR351 MJAHR = MJAHR  BUDAT = SY-DATUM SMBLN = '' SJAHR = ''
      WHERE ZDBDH = WA_ZTMM220-ZDBDH.
      COMMIT WORK.
      WAIT UP TO 2 SECONDS.
    ENDIF.
  ENDIF."351过账了则不再过账

  IF WA_ZTMM220-MBLNR101 IS INITIAL.
    "migo 101
    CLEAR:LS_HEADER,LS_CODE,LS_ITEM,LS_ITEM,LV_MATERIALDOCUMENT,LV_MATDOCUMENTYEAR,P_TYPE,P_MSG.
    REFRESH:LT_ITEM,LT_RETURN,IT_CHAR.
    LS_CODE = '01'.
    "准备抬头数据
    LS_HEADER-PSTNG_DATE    = SY-DATUM.
    LS_HEADER-DOC_DATE      = SY-DATUM.             "凭证中的凭证日期
    LS_HEADER-PR_UNAME      = SY-UNAME.              "用户名
    LS_HEADER-HEADER_TXT = '转储单过账'.
    CLEAR:LS_ITEM,LT_ITEM.
    "行项目数据
    LOOP AT IT_ZTMM221.
      LS_ITEM-MOVE_TYPE  = '101'.         "移动类型
      LS_ITEM-MVT_IND = 'B'.              "移动标识
      LS_ITEM-PLANT      = WA_ZTMM220-WERKS.  "原工厂
      LS_ITEM-MATERIAL   = IT_ZTMM221-MATNR.  "原物料号
      LS_ITEM-STGE_LOC   = IT_ZTMM221-LGORT. "原库存地
      LS_ITEM-ENTRY_QNT  = IT_ZTMM221-ZDBSL_IN. "数量
      LS_ITEM-ENTRY_UOM  = IT_ZTMM221-MEINS_IN.
      LS_ITEM-BATCH      = IT_ZTMM221-CHARG.  "原批次
      LS_ITEM-SPEC_STOCK = IT_ZTMM221-SOBKZ. "特殊库存
      LS_ITEM-VAL_WBS_ELEM = IT_ZTMM221-ZXMH.
      LS_ITEM-PO_NUMBER = WA_ZTMM220-EBELN.
      LS_ITEM-PO_ITEM = |{ IT_ZTMM221-ZHH ALPHA = IN }|.
      CONCATENATE IT_ZTMM221-MATNR IT_ZTMM221-ZDBDH IT_ZTMM221-ZHH INTO LS_ITEM-ITEM_TEXT SEPARATED BY '-'.
      APPEND LS_ITEM  TO LT_ITEM .

      FILLPCTX LS_ITEM-ITEM_TEXT 'Z01' IT_ZTMM221-CHARG.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z02' IT_ZTMM221-ZJH.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z03' IT_ZTMM221-ZZYH.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z05' IT_ZTMM221-ZCD.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z08' IT_ZTMM221-ZKW.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z09' IT_ZTMM221-ZXMMC.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z10' IT_ZTMM221-ZDBSL_IN.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z15' '是'."是否整卷
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z18' IT_ZTMM221-Z18.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z24' IT_ZTMM221-ZXMH.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z25' IT_ZTMM221-ZXSDDH.
      FILLPCTX LS_ITEM-ITEM_TEXT 'Z38' SY-DATUM.
      FILLPCTX LS_ITEM-ITEM_TEXT 'ZTM' IT_ZTMM221-ZCML.


    ENDLOOP.
    SET UPDATE TASK LOCAL.
    CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
      EXPORTING
        GOODSMVT_HEADER  = LS_HEADER
        GOODSMVT_CODE    = LS_CODE
*       testrun          = testrun
      IMPORTING
        MATERIALDOCUMENT = MBLNR101 "lv_materialdocument
        MATDOCUMENTYEAR  = MJAHR "lv_matdocumentyear
      TABLES
        GOODSMVT_ITEM    = LT_ITEM
        RETURN           = LT_RETURN.

    IF ( LINE_EXISTS( LT_RETURN[ TYPE = 'A' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'E' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'X' ] ) ).
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      CLEAR MSG1.
      LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE CA 'AEX'.
        CONCATENATE '错误：' LS_RETURN-MESSAGE INTO MSG1.
      ENDLOOP.
      APPEND LINES OF LT_RETURN TO RET.
      RET-TYPE = 'I'.
      RET-MESSAGE = '以上为migo101返回信息'.
      APPEND RET.
      FILLMSG 'E' MSG1 'X' 'X'.
    ELSE.
      SET UPDATE TASK LOCAL.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
      MSG1 = |供应商调拨回厂101过账成功,凭证号:{ MBLNR101 }|.

      RET-TYPE = 'S'.
      RET-MESSAGE =  MSG1.
      APPEND RET.

      RET-TYPE = 'I'.
      RET-MESSAGE = '以上为migo101返回信息'.
      APPEND RET.
      UPDATE ZTMM221 FROM TABLE IT_ZTMM221.
      UPDATE ZTMM220 SET ZWMSNO = IN_TAB-ZGUID MBLNR101 = MBLNR101 MJAHR101 = MJAHR BUDAT101 = SY-DATUM SMBLN101 = '' SJAHR101 = '' ZDJZT = '5WC'
      WHERE ZDBDH = WA_ZTMM220-ZDBDH.
      COMMIT WORK.
      "过账成功后推送物流对账平台

      DATA: INTAB TYPE TABLE OF ZTMM226 WITH HEADER LINE,
            ZDH   TYPE ZE_ZYFXH.
      REFRESH:IN_TAB.
      IF WA_ZTMM220-ZSFZC = '1'.
        CLEAR:INTAB.
        INTAB-ZDH     = ''.
        INTAB-ZYWDH   = WA_ZTMM220-ZDBDH.
        IF WA_ZTMM220-ZDBLX = 'GYSHC'.
          INTAB-ZFYLX   = 'CGYF'.
        ELSE.
          INTAB-ZFYLX   = 'DBYF'.
        ENDIF.
        INTAB-LIFNR   = WA_ZTMM220-LIFNR.
        INTAB-ZYSZRR   = WA_ZTMM220-ZYSZRR.
        INTAB-ZYWKH   = WA_ZTMM220-ZCKMC.
        INTAB-ZXMH     = ''.
        INTAB-LGORT   = WA_ZTMM220-LGORT.
*    in_tab-lgobe   = wa_220-lgobe.
        SELECT SINGLE LGOBE INTO INTAB-LGOBE FROM T001L WHERE WERKS = WA_ZTMM220-WERKS AND LGORT = WA_ZTMM220-LGORT.
        INTAB-ZJSFS   = WA_ZTMM220-ZJSFS.
        INTAB-ZZL     = WA_ZTMM220-ZZL.
        INTAB-ZWLDJ   = WA_ZTMM220-ZWLDJ.
        INTAB-ZYSJE   = WA_ZTMM220-ZYSJE.
        INTAB-ZSL     = '0.09'.
        INTAB-MWSKZ   = 'J4'.
        INTAB-ZBHSDJ  = ''.
        INTAB-ZSE     = ''.
        INTAB-ZBHSJE  = ''.
        INTAB-WERKS   = WA_ZTMM220-WERKS.
*    in_tab-bukrs   = ztmm220-bukrs.
        PERFORM GETBUKRS(ZPUBFORM) USING WA_ZTMM220-WERKS CHANGING INTAB-BUKRS.
        INTAB-ZYWY    = WA_ZTMM220-ZCJZ.
*    in_tab-zywbm   = ''.
        SELECT SINGLE BU_SORT1 INTO INTAB-ZYWBM FROM BUT000 WHERE NAME_ORG1 = INTAB-ZYWY.
        INTAB-ZXXBM   = ''.
        INTAB-ZBDJL   = ''.
        INTAB-ZYSD    = WA_ZTMM220-ZCKDZ.
        INTAB-ZSJ     = WA_ZTMM220-ZSJ.
        INTAB-ZSJDD   = WA_ZTMM220-ZSJDH.
        INTAB-ZCH     = WA_ZTMM220-ZCH.
        INTAB-ZZDRQ   = SY-DATUM.
        INTAB-ZHDR    = ''.
        INTAB-ZHDRQ   = ''.
        INTAB-ZDJLX   = 'YS'.
        INTAB-ZYFLX   = '10'.
        INTAB-ZZT     = '10'.
        INTAB-ZFPNO   = ''.
        INTAB-ZFPITEM = ''.
        INTAB-ZZZFP   = ''.
        INTAB-ZBZ     = ''.
        INTAB-ZWHR    = WA_ZTMM220-ZCJZ.
        INTAB-ZWHRQ   = WA_ZTMM220-ZZDRQ.
        INTAB-ZWHSJ   = ''.
        INTAB-ZGXR    = ''.
        INTAB-ZGXRQ   = ''.
        INTAB-ZGXSJ   = ''.
        APPEND INTAB.
        "另一张单据写入函数ZFM_YFMX001时变更内容：
        "ZYFLX写入40 仓储费。ZYSJE写入ZTMM220-ZCCF。ZWLDJ不传值
        IF WA_ZTMM220-ZSFCC = '1'.
          INTAB-ZYFLX = '40'.
          INTAB-ZYSJE = WA_ZTMM220-ZCCF.
          INTAB-ZWLDJ = ''.
          APPEND INTAB.
        ENDIF.
*若发料单已写入，则不更新
        SELECT SINGLE COUNT(*)
          FROM ZTMM226
          WHERE ZYWDH = WA_ZTMM220-ZDBDH.
        IF SY-SUBRC NE 0.
          CALL FUNCTION 'ZFM_YFMX001'
            IMPORTING
              RTYPE  = RTYPE
              RTMSG  = RTMSG
              ZDH    = ZDH
            TABLES
              IN_TAB = INTAB[].
          RET-TYPE = RTYPE.
          RET-MESSAGE = RTMSG.
          APPEND RET.
          APPEND LINES OF LT_RETURN TO RET.
          RET-TYPE = 'I'.
          RET-MESSAGE = '以上为物流对账平台返回信息'.
          APPEND RET.
        ENDIF.

      ELSE.
        RET-TYPE = 'I'.
        RET-MESSAGE = '不找车，没有推送物流对账平台'.
        APPEND RET.
        RET-TYPE = 'I'.
        RET-MESSAGE = '以上为物流对账平台返回信息'.
        APPEND RET.
      ENDIF.

    ENDIF.
  ENDIF.
ENDFORM.
