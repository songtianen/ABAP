FUNCTION ZFM_GP_PP_WMS_SCGDRK.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(CORRELATIONNO) TYPE  CHAR20 OPTIONAL
*"     VALUE(JOBNUMBER) TYPE  CHAR20 OPTIONAL
*"     VALUE(ORGANIZATION) TYPE  CHAR20 OPTIONAL
*"     VALUE(OUTORGANIZATION) TYPE  CHAR20 OPTIONAL
*"     VALUE(OUTWAREHOUSE) TYPE  CHAR20 OPTIONAL
*"     VALUE(OUTBOUNDDOCCODE) TYPE  CHAR20 OPTIONAL
*"     VALUE(SUPPLIERCODE) TYPE  CHAR20 OPTIONAL
*"     VALUE(ZTYPE) TYPE  CHAR20 OPTIONAL
*"     VALUE(WAREHOUSE) TYPE  CHAR20 OPTIONAL
*"     VALUE(WMSNO) TYPE  CHAR30 OPTIONAL
*"  EXPORTING
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      INTAB STRUCTURE  ZSPP_227 OPTIONAL
*"----------------------------------------------------------------------

  ZFMDATASAVE1 'ZFM_GP_PP_WMS_SCGDRK'.
  ZFMDATASAVE2 'B'.
  COMMIT WORK.

  TYPES : BEGIN OF ZSBAOH,
            ZBAOH  TYPE CHAR70,
            KWMENG TYPE VBAP-KWMENG,
            MATNR  TYPE MATNR,
            UNIT   TYPE VRKME,
            BATCH  TYPE CHARG_D,
            WERKS  TYPE WERKS_D,
          END OF ZSBAOH.
  DATA: GT_BHXX TYPE TABLE OF ZSBAOH WITH HEADER LINE.
  TYPES: BEGIN OF ZSBHCD,
           PLNUM   TYPE PLNUM,
           PLNUMHH TYPE ZEPP_ZJHDHH,
         END OF ZSBHCD.
  DATA: GT_BHCD TYPE TABLE OF ZSBHCD WITH HEADER LINE.
  DATA: GT_ZTPP316 TYPE TABLE OF ZTPP316 WITH HEADER LINE.
  DATA: STR     TYPE CHAR10,
        PLNUM   TYPE CHAR10,
        PLNUMH  TYPE CHAR6,
        PLNUMHH TYPE POSNR.
  DATA: AUFNR TYPE AUFNR.
  DATA: LGORT TYPE LGORT_D.
  DATA: WERKS TYPE WERKS_D.
  DATA: LS_HEADER           TYPE BAPI2017_GM_HEAD_01,
        LS_CODE             TYPE BAPI2017_GM_CODE,
        LT_ITEM             TYPE STANDARD TABLE OF BAPI2017_GM_ITEM_CREATE,
        LS_ITEM             TYPE BAPI2017_GM_ITEM_CREATE,
        LT_RETURN           TYPE STANDARD TABLE OF BAPIRET2,
        LS_RETURN           TYPE BAPIRET2,
        LV_MATERIALDOCUMENT TYPE BAPI2017_GM_HEAD_RET-MAT_DOC,
        LV_MATDOCUMENTYEAR  TYPE BAPI2017_GM_HEAD_RET-DOC_YEAR.


  IF CORRELATIONNO IS INITIAL.
    RTYPE = 'E'.
    RTMSG = '订单号未输入！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  IF WMSNO IS INITIAL.
    RTYPE = 'E'.
    RTMSG = '存储地点未输入！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.
  "订单编号 去6位日期
  AUFNR = CORRELATIONNO+0(2)  && CORRELATIONNO+8(10) .

  "库存地点和工厂映射
  SELECT
    *
    INTO TABLE @DATA(LT_ZSAP2WMS)
    FROM  ZSAP2WMS.

  IF SY-SUBRC <> 0.
    RTYPE = 'E'.
    RTMSG = '库存地点和工厂映射查询失败！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.
  "根据工单号找到对应工厂
  SELECT SINGLE WERKS
    INTO WERKS
    FROM ZTPP_206
    WHERE AUFNR = AUFNR.

  READ TABLE LT_ZSAP2WMS INTO DATA(LW_ZSAP2WMS) WITH KEY ZLGORT = WMSNO+0(3).
  IF SY-SUBRC EQ 0.
    "werks = lw_zsap2wms-werks.   "配置表里会有多个工厂对应值
    LGORT = LW_ZSAP2WMS-LGORT.
  ELSE.
    RTYPE = 'E'.
    RTMSG =  '工厂' && ORGANIZATION && '库存地' && WMSNO && '没有映射关系'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SELECT
    COUNT( * )
    FROM AFKO
    WHERE AUFNR = AUFNR.
  IF SY-SUBRC NE 0.
    RTYPE = 'E'.
    RTMSG =  'SAP查无工单:' && AUFNR.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  LOOP AT INTAB.
    GT_BHXX-ZBAOH  = INTAB-PKGNO.
    GT_BHXX-KWMENG = INTAB-JSQTY.
    GT_BHXX-MATNR  = INTAB-PRODUCTCODE.
    GT_BHXX-WERKS  = WERKS.
    GT_BHXX-UNIT   = INTAB-UNIT.
    COLLECT GT_BHXX.
    CLEAR:STR,PLNUM,PLNUMH,PLNUMHH.
    STR = INTAB-ID.
    PERFORM ADDZERO(ZPUBFORM) CHANGING STR.
    PLNUM   = '000' && STR(7)  .
    PLNUMH  = '00'  && STR+7(3) && '0' .
    PLNUMHH = PLNUMH.
    GT_BHCD-PLNUM   = PLNUM.
    GT_BHCD-PLNUMHH = PLNUMHH.
    COLLECT GT_BHCD.
  ENDLOOP.
  SORT GT_BHXX BY ZBAOH.

  SELECT
    MARC~MATNR,
    MARC~WERKS,
    MARC~SBDKZ,
    MARC~XCHPF
    INTO TABLE @DATA(IT_MARC)
    FROM MARC
    FOR ALL ENTRIES IN @GT_BHXX
    WHERE MARC~MATNR = @GT_BHXX-MATNR
      AND MARC~WERKS = @WERKS
       .
  SORT IT_MARC BY MATNR WERKS.

  "抬头数据
  LS_HEADER-PSTNG_DATE = SY-DATUM.
  LS_HEADER-DOC_DATE = SY-DATUM.
  LS_HEADER-PR_UNAME = SY-UNAME.
  LS_HEADER-HEADER_TXT = WMSNO.
  "分配事务代码--过账码
  LS_CODE-GM_CODE = '01'.

  "ITEM
  REFRESH:LT_ITEM,LT_RETURN.
  LOOP AT GT_BHXX.
    CLEAR LS_ITEM.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        INPUT  = GT_BHXX-MATNR
      IMPORTING
        OUTPUT = LS_ITEM-MATERIAL.
    LS_ITEM-PLANT     = WERKS.             "工厂
    LS_ITEM-STGE_LOC  = LGORT.             "库存地点
    LS_ITEM-MOVE_TYPE = '101'.             "移动类型（库存管理）
    LS_ITEM-MVT_IND   = 'F'.              "移动标识  ’B‘为采购收货  ’F ' 生产收货
    LS_ITEM-ORDERID   = AUFNR.             "工单
    READ TABLE IT_MARC INTO DATA(WA_MARC) WITH KEY MATNR = LS_ITEM-MATERIAL WERKS = WERKS BINARY SEARCH.

    IF SY-SUBRC = 0 .
      IF WA_MARC-SBDKZ = '1'.
        SELECT SINGLE
            PRPS~POSID
          INTO @DATA(POSID)
          FROM ZTPP_206
          INNER JOIN VBAK ON VBAK~VBELN = ZTPP_206~VBELN
          INNER JOIN PRPS ON PRPS~PSPNR = VBAK~PS_PSP_PNR
          WHERE ZTPP_206~AUFNR = @AUFNR
          .
        LS_ITEM-VAL_WBS_ELEM = POSID.
*        LS_ITEM-SPEC_STOCK = 'Q'.
      ENDIF.
      IF WA_MARC-XCHPF = 'X'.
        CALL FUNCTION 'ZFM_GP_PP_MIGO_BATCHNO'
          EXPORTING
            AUFNR = AUFNR
          CHANGING
            CHARG = LS_ITEM-BATCH.
      ENDIF.
    ENDIF.
    LS_ITEM-ENTRY_QNT = GT_BHXX-KWMENG.            "发料数量
    LS_ITEM-ENTRY_UOM = GT_BHXX-UNIT.             "计量单位

    GT_BHXX-BATCH = LS_ITEM-BATCH.
    MODIFY GT_BHXX TRANSPORTING BATCH.

    APPEND LS_ITEM TO LT_ITEM.

  ENDLOOP.

  "BAPI
  CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
    EXPORTING
      GOODSMVT_HEADER  = LS_HEADER
      GOODSMVT_CODE    = LS_CODE
    IMPORTING
      MATERIALDOCUMENT = LV_MATERIALDOCUMENT
      MATDOCUMENTYEAR  = LV_MATDOCUMENTYEAR
    TABLES
      GOODSMVT_ITEM    = LT_ITEM
      RETURN           = LT_RETURN.

  IF ( LINE_EXISTS( LT_RETURN[ TYPE = 'A' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'E' ] ) ) OR ( LINE_EXISTS( LT_RETURN[ TYPE = 'X' ] ) ).
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

    DATA: LT_MSG_TAB TYPE ESP1_MESSAGE_TAB_TYPE,
          WA_MSG_TAB LIKE LINE OF LT_MSG_TAB.
    DATA:MSG1 TYPE BAPI_MSG.
    CLEAR MSG1.
    LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE CA 'AEX'.
      CONCATENATE '错误：' LS_RETURN-MESSAGE INTO MSG1.
    ENDLOOP.
    RTYPE = 'E'.
    RTMSG =  MSG1.
    ZFMDATASAVE2 'R'.
    RETURN.
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        WAIT = 'X'.
    SELECT
      ZTPP_206~PLNUM,
      ZTPP_206~PLNUMHH,
      ZTPP_206~ZCD,
      ZTPP_205A~ZBCKD
      INTO TABLE @DATA(IT_206)
      FROM ZTPP_206
      INNER JOIN ZTPP_205A ON ZTPP_205A~ZPCDH = ZTPP_206~ZPCDH AND ZTPP_205A~ZPCDHH = ZTPP_206~ZPCDHH
      FOR ALL ENTRIES IN @GT_BHCD
      WHERE ZTPP_206~PLNUM   = @GT_BHCD-PLNUM
        AND ZTPP_206~PLNUMHH = @GT_BHCD-PLNUMHH
        .
    SORT IT_206 BY PLNUM PLNUMHH.


    LOOP AT INTAB.
      CLEAR GT_BHXX.
      GT_ZTPP316-ZXS   = INTAB-FACTOR.
      GT_ZTPP316-ZSL   = INTAB-JSQTY.
      GT_ZTPP316-ZZK   = INTAB-BLOCKS.
      GT_ZTPP316-AUFNR = AUFNR.
      READ TABLE GT_BHXX WITH KEY ZBAOH = INTAB-PKGNO BINARY SEARCH.
      GT_ZTPP316-WERKS = WERKS.
      GT_ZTPP316-MATNR = GT_BHXX-MATNR.
      GT_ZTPP316-CHARG = GT_BHXX-BATCH.
      GT_ZTPP316-ZBH   = GT_BHXX-ZBAOH.
      "宽 * 长  宽（MM）三位小数  长 （M）三位小数
      CLEAR:STR,PLNUM,PLNUMH,PLNUMHH.
      STR = INTAB-ID.
      PERFORM ADDZERO(ZPUBFORM) CHANGING STR.
      PLNUM   = '000' && STR(7)  .
      PLNUMH  = '00'  && STR+7(3) && '0' .
      PLNUMHH = PLNUMH.
      GT_ZTPP316-PLNUM      = PLNUM    .
      GT_ZTPP316-PLNUMHH    = PLNUMHH  .
      READ TABLE IT_206 INTO DATA(WA_206) WITH KEY PLNUM = PLNUM PLNUMHH = PLNUMHH BINARY SEARCH.
      IF SY-SUBRC = 0.
        GT_ZTPP316-ZCD        = WA_206-ZCD / 1000 . "MM 转化为 M
        GT_ZTPP316-ZKD        = WA_206-ZBCKD .
        GT_ZTPP316-ZCC        = GT_ZTPP316-ZCD * GT_ZTPP316-ZKD  .
      ENDIF.
*      GT_ZTPP316-ZTXBH      = GT_ZTPP316-ZTXBH    .
*      GT_ZTPP316-ZZHANKUAN  = GT_ZTPP316-ZZHANKUAN.
*      GT_ZTPP316-ZZHESHU    = GT_ZTPP316-ZZHESHU  .
      APPEND GT_ZTPP316.

    ENDLOOP.

    MODIFY ZTPP316 FROM TABLE GT_ZTPP316.

    LOOP AT GT_BHXX.
      REFRESH IT_CHAR.
      CLEAR IT_CHAR.
      IT_CHAR-NO = 'Z20'.
      IT_CHAR-VALUE = GT_BHXX-ZBAOH.
      APPEND IT_CHAR.
      CLEAR IT_CHAR.
      IT_CHAR-NO = 'Z38'.
      IT_CHAR-VALUE = SY-DATUM.
      APPEND IT_CHAR.
      CALL FUNCTION 'ZMMS_UPDATE_OBJCL'
        EXPORTING
          MATNR  = GT_BHXX-MATNR
          CHARG  = GT_BHXX-BATCH
          WERKS  = GT_BHXX-WERKS
        IMPORTING
          RTYPE  = RTYPE
          RTMSG  = RTMSG
        TABLES
          CHAR   = IT_CHAR
        EXCEPTIONS
          OTHERS = 1.
    ENDLOOP.

    DATA(CC) = |101生产成功,凭证号:{ LV_MATERIALDOCUMENT }|.
    RTYPE = 'S'.
    RTMSG =  CC.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

ENDFUNCTION.
