FUNCTION ZFM_GP_SD_WMS_THD.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(VBELN) TYPE  VBELN OPTIONAL
*"  EXPORTING
*"     VALUE(RTYPE) TYPE  BAPI_MTYPE
*"     VALUE(RTMSG) TYPE  BAPI_MSG
*"  TABLES
*"      INTAB1 STRUCTURE  ZSSD258
*"      INTAB2 STRUCTURE  ZSSD_146L
*"----------------------------------------------------------------------
  ZFMDATASAVE1 'ZFM_GP_SD_WMS_THD'.
  ZFMDATASAVE2 'B'.

  TYPES: BEGIN OF ZSLGORT ,
           WERKS TYPE T001W-WERKS,
           LGORT TYPE T001L-LGORT,
         END OF ZSLGORT.

  DATA:GT_LGORT  TYPE TABLE OF ZSLGORT   WITH HEADER LINE,
       IN_TAB1   TYPE TABLE OF ZSSD258   WITH HEADER LINE,
       IN_TAB2   TYPE TABLE OF ZSSD_146L WITH HEADER LINE.
  IF VBELN IS INITIAL.
    RTYPE = 'N'.
    RTMSG = '退货单号未输入！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SELECT
     VBAK~VBELN,
     KNA1~KUNNR,
     VBAK~AUART,
     VBAK~ZSJXM,
     VBAK~ZCHEHAO,
     VBAK~ERNAM,
     VBAK~ERDAT
   INTO TABLE @DATA(IT_VBAK)
   FROM VBAK
   INNER JOIN KNA1  ON VBAK~KUNNR = KNA1~KUNNR
   WHERE VBAK~VBELN = @VBELN
    AND VBAK~VBTYP = 'H' "退货
     .
  IF SY-SUBRC <> 0 .
    RTYPE = 'E'.
    RTMSG = '未查询到该退货通知单号！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.

  SELECT
     VBAP~VBELN,
     VBAP~POSNR,
     VBAP~KWMENG,
     VBAP~MATNR,
     PRPS~PSPNR,
     PRPS~POST1,
     PRPS~POSID,
     VBAP~VRKME,
     VBAP~LGORT,
     VBAP~WERKS
*    ,
*     LIPS~ZBAOH
   INTO TABLE @DATA(IT_VBAP)
   FROM VBAP
   LEFT JOIN LIPS ON LIPS~VGBEL = VBAP~VBELN AND LIPS~VGPOS = VBAP~POSNR
   LEFT  JOIN PRPS  ON VBAP~PS_PSP_PNR = PRPS~PSPNR
   WHERE VBAP~VBELN = @VBELN
*     AND VBAP~WERKS IN ('3060','3062')"镇江工厂
     .
  IF SY-SUBRC <> 0 .
    RTYPE = 'E'.
    RTMSG = '未查询到该退货通知单明细！'.
    ZFMDATASAVE2 'R'.
    RETURN.
  ENDIF.
  SORT IT_VBAP BY VBELN POSNR.

  CLEAR:INTAB1[],INTAB2[].
  LOOP AT IT_VBAP INTO DATA(WA_VBAP).
    CLEAR : INTAB2,GT_LGORT.
    MOVE-CORRESPONDING WA_VBAP TO INTAB2.
    APPEND INTAB2.
    GT_LGORT-WERKS = WA_VBAP-WERKS.
    GT_LGORT-LGORT = WA_VBAP-LGORT.
    COLLECT GT_LGORT.
  ENDLOOP.

  READ TABLE IT_VBAK INTO DATA(WA_VBAK) INDEX 1.
  CLEAR INTAB1.
  MOVE-CORRESPONDING WA_VBAK TO INTAB1.
  LOOP AT GT_LGORT .
    INTAB1-ZXH = SY-TABIX.
    INTAB1-WERKS = GT_LGORT-WERKS.
    INTAB1-LGORT = GT_LGORT-LGORT.
    APPEND INTAB1.
  ENDLOOP.
  LOOP AT INTAB1 .
    CLEAR : IN_TAB1 , IN_TAB1[] , IN_TAB2 ,IN_TAB2[].
    MOVE-CORRESPONDING INTAB1 TO IN_TAB1.
    APPEND IN_TAB1.
    LOOP AT INTAB2 WHERE LGORT = INTAB1-LGORT  AND WERKS = INTAB1-WERKS.
      CLEAR :  IN_TAB2 .
      MOVE-CORRESPONDING INTAB2 TO IN_TAB2.
      APPEND IN_TAB2.
    ENDLOOP.

    CALL FUNCTION 'ZFM_GP_SD_WMS_THD_POST'
      IMPORTING
*       P_INPUT =
*       P_OUTPUT =
*       P_STATUS =
        RTYPE  = RTYPE
        RTMSG  = RTMSG
      TABLES
        INTAB1 = IN_TAB1
        INTAB2 = IN_TAB2.
    IF RTYPE <> 'S'.
      RTMSG = '推送WMS第' && INTAB1-ZXH && '次失败！' && RTMSG.
      RETURN.
    ENDIF.
  ENDLOOP.


  ZFMDATASAVE2 'R'.
ENDFUNCTION.
