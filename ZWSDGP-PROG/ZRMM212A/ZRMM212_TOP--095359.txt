*&---------------------------------------------------------------------*
*& Include ZRMM212_TOP
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Include ZRMM206_TOP
*&---------------------------------------------------------------------*
TYPE-POOLS:SLIS,ICON.
DATA:FIELDCAT  TYPE SLIS_T_FIELDCAT_ALV,
     FIELDCAT1 TYPE SLIS_T_FIELDCAT_ALV,
     WA_FIELD  TYPE SLIS_FIELDCAT_ALV.
TYPES:BEGIN OF TY_OUT1,
        SEL,
        TOPPAGE,
        ICON    TYPE ICON-ID,
        MSG     TYPE BAPI_MSG,
        CHBOX1  TYPE CHAR1,
      END OF TY_OUT1,
      BEGIN OF TY_OUT2,
        MAKTX  TYPE MAKT-MAKTX,
        NAMEW  TYPE NAME1,
        NAMEK  TYPE NAME1,
        ZBGT   TYPE NAME1,
        LGOBE  TYPE T001L-LGOBE,
        ZZL1   TYPE MARA-ZZL1,
        ZWLCMS TYPE STRING,
        ZKCLXT  TYPE DDTEXT,
      END OF TY_OUT2,
      BEGIN OF TY_LIST,
        ID    TYPE CHAR10,
        VALUE TYPE CHAR50,
      END OF TY_LIST.
DATA:BEGIN OF WA_HEAD.
       INCLUDE STRUCTURE ZTMM205.
       INCLUDE TYPE TY_OUT2.
DATA:  PSPNR TYPE PRPS-PSPNR,
       KUNNR TYPE VBAK-KUNNR,
       POSID TYPE PRPS-POSID,
       POST1 TYPE PRPS-POST1,
     END OF WA_HEAD,
     BEGIN OF IT_ITEM OCCURS 0.
       INCLUDE STRUCTURE ZTMM206.
       INCLUDE TYPE TY_OUT2.
DATA: CHBOX TYPE CHAR1,
     END OF IT_ITEM,
     BEGIN OF ITAB1 OCCURS 0.
       INCLUDE STRUCTURE ZSSD225.
DATA:END OF ITAB1,
BEGIN OF ITAB2 OCCURS 0.
  INCLUDE STRUCTURE ZVMM205.
  INCLUDE TYPE TY_OUT1.
  INCLUDE TYPE TY_OUT2.
DATA: CXL    TYPE MENGE_D,
  CHARG  TYPE CHARG_D,
  PCSYKC TYPE MENGE_D,
END OF ITAB2,
BEGIN OF IT_ZKCLX1 OCCURS 0,
  ZKCLX TYPE ZTMM205-ZKCLX,
END OF IT_ZKCLX1,
BEGIN OF IT_TEXT OCCURS 0,
  TDID TYPE STXL-TDID.
  INCLUDE STRUCTURE ZSMM202.
DATA:END OF IT_TEXT,
BEGIN OF IT_MSPRS OCCURS 0,
  MATNR TYPE MSPR-MATNR,
  WERKS TYPE MSPR-WERKS,
  LGORT TYPE MSPR-LGORT,
  CHARG TYPE MSPR-CHARG,
  PSPNR TYPE MSPR-PSPNR,
  SOBKZ TYPE MSPR-SOBKZ,
  MENGE TYPE MENGE_D,
END OF IT_MSPRS,
WA_ITEM       LIKE LINE OF IT_ITEM,
  IT_ZTMM206A   TYPE TABLE OF ZTMM206A WITH HEADER LINE,
  IT_MBLNR      TYPE TABLE OF HUM_MBLNR WITH HEADER LINE,
  ITAB2A        LIKE TABLE OF ITAB2 WITH HEADER LINE,
  IT_ZSSD225    TYPE TABLE OF ZSSD225 WITH HEADER LINE,
  TEXTTABLE     TYPE TABLE OF ZSMM202 WITH HEADER LINE,
  IT_ZSMM206    TYPE TABLE OF ZSMM206 WITH HEADER LINE,
  IT_ZSPP006    TYPE TABLE OF ZSPP_006 WITH HEADER LINE,
  T_TEXT        TYPE TABLE OF ZSMM202 WITH HEADER LINE,
  IT_MATNR      TYPE TABLE OF CCVX_MATNR WITH HEADER LINE,
  IT_KUNNR      TYPE TABLE OF KNA1_KEY WITH HEADER LINE,
  IT_ZDHDH      TYPE TABLE OF ZSMM201 WITH HEADER LINE,
  IT_MAKT       TYPE TABLE OF MAKT WITH HEADER LINE,
  IT_ZKCLX      TYPE TABLE OF DD07V WITH HEADER LINE,
  IT_T001L      TYPE TABLE OF T001L WITH HEADER LINE,
  IT_T001W      TYPE TABLE OF T001W WITH HEADER LINE,
  IT_ZTMM205    TYPE TABLE OF ZTMM205 WITH HEADER LINE,
  IT_ZTMM206    TYPE TABLE OF ZTMM206 WITH HEADER LINE,
  IT_PSPNR      TYPE TABLE OF RCJ_PSPNR WITH HEADER LINE,
  IT_PRPS       TYPE TABLE OF PRPS WITH HEADER LINE,
  IT_RSPARAMS1  TYPE TABLE OF RSPARAMS WITH HEADER LINE,
  IT_RSPARAMS1N TYPE TABLE OF RSPARAMS WITH HEADER LINE,
  FIELD_INFO    TYPE TABLE OF RSEL_INFO WITH HEADER LINE,
  IT_RSPARAMS2  TYPE TABLE OF RSPARAMS WITH HEADER LINE,
  RETURN        TYPE TABLE OF BAPIRET2 WITH HEADER LINE.
DATA:WA_ITAB1 LIKE LINE OF ITAB1.
DATA:FLAG1 TYPE CHAR1,
     FLAG2 TYPE CHAR1,
     STR   TYPE STRING,
     NUM   TYPE I,
     TCODE TYPE SY-TCODE,
     P1_X  TYPE CHAR1,
     P2_X  TYPE CHAR1,
     P3_X  TYPE CHAR1,
     P4_X  TYPE CHAR1,
     P5_X  TYPE CHAR1.
CONSTANTS: GREEN   TYPE ICON-ID VALUE '@08@',
           RED     TYPE ICON-ID VALUE '@0A@',
           TCODE1  TYPE SY-TCODE VALUE 'ZMM218A',
           TCODE2  TYPE SY-TCODE VALUE 'ZMM218B',
           CALLREP TYPE SY-CPROG VALUE 'ZSDD202',
           EXEC    TYPE CHAR4 VALUE 'ONLI'.
DATA:EXCLUDE     TYPE TABLE OF SY-UCOMM,
     OK_CODE     TYPE SY-UCOMM,
     OK_CODE1    TYPE SY-UCOMM,
     ZDHHH       TYPE ZTMM202-ZDHHH,
     ANSWER      TYPE CHAR1,
     SELSTR      TYPE STRING,
     SELSTR1     TYPE STRING,
     MSG         TYPE BAPI_MSG,
     RTYPE       TYPE BAPI_MTYPE,
     RTMSG       TYPE BAPI_MSG,
     SGTXT       TYPE SGTXT,
     MBLNR       TYPE MBLNR,
     MJAHR       TYPE MJAHR,
     L_ZDHDHLOCK TYPE ZTMM201-ZDHDH,
     SAPNO       TYPE ZTFILE_MANAGE_01-SAPNO,
     L_MSG       TYPE BAPI_MSG.
FIELD-SYMBOLS:<FS>      TYPE ANY,
              <FS1>     TYPE ANY,
              <WA>      TYPE ANY,
              <IT_MODI> TYPE LVC_T_MODI,
              <ITAB>    TYPE STANDARD TABLE,
              <SELTAB>  TYPE STANDARD TABLE.
RANGES:S_KTOKK FOR LFA1-KTOKK.

*OO-ALV
DATA:GO_EDITOR           TYPE REF TO CL_GUI_TEXTEDIT,
     GO_EDITOR_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
DATA:CONTAIN       TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
     ALVGRID       TYPE REF TO CL_GUI_ALV_GRID,
     GT_FCAT       TYPE LVC_T_FCAT,
     IT_FIELDCAT   TYPE LVC_T_FCAT,
     WA_FIELDCAT   TYPE LVC_S_FCAT,
     IS_STABLE     TYPE LVC_S_STBL,
     IT_F4         TYPE  LVC_T_F4,
     WA_F4         TYPE  LVC_S_F4,
     WA_LAYOUT     TYPE LVC_S_LAYO,
     WA_MODI       TYPE LVC_S_MODI,
     IT_EF1        TYPE UI_FUNCTIONS,
     VARIANT       TYPE DISVARIANT,
     CONTAIN1      TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
     ALVGRID1      TYPE REF TO CL_GUI_ALV_GRID,
     IT_FIELDCAT1  TYPE LVC_T_FCAT,
     IS_STABLE1    TYPE LVC_S_STBL,
     WA_RETURN_TAB TYPE DDSHRETVAL,
     RETURN_TAB    TYPE TABLE OF DDSHRETVAL WITH HEADER LINE,
     FIELD_TAB     TYPE TABLE OF DFIES WITH HEADER LINE.

DEFINE LOCK.
  CLEAR: L_ZDHDHLOCK,L_MSG.
  L_ZDHDHLOCK = &2.
IF &1 NE 'X'."¼ÓËø
CALL FUNCTION 'ENQUEUE_EZDHDH'
 EXPORTING
   ZDHDH                = L_ZDHDHLOCK
   _SCOPE               = '1'
 EXCEPTIONS
   FOREIGN_LOCK         = 1
   SYSTEM_FAILURE       = 2
   OTHERS               = 3.
IF SY-SUBRC <> 0.
MESSAGE E012 WITH SY-MSGV1 SY-TCODE L_ZDHDHLOCK.
ENDIF.
ELSE."½âËø
CALL FUNCTION 'DEQUEUE_EZDHDH'
 EXPORTING
*   MODE_ZSMM201       = 'E'
   ZDHDH              = L_ZDHDHLOCK
   _SCOPE             = '1'.

ENDIF.
END-OF-DEFINITION.
DEFINE MSG.
  IF &1+0(1) = 'S'.
    MESSAGE &1 TYPE 'I'.
  ELSE.
    MESSAGE S000(OO) WITH &1 DISPLAY LIKE 'E'.
  ENDIF.
END-OF-DEFINITION.
