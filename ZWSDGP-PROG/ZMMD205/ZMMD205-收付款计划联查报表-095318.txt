*&---------------------------------------------------------------------*
*& Report ZMMD205
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zmmd205 MESSAGE-ID zgp_msg.
TYPE-POOLS: sscr,slis.
TABLES: sscrfields,cped_perioddtin_migr,t024,ztmm204.
DATA: fldct     TYPE slis_t_fieldcat_alv,
      fldct_sfk TYPE slis_t_fieldcat_alv,
      slayt     TYPE slis_layout_alv,
      varnt     LIKE disvariant,
      repid     LIKE sy-repid,
      tabix     LIKE sy-tabix.
DATA:rdate TYPE RANGE OF char6 WITH HEADER LINE.
DATA:zyhtcdyc TYPE ztmm204-zddzje,
     zyhtdhyc TYPE ztmm204-zddzje.
DATA:BEGIN OF itab OCCURS 0,
       telfx     TYPE t024-telfx,
       ekgrp     TYPE t024-ekgrp,
       eknam     TYPE t024-eknam,
       buper     TYPE char07,
       zyhtcdyc  TYPE ztmm204-zddzje, "有合同承兑预测
       zyhtdhyc  TYPE ztmm204-zddzje, "有合同电汇预测
       zyhtyczje TYPE ztmm204-zddzje, "有合同预测总金额
       select,
     END OF itab.
DATA:BEGIN OF lt_204 OCCURS 0,
       ebeln      TYPE     ztmm204-ebeln,
       ebelp      TYPE     ztmm204-ebelp,
       zddzje     TYPE     ztmm204-zddzje,
       zmxzje     TYPE     ztmm204-zmxzje,
       ddbs       TYPE     ztmm204-ddbs,
       zdate      TYPE     ztmm204-zdate,
       zdate_char TYPE     char6,
       zfkfs      TYPE     ztmm204-zfkfs,
       zfkje      TYPE     ztmm204-zfkje,
       ekgrp      TYPE        ekko-ekgrp,
       eknam      TYPE        t024-eknam,
       telfx      TYPE        t024-telfx,
     END OF lt_204.
DATA:BEGIN OF it_sfkjh OCCURS 0.
       INCLUDE TYPE ztmm233.
DATA:select,
     END OF it_sfkjh.
DATA:BEGIN OF it_upload OCCURS 0,
       butxt  TYPE butxt,
       name   TYPE fagl_segmt-name, "考核主体
       zwldx  TYPE ztmm233-zwldx, "供应商
       zywy   TYPE ztmm233-zywy, "业务员
       telfx  TYPE t024-telfx, "部门
       zycfke TYPE ztmm233-zycfke, "承兑额
       zydfke TYPE ztmm233-zydfke, "电汇额
     END OF it_upload.
DATA:it233 TYPE TABLE OF ztmm233 WITH HEADER LINE.
DATA:number TYPE char3.


SELECTION-SCREEN BEGIN OF BLOCK blk1 WITH FRAME TITLE t01.
  SELECT-OPTIONS:s_buper FOR cped_perioddtin_migr-sourcerout MODIF ID m1,
                 s_telfx FOR t024-telfx MODIF ID m1,
                 s_ekgrp FOR t024-ekgrp MODIF ID m1.
  PARAMETERS:p_buper TYPE char07 MODIF ID m2,
             p_sel   AS CHECKBOX MODIF ID m2.
SELECTION-SCREEN END OF BLOCK blk1.

SELECTION-SCREEN BEGIN OF BLOCK blk2 WITH FRAME TITLE t02.
  PARAMETERS:p_cx     RADIOBUTTON GROUP grd2 USER-COMMAND singleclick DEFAULT 'X' MODIF ID m4,
             p_bjfkjh RADIOBUTTON GROUP grd2 MODIF ID m4,
             p_bjskjh RADIOBUTTON GROUP grd2 MODIF ID m3.
SELECTION-SCREEN END OF BLOCK blk2.
SELECTION-SCREEN FUNCTION KEY :1.

INITIALIZATION.
  t01 = '筛选条件'.
  %_s_buper_%_app_%-text = '月份'.
  %_s_telfx_%_app_%-text = '部门'.
  %_s_ekgrp_%_app_%-text = '采购组'.
  %_p_buper_%_app_%-text = '月份'.
  %_p_sel_%_app_%-text = '复制到剪切板（勿复制标题）'.

  t02 = '功能选择'.
  %_p_cx_%_app_%-text = '付款计划参考查询'.
  %_p_bjfkjh_%_app_%-text = '付款计划编辑'.
  %_p_bjskjh_%_app_%-text = '收款计划编辑'.

  sscrfields-functxt_01 = '@14@导出模板'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR s_buper-low.
  PERFORM frm_month_f4.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR s_buper-high.
  PERFORM frm_month_f4.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_buper.
  PERFORM frm_month_f4.

AT SELECTION-SCREEN.
  CASE sscrfields-ucomm.
    WHEN 'FC01'.
      CHECK p_bjfkjh = 'X' OR p_bjskjh = 'X' .
      PERFORM dcmb."导出模板
  ENDCASE.

AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN.
    CASE screen-group1.
      WHEN 'M1'.
        CASE 'X'.
          WHEN p_cx.
            screen-active = 1.
          WHEN p_bjfkjh OR p_bjskjh.
            screen-active = 0.
        ENDCASE.
      WHEN 'M2'.
        CASE 'X'.
          WHEN p_cx.
            screen-active = 0.
          WHEN p_bjfkjh OR p_bjskjh..
            screen-active = 1.
        ENDCASE.
    ENDCASE.
    CASE sy-tcode.
      WHEN 'ZMM217A'.
        IF screen-group1 = 'M3'.
          screen-active = 0.
        ENDIF.
      WHEN 'ZMM217B'.
        IF screen-group1 = 'M4' OR screen-group1 = 'M1'.
          screen-active = 0.
          p_cx      = ''.
          p_bjfkjh  = ''.
          p_bjskjh  = 'X'.
        ENDIF.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

START-OF-SELECTION.

  PERFORM savelog(zreplog) USING sy-repid '' IF FOUND.
  IF p_cx = 'X'.
    PERFORM getdata.
    PERFORM alvshow.
  ELSEIF p_bjfkjh = 'X' OR p_bjskjh = 'X'.
    PERFORM checkinput.
    PERFORM getdata_sfk.
    PERFORM alvshow_sfk.
  ENDIF.
  PERFORM updatelog(zreplog) IF FOUND.

FORM getdata.
  REFRESH: rdate,itab.
  LOOP AT s_buper.
    CLEAR rdate.
    rdate-sign = 'I'.
    rdate-option = 'EQ'.
    rdate-low = s_buper-low+0(4) && s_buper-low+5(2).
    rdate-high = s_buper-high+0(4) && s_buper-high+5(2).
    APPEND rdate.
  ENDLOOP.
  SELECT
    ztmm204~ebeln,
    ztmm204~ebelp,
    ztmm204~zddzje,
    ztmm204~zmxzje,
    ztmm204~ddbs,
    ztmm204~zdate,
    ztmm204~zfkfs,
    ztmm204~zfkje,
    ekko~ekgrp,
    t024~eknam,
    t024~telfx

    FROM ztmm204
    JOIN ekko ON ztmm204~ebeln = ekko~ebeln
    JOIN t024 ON ekko~ekgrp = t024~ekgrp
    WHERE substring( ztmm204~zdate,1,6  ) IN @rdate
    AND t024~telfx IN @s_telfx
    AND ekko~ekgrp IN @s_ekgrp
  INTO CORRESPONDING FIELDS OF TABLE @lt_204.


  LOOP AT lt_204 INTO DATA(lw_204).
    IF s_telfx[] IS INITIAL.
      lw_204-telfx = ''.
    ENDIF.
    IF s_ekgrp[] IS INITIAL.
      lw_204-ekgrp = ''.
      lw_204-eknam = ''.
    ENDIF.
    lw_204-zdate_char = lw_204-zdate.
    MODIFY lt_204 FROM lw_204.
  ENDLOOP.

  LOOP AT lt_204 INTO lw_204 GROUP BY ( telfx = lw_204-telfx ekgrp = lw_204-ekgrp eknam = lw_204-eknam zdate_char = lw_204-zdate_char
                                          size  = GROUP SIZE  "分组组数"
                                          index = GROUP INDEX ) "分组的组序号"
  ASCENDING    ASSIGNING FIELD-SYMBOL(<group>).
    CLEAR:zyhtcdyc,zyhtdhyc.
    "loop循环组，将组里的数据读出来"
    LOOP AT GROUP <group> ASSIGNING FIELD-SYMBOL(<ls_member>).
      IF <ls_member>-zfkfs = 'A'.
        zyhtcdyc = zyhtcdyc + <ls_member>-zfkje.
      ELSEIF <ls_member>-zfkfs = 'B'.
        zyhtdhyc = zyhtdhyc + <ls_member>-zfkje.
      ENDIF.
    ENDLOOP.
    CLEAR:itab.
    itab-telfx      = <group>-telfx      .
    itab-ekgrp      = <group>-ekgrp      .
    itab-eknam      = <group>-eknam      .
    itab-buper      = <group>-zdate_char+0(4) && '.' && <group>-zdate_char+4(2) .
    itab-zyhtcdyc   = zyhtcdyc   .
    itab-zyhtdhyc   = zyhtdhyc   .
    itab-zyhtyczje  = zyhtcdyc + zyhtdhyc  .
    APPEND itab.
  ENDLOOP.

ENDFORM.

FORM alvshow.
  slayt-colwidth_optimize = 'X'. "  colwidth_optimize
  slayt-zebra             = 'X'.
  slayt-box_fieldname     = 'SELECT'.
  repid = sy-repid.
  varnt-report = sy-repid.
  varnt-handle = 1.

  PERFORM catlg_set TABLES fldct
                    USING:
  'TELFX    '     'T024   '      'TELFX '     '部门',
  'EKGRP    '     'T024   '      'EKGRP '     '采购员编号',
  'EKNAM    '     'T024   '      'EKNAM '     '采购员',
  'BUPER    '     ''             ' '          '付款月份',
  'ZYHTCDYC '     'ZTMM204'      'ZDDZJE'     '有合同承兑预测',
  'ZYHTDHYC '     'ZTMM204'      'ZDDZJE'     '有合同电汇预测',
  'ZYHTYCZJE'     'ZTMM204'      'ZDDZJE'     '有合同预测总金额'.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = repid
      it_fieldcat              = fldct[]
      i_save                   = 'A'
      is_variant               = varnt
      is_layout                = slayt
      i_callback_user_command  = 'USER_COMMAND'
      i_callback_pf_status_set = 'SET_STATUS'
*     IT_EVENTS                = GT_EVENTS
    TABLES
      t_outtab                 = itab[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
ENDFORM.

FORM catlg_set TABLES fldcattab
               USING p_field p_reftab p_reffld p_text.
  DATA: ls_fldct TYPE slis_fieldcat_alv.

  ls_fldct-fieldname     =  p_field.
  ls_fldct-seltext_l     =  p_text.
  ls_fldct-ddictxt       =  'L'.
  ls_fldct-ref_fieldname =  p_reffld.
  ls_fldct-ref_tabname   =  p_reftab.



  IF p_reffld = 'MENGE'.
    ls_fldct-qfieldname = 'MEINS'.
    ls_fldct-no_zero = 'X'.
  ENDIF.

  CASE ls_fldct-fieldname.
    WHEN 'MENGE'.
      ls_fldct-qfieldname = 'MEINS'.
      ls_fldct-no_zero = 'X'.
    WHEN 'DMBTR' .
      ls_fldct-cfieldname = 'WAERB'.
    WHEN 'WRBTR' OR 'DMBTR1' OR 'DMBTR2' .
      ls_fldct-cfieldname = 'WAERS'.
      ls_fldct-no_zero = 'X'.
    WHEN 'KUNNR' OR 'EBELN' OR 'BANFN'.
      ls_fldct-edit_mask = '==ALPHA'.
    WHEN 'MATNR' .
      ls_fldct-edit_mask = '==MATN1'.
      ls_fldct-intlen = 18.
    WHEN 'BSTME' OR 'MEINS' .
      ls_fldct-edit_mask = '==CUNIT'.
    WHEN 'ZSPBS'.
      ls_fldct-checkbox = 'X'.
*    WHEN 'pstyp'.
*      ls_fldct-no_zero = 'X'.
    WHEN 'ICON'.
      ls_fldct-icon = abap_true.
    WHEN OTHERS.
  ENDCASE.

  CASE ls_fldct-fieldname.
    WHEN 'EBELN' OR 'RTYPE' OR 'RTMSG' OR
         'MBLPO' OR 'FRGKE'.
      ls_fldct-emphasize = 'C110'.
  ENDCASE.

  APPEND ls_fldct TO fldcattab .
  CLEAR ls_fldct .
ENDFORM.

FORM set_status USING rt_extab TYPE slis_t_extab.
  CLEAR rt_extab.
  REFRESH rt_extab.
  SET PF-STATUS 'STANDARD' EXCLUDING rt_extab .
  SET TITLEBAR 'TIT1000' WITH '付款计划维护'.
ENDFORM.

FORM user_command USING r_ucomm LIKE sy-ucomm
                    rs_selfield TYPE slis_selfield.
  DATA: lr_grid TYPE REF TO cl_gui_alv_grid.
  DATA: lv_rtmsg TYPE bapi_msg.
  DATA wa LIKE LINE OF itab.
  DATA:filename TYPE string.
  DATA pdfxstring TYPE xstring.
  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR'
    IMPORTING
      e_grid = lr_grid.

  CALL METHOD lr_grid->check_changed_data.

  CASE r_ucomm.
    WHEN '&IC1'. "双击
      CHECK rs_selfield-tabindex <> 0 . "小计行总计行什么的忽略
      READ TABLE itab INTO wa INDEX rs_selfield-tabindex.
      CASE rs_selfield-fieldname.
*        WHEN 'ZPCDH'.
*          PERFORM show_item.
        WHEN OTHERS.
      ENDCASE.
    WHEN 'EXCEL'.
      PERFORM itabtoexcel(zpubform) TABLES itab USING fldct.
    WHEN 'SAVE'.
      PERFORM save2ztmm233.
  ENDCASE.
  rs_selfield-row_stable = 'X'.
  rs_selfield-col_stable = 'X'.
  rs_selfield-refresh    = 'X'.

ENDFORM.


FORM frm_month_f4 .
  DATA: BEGIN OF mf_dynpfields OCCURS 1.
          INCLUDE STRUCTURE dynpread.
  DATA: END   OF mf_dynpfields.
  DATA: mf_returncode LIKE sy-subrc,
        mf_monat      LIKE isellist-month,
        mf_hlp_repid  LIKE sy-repid.

  GET CURSOR FIELD mf_dynpfields-fieldname.
  APPEND mf_dynpfields.
  mf_hlp_repid = sy-repid.

  DO 2 TIMES.
    CALL FUNCTION 'DYNP_VALUES_READ'
      EXPORTING
        dyname               = mf_hlp_repid
        dynumb               = sy-dynnr
      TABLES
        dynpfields           = mf_dynpfields
      EXCEPTIONS
        invalid_abapworkarea = 01
        invalid_dynprofield  = 02
        invalid_dynproname   = 03
        invalid_dynpronummer = 04
        invalid_request      = 05
        no_fielddescription  = 06
        undefind_error       = 07.

    IF sy-subrc = 3.
      mf_hlp_repid = 'SAPLALDB'.
    ELSE.
      READ TABLE mf_dynpfields INDEX 1.
      TRANSLATE mf_dynpfields-fieldvalue USING '_ '.
      EXIT.
    ENDIF.
  ENDDO.

  IF sy-subrc = 0.
    CALL FUNCTION 'CONVERSION_EXIT_PERI_INPUT'
      EXPORTING
        input         = mf_dynpfields-fieldvalue
      IMPORTING
        output        = mf_monat
      EXCEPTIONS
        error_message = 1.

    IF mf_monat IS INITIAL.
      mf_monat = sy-datlo(6).
    ENDIF.

    CALL FUNCTION 'POPUP_TO_SELECT_MONTH'
      EXPORTING
        actual_month               = mf_monat
      IMPORTING
        selected_month             = mf_monat
        return_code                = mf_returncode
      EXCEPTIONS
        factory_calendar_not_found = 01
        holiday_calendar_not_found = 02
        month_not_found            = 03.

    IF sy-subrc = 0 AND mf_returncode = 0.
      CALL FUNCTION 'CONVERSION_EXIT_PERI_OUTPUT'
        EXPORTING
          input  = mf_monat
        IMPORTING
          output = mf_dynpfields-fieldvalue.
      COLLECT mf_dynpfields.
      CALL FUNCTION 'DYNP_VALUES_UPDATE'
        EXPORTING
          dyname               = mf_hlp_repid
          dynumb               = sy-dynnr
        TABLES
          dynpfields           = mf_dynpfields
        EXCEPTIONS
          invalid_abapworkarea = 01
          invalid_dynprofield  = 02
          invalid_dynproname   = 03
          invalid_dynpronummer = 04
          invalid_request      = 05
          no_fielddescription  = 06
          undefind_error       = 07.
    ENDIF.
  ENDIF.
ENDFORM.

FORM dcmb."导出模板
  DATA:lv_rc TYPE i.
  DATA:BEGIN OF wa_copy,
         text TYPE char2048,
       END OF wa_copy.
  DATA : lt_copy LIKE TABLE OF wa_copy.
  DATA(cc) = cl_abap_char_utilities=>horizontal_tab.
  CLEAR: wa_copy,lt_copy.

  CONCATENATE '公司' cc '考核主体' cc '供应商' cc '业务人员'
  cc '部门' cc '预测付款承兑额' cc '预测付款电汇额' INTO wa_copy-text.

  APPEND wa_copy TO lt_copy.
  CALL METHOD cl_gui_frontend_services=>clipboard_export
    IMPORTING
      data                 = lt_copy
    CHANGING
      rc                   = lv_rc
    EXCEPTIONS
      cntl_error           = 1
      error_no_gui         = 2
      not_supported_by_gui = 3
      OTHERS               = 4.
  IF sy-subrc = 0.
    MESSAGE s000(oo) WITH '已经把表头复制到剪贴板,可以打开一个Excel文件然后粘贴'.
  ELSE.
    MESSAGE e000(oo) WITH '复制到剪贴板失败'.
  ENDIF.
ENDFORM.

FORM checkinput .
  IF p_sel NE 'X'.
    MESSAGE s000(oo) WITH '请复制到剪切板后勾选' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

  PERFORM cliptoitab(zpubform) TABLES it_upload.

  IF it_upload[] IS INITIAL.
    MESSAGE s000(oo) WITH '上传无数据' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
ENDFORM.

FORM getdata_sfk.
  DEFINE datacheck.
    IF &1 IS INITIAL.
      MESSAGE s004 WITH &2 && '不能为空'.
      RETURN.
    ENDIF.
  end-OF-DEFINITION.
  REFRESH:it_sfkjh.
  SELECT bukrs,butxt INTO TABLE @DATA(lt_t001) FROM t001.
  SELECT name INTO TABLE @DATA(lt_fagl_segmt) FROM fagl_segmt.
  SELECT eknam,telfx INTO TABLE @DATA(lt_t024) FROM t024.
  LOOP AT it_upload.
    CLEAR it_sfkjh.
    datacheck it_upload-butxt '公司'.
    datacheck it_upload-name '考核主体'.
    datacheck it_upload-zwldx '供应商'.
    datacheck it_upload-zywy '业务员'.
    datacheck it_upload-telfx '部门'.
    datacheck it_upload-zycfke '预测款承兑额'.
    datacheck it_upload-zydfke '预测款电汇额'.
    READ TABLE lt_t001 INTO DATA(lw_t001) WITH KEY butxt = it_upload-butxt.
    IF sy-subrc NE 0.
      MESSAGE s004 WITH '公司不存在'.
      RETURN.
    ELSE.
      it_sfkjh-bukrs    = lw_t001-bukrs.
      it_sfkjh-butxt    = lw_t001-butxt.
    ENDIF.
    READ TABLE lt_fagl_segmt INTO DATA(lw_fagl_segmt) WITH KEY name = it_upload-name.
    IF sy-subrc NE 0.
      MESSAGE s004 WITH '考核主体不存在'.
      RETURN.
    ELSE.
      it_sfkjh-zkhzt    = lw_fagl_segmt-name.
    ENDIF.
    READ TABLE lt_t024 INTO DATA(lw_t024) WITH KEY eknam = it_upload-zywy.
    IF sy-subrc NE 0.
      MESSAGE s004 WITH '业务员不存在'.
      RETURN.
    ELSE.
      it_sfkjh-zywy     = lw_t024-eknam.
    ENDIF.
    READ TABLE lt_t024 INTO lw_t024 WITH KEY telfx = it_upload-telfx.
    IF sy-subrc NE 0.
      MESSAGE s004 WITH '部门不存在'.
      RETURN.
    ELSE.
      it_sfkjh-zbm    = lw_t024-telfx.
    ENDIF.

    it_sfkjh-zjhbno   = ''.
    IF p_bjfkjh = 'X'.
      it_sfkjh-zlx      = 'FKJH'.
    ELSEIF p_bjskjh = 'X'.
      it_sfkjh-zlx      = 'SKJH'.
    ENDIF.
    it_sfkjh-zyf      = p_buper.
    it_sfkjh-zwldx    = it_upload-zwldx.
    it_sfkjh-zycfke   = it_upload-zycfke.
    it_sfkjh-zydfke   = it_upload-zydfke.
    APPEND it_sfkjh.
  ENDLOOP.


ENDFORM.

FORM alvshow_sfk.
  slayt-colwidth_optimize = 'X'. "  colwidth_optimize
  slayt-zebra             = 'X'.
  slayt-box_fieldname     = 'SELECT'.
  repid = sy-repid.
  varnt-report = sy-repid.
  varnt-handle = 2.

  PERFORM catlg_set TABLES fldct_sfk
                    USING:
'ZJHBNO'  'ZTMM233'  'ZJHBNO'    '计划表单号    ',
'ZLX   '  'ZTMM233'  'ZLX   '    '收付款计划类型',
'ZYF   '  'ZTMM233'  'ZYF   '    '付款月份      ',
'BUKRS '  'ZTMM233'  'BUKRS '    '公司代码      ',
'BUTXT '  'ZTMM233'  'BUTXT '    '公司          ',
'ZKHZT '  'ZTMM233'  'ZKHZT '    '考核主体      ',
'ZYWY  '  'ZTMM233'  'ZYWY  '    '业务员        ',
'ZWLDX '  'ZTMM233'  'ZWLDX '    '往来对象      ',
'ZYCFKE'  'ZTMM233'  'ZYCFKE'    '预测承兑额    ',
'ZYDFKE'  'ZTMM233'  'ZYDFKE'    '预测电汇额    ',
'ZBM   '  'ZTMM233'  'ZBM   '    '部门          '.


  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = repid
      it_fieldcat              = fldct_sfk[]
      i_save                   = 'A'
      is_variant               = varnt
      is_layout                = slayt
      i_callback_user_command  = 'USER_COMMAND'
      i_callback_pf_status_set = 'SET_STATUS'
*     IT_EVENTS                = GT_EVENTS
    TABLES
      t_outtab                 = it_sfkjh[]
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
ENDFORM.

FORM save2ztmm233.
  CHECK it_sfkjh[] IS NOT INITIAL.
  REFRESH it233.
  LOOP AT it_sfkjh WHERE zjhbno IS INITIAL.
    CLEAR: it233,number.
    PERFORM get_snro_number  CHANGING number.
    CHECK number IS NOT INITIAL.
    it_sfkjh-zjhbno = sy-datum+2(4) && number.
    MOVE-CORRESPONDING it_sfkjh TO it233.
    APPEND it233.
    MODIFY  it_sfkjh.
  ENDLOOP.
  IF sy-subrc NE 0.
    MESSAGE s004 WITH '请不要重复保存'.
    RETURN.
  ENDIF.
  IF it233[] IS NOT INITIAL.
    INSERT ztmm233 FROM TABLE it233[].
    IF sy-subrc EQ 0.
      COMMIT WORK.
      MESSAGE s004 WITH '保存成功'.
    ENDIF.
  ENDIF.

ENDFORM.

FORM get_snro_number  CHANGING p_numbr TYPE char3.
  CLEAR p_numbr.
  SELECT COUNT( * ) FROM ztmm233 WHERE zdate = sy-datum.
  IF sy-subrc NE 0.
    CALL FUNCTION 'NUMBER_RANGE_INTERVAL_INIT'
      EXPORTING
        object            = 'ZGPMM06'
        commit            = 'X'
      EXCEPTIONS
        no_interval_found = 1
        object_not_found  = 2.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.
  ENDIF.

  CALL FUNCTION 'NUMBER_RANGE_ENQUEUE'
    EXPORTING
      object           = 'ZGPMM06'
    EXCEPTIONS
      foreign_lock     = 1
      object_not_found = 2
      system_failure   = 3
      OTHERS           = 4.
  DO 5 TIMES.
    IF sy-subrc = 0.
      CALL FUNCTION 'NUMBER_GET_NEXT'
        EXPORTING
          nr_range_nr = '01'
          object      = 'ZGPMM06'
        IMPORTING
          number      = p_numbr
        EXCEPTIONS
          OTHERS      = 4.

      CALL FUNCTION 'NUMBER_RANGE_DEQUEUE'
        EXPORTING
          object = 'ZGPMM06'
        EXCEPTIONS
          OTHERS = 4.
      EXIT.
    ELSE.
      WAIT UP TO 1 SECONDS.
*      RAISE num_range_error.
    ENDIF.
  ENDDO.

ENDFORM.
