*&---------------------------------------------------------------------*
*& Report ZRFI201A
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZRFI201.
TYPE-POOLS:SLIS.
TABLES :SSCRFIELDS,*ZBSED_P,ZBSED_P,*ZTFI0002,UF05A,ZSFI201,*ZSFI201.
DATA:FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
     WA_FIELD TYPE SLIS_FIELDCAT_ALV.
DATA:BEGIN OF IT_UP OCCURS 0.
       INCLUDE TYPE ZSFI201.
DATA:END OF IT_UP,
BEGIN OF ITAB OCCURS 0.
  INCLUDE TYPE ZBSED_P.
DATA: MSG     TYPE BAPI_MSG,
  BELNR   TYPE BELNR_D,
  GJAHR   TYPE GJAHR,
  BUDAT   TYPE BUDAT,
  JTBELNR TYPE BELNR_D,
  JTGJAHR TYPE GJAHR,
  CXBELNR TYPE BELNR_D,
  CXGJAHR TYPE GJAHR,
  ICON    TYPE ICON-ID,
  CEPCT   TYPE CEPCT-KTEXT,
  SEGMENT TYPE CEPC-SEGMENT,
  NAME    TYPE FAGL_SEGMT-NAME,
  MONAT   TYPE ZTFI0002-MONAT,
  JTTIM   TYPE ZTFI0002-JTTIM,
  BUTXT   TYPE T001-BUTXT,
  DMBTR TYPE DMBTR,
  DEL,
  SEL,
  TOPPAGE,
END OF ITAB,
IT_ZSFI201   TYPE TABLE OF ZSFI201 WITH HEADER LINE,
  IT_PRCTR     TYPE TABLE OF HRI6002 WITH HEADER LINE,
  IT_ZTFI0002A TYPE TABLE OF ZTFI0002 WITH HEADER LINE,
  IT_ZTFI0002  TYPE TABLE OF ZTFI0002 WITH HEADER LINE,
  ITAB1        LIKE TABLE OF ITAB WITH HEADER LINE.
DATA:DAYS  TYPE I,
     DATUM TYPE SY-DATUM,
     TABIX TYPE SY-TABIX.


CONSTANTS:RED   TYPE ICON-ID VALUE '@0A@',
          GREEN TYPE ICON-ID VALUE '@08@'.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE T1.
  PARAMETERS: P1 RADIOBUTTON GROUP GRD1 USER-COMMAND SINGLECLICK DEFAULT 'X',
              P2 RADIOBUTTON GROUP GRD1,
              P3 RADIOBUTTON GROUP GRD1.
SELECTION-SCREEN END OF BLOCK B1.
SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE T2.
  PARAMETERS:P_BUKRS LIKE ZBSED_P-BUKRS MEMORY ID BUK MODIF ID MM,
             P_BUDAT LIKE SY-DATUM DEFAULT SY-DATUM MODIF ID M3,
             P_BLDAT LIKE SY-DATUM DEFAULT SY-DATUM MODIF ID M6,
             P_STGRD LIKE UF05A-STGRD MEMORY ID FSG MODIF ID M7,
             P_SEL   AS CHECKBOX MODIF ID M1.
  SELECT-OPTIONS:S_ZPIHAO FOR ZBSED_P-ZPIHAO MODIF ID M2.
  PARAMETERS:P_ALL AS CHECKBOX MODIF ID M5,
             P_GZ  RADIOBUTTON GROUP GRD2 USER-COMMAND CLICK1
              MODIF ID M4 DEFAULT 'X',
             P_CX  RADIOBUTTON GROUP GRD2 MODIF ID M4.
SELECTION-SCREEN END OF BLOCK B2.

SELECTION-SCREEN FUNCTION KEY :1.

LOAD-OF-PROGRAM.
  CALL FUNCTION 'FIMA_DATE_CREATE'
    EXPORTING
      I_DATE                  = SY-DATUM
      I_SET_LAST_DAY_OF_MONTH = 'X'
    IMPORTING
      E_DATE                  = P_BUDAT.
  P_BLDAT = P_BUDAT.

AT SELECTION-SCREEN OUTPUT.
  T1 = '功能选项'.
  T2 = '筛选条件'.
  SSCRFIELDS-FUNCTXT_01 = '@14@导出模板'.
  %_P1_%_APP_%-TEXT = '创建'.
  %_P2_%_APP_%-TEXT = '计提'.
  %_P3_%_APP_%-TEXT = '查看'.
  %_P_GZ_%_APP_%-TEXT = '过账'.
  %_P_CX_%_APP_%-TEXT = '冲销'.
  %_P_BUKRS_%_APP_%-TEXT = '公司代码'.
  %_P_BUDAT_%_APP_%-TEXT = '过账日期'.
  %_P_BLDAT_%_APP_%-TEXT = '凭证日期'.
  %_P_STGRD_%_APP_%-TEXT = '冲销原因'.
  %_P_ALL_%_APP_%-TEXT = '也查看计提明细'.
  %_S_ZPIHAO_%_APP_%-TEXT = '批号'.
  %_P_SEL_%_APP_%-TEXT = '复制到剪切板（勿复制标题）'.
  "
  LOOP AT SCREEN.
    CASE 'X'.
      WHEN P1.
        CASE SCREEN-GROUP1.
          WHEN 'M1'.
            SCREEN-ACTIVE = 1.
          WHEN 'M2' OR 'M3' OR 'M4' OR 'M5'
            OR 'M6' OR 'M7'.
            SCREEN-ACTIVE = 0.
        ENDCASE.
      WHEN P2.
        CASE SCREEN-GROUP1.
          WHEN 'M1' OR 'M5'.
            SCREEN-ACTIVE = 0.
          WHEN 'M2' OR 'M3' OR 'M4'.
            SCREEN-ACTIVE = 1.
        ENDCASE.
        CASE 'X'.
          WHEN P_GZ.
            CASE SCREEN-GROUP1.
              WHEN 'M7'.
                SCREEN-ACTIVE = 0.
              WHEN 'M3' OR 'M6'.
                SCREEN-ACTIVE = 1.
            ENDCASE.
          WHEN P_CX.
            CASE SCREEN-GROUP1.
              WHEN 'M6' OR 'M3'.
                SCREEN-ACTIVE = 0.
              WHEN 'M7'.
                SCREEN-ACTIVE = 1.
            ENDCASE.
        ENDCASE.
      WHEN P3.
        CASE SCREEN-GROUP1.
          WHEN 'M1' OR 'M3' OR 'M4'
            OR 'M6' OR 'M7'.
            SCREEN-ACTIVE = 0.
          WHEN 'M2'.
            SCREEN-ACTIVE = 1.
        ENDCASE.
    ENDCASE.
    CASE SCREEN-GROUP1.
      WHEN 'MM' OR 'M3' OR 'M7'.
        SCREEN-REQUIRED = 2.
    ENDCASE.
    MODIFY SCREEN.
  ENDLOOP.

AT SELECTION-SCREEN.
  CASE SSCRFIELDS-UCOMM.
    WHEN 'FC01'.
      REFRESH FIELDCAT.
      PERFORM FILLFIELD.
      PERFORM ITABSTRUCTOCLIP(ZPUBFORM) USING FIELDCAT '' ''.
  ENDCASE.

START-OF-SELECTION.
  PERFORM SAVELOG(ZREPLOG) USING SY-REPID '' IF FOUND.
  PERFORM GETDATA.
  PERFORM UPDATELOG(ZREPLOG) IF FOUND.
  PERFORM ALVSHOW.


FORM GETDATA.
  REFRESH:IT_PRCTR,ITAB1.
  IF P_BUKRS IS INITIAL.
    MESSAGE S000(OO) WITH '公司代码必填' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
  CASE 'X'.
    WHEN P1.
      IF P_SEL NE 'X'.
        MESSAGE S000(OO) WITH '请复制到剪切板后勾选' DISPLAY LIKE 'E'.
        STOP.
      ENDIF.
      PERFORM CLIPTOITAB(ZPUBFORM) TABLES IT_UP.
      LOOP AT IT_UP.
        CLEAR:ITAB,DAYS,IT_PRCTR.
        PERFORM ADDZERO(ZPUBFORM) CHANGING IT_UP-ZPAYBA.
        PERFORM ADDZERO(ZPUBFORM) CHANGING IT_UP-PRCTR.
        MOVE-CORRESPONDING IT_UP TO ITAB.
*        SELECT SINGLE COUNT(*)
*          FROM ZTFI0002
*          WHERE ZPIHAO = ITAB-ZPIHAO
*          AND   CX NE 'X'.
*        IF SY-SUBRC EQ 0.
*          ITAB-MSG = '批号已有过账记录不允许再次上传'.
*          ITAB-ICON = RED.
*        ENDIF.
        CLEAR IT_PRCTR.
        IT_PRCTR-PRCTR = ITAB-PRCTR.
        COLLECT IT_PRCTR.
        APPEND ITAB.
      ENDLOOP.
    WHEN P2.
      CASE 'X'.
        WHEN P_GZ.
          CALL FUNCTION 'FIMA_DATE_CREATE'
            EXPORTING
              I_DATE                  = SY-DATUM
              I_SET_LAST_DAY_OF_MONTH = 'X'
            IMPORTING
              E_DATE                  = DATUM.

          IF P_BUDAT IS INITIAL
            OR P_BLDAT IS INITIAL.
            MESSAGE S000(OO) WITH '日期必填' DISPLAY LIKE 'E'.
            STOP.
          ENDIF.
          SELECT *
            INTO TABLE ITAB
            FROM ZBSED_P
            WHERE BUKRS = P_BUKRS
            AND   ZPIHAO IN S_ZPIHAO.
          IF SY-SUBRC NE 0.
            MESSAGE S000(OO) WITH '无数据' DISPLAY LIKE 'E'.
            EXIT.
          ENDIF.
          SORT ITAB BY ZPIHAO.
          SELECT *
            INTO TABLE IT_ZTFI0002
            FROM ZTFI0002
            FOR ALL ENTRIES IN ITAB
            WHERE ZPIHAO = ITAB-ZPIHAO
            AND   BUKRS = P_BUKRS.
          SORT IT_ZTFI0002 BY ZPIHAO CX.
*对当月有过计提记录的不在显示
          LOOP AT ITAB.
            IF ITAB-ZCKRQ+0(6) LE P_BUDAT+0(6)
              AND ITAB-ZCKDQR+0(6) GT P_BUDAT+0(6).
            ELSE.
              ITAB-DEL = 'X'.
              MODIFY ITAB.
              CONTINUE.
            ENDIF.
            READ TABLE IT_ZTFI0002 WITH KEY ZPIHAO = ITAB-ZPIHAO BINARY SEARCH.
            IF SY-SUBRC EQ 0.
              TABIX = SY-TABIX.
              LOOP AT IT_ZTFI0002 FROM TABIX.
                IF IT_ZTFI0002-ZPIHAO NE ITAB-ZPIHAO.
                  EXIT.
                ENDIF.
                IF IT_ZTFI0002-CX NE 'X'.
                  IF IT_ZTFI0002-BUDAT+0(6) EQ SY-DATUM+0(6).
                    ITAB-DEL = 'X'.
                    EXIT.
                  ENDIF.
                ENDIF.
              ENDLOOP.
            ENDIF.
            CLEAR IT_PRCTR.
            IT_PRCTR-PRCTR = ITAB-PRCTR.
            COLLECT IT_PRCTR.
            MODIFY ITAB.
          ENDLOOP.
          DELETE ITAB WHERE DEL = 'X'.
          IF ITAB[] IS INITIAL.
            MESSAGE S000(OO) WITH '无数据' DISPLAY LIKE 'E'.
            EXIT.
          ENDIF.
        WHEN P_CX.
          IF P_STGRD IS INITIAL.
            MESSAGE S000(OO) WITH '冲销原因必填' DISPLAY LIKE 'E'.
            STOP.
          ENDIF.
          SELECT ZBSED_P~*,
                 ZTFI0002~BELNR,
                 ZTFI0002~GJAHR,
                 ZTFI0002~JTTIM,
                 ZTFI0002~BUDAT,
                 ZTFI0002~MONAT
            INTO CORRESPONDING FIELDS OF TABLE @ITAB
            FROM ZBSED_P INNER JOIN ZTFI0002 ON ZBSED_P~BUKRS = ZTFI0002~BUKRS
                                            AND ZBSED_P~ZPIHAO = ZTFI0002~ZPIHAO
            WHERE ZBSED_P~BUKRS = @P_BUKRS
            AND   ZBSED_P~ZPIHAO IN @S_ZPIHAO
            AND   ZTFI0002~CX NE 'X'.
*          IF P_STGRD = 'Z1'.
*            DELETE ITAB WHERE BUDAT NE P_BUDAT.
*          ENDIF.
          LOOP AT ITAB.
            CLEAR IT_PRCTR.
            IT_PRCTR-PRCTR = ITAB-PRCTR.
            COLLECT IT_PRCTR.
          ENDLOOP.
      ENDCASE.
      PERFORM FILLDATA.
    WHEN P3.
      SELECT *
        INTO TABLE ITAB
        FROM ZBSED_P
        WHERE BUKRS = P_BUKRS
        AND   ZPIHAO IN S_ZPIHAO.
      IF SY-SUBRC EQ 0.
        SORT ITAB BY ZPIHAO.
        LOOP AT ITAB.
          CLEAR IT_PRCTR.
          IT_PRCTR-PRCTR = ITAB-PRCTR.
          COLLECT IT_PRCTR.
        ENDLOOP.
        SELECT *
          INTO TABLE IT_ZTFI0002
          FROM ZTFI0002
          FOR ALL ENTRIES IN ITAB
          WHERE ZPIHAO = ITAB-ZPIHAO
          AND   BUKRS = P_BUKRS.
        SORT IT_ZTFI0002 BY ZPIHAO.
        IF P_ALL = 'X'.
          LOOP AT IT_ZTFI0002.
            CLEAR:ITAB,ITAB1.
            READ TABLE ITAB WITH KEY ZPIHAO = IT_ZTFI0002-ZPIHAO BINARY SEARCH.
            MOVE-CORRESPONDING ITAB TO ITAB1.
            CLEAR:ITAB1-ZBZJLXZE,ITAB1-ZBYJT.
            ITAB1-BUDAT = IT_ZTFI0002-BUDAT.
            ITAB1-BELNR = IT_ZTFI0002-BELNR.
            ITAB1-GJAHR = IT_ZTFI0002-GJAHR.
            ITAB1-JTTIM = IT_ZTFI0002-JTTIM.
            ITAB1-MONAT = IT_ZTFI0002-MONAT.
            APPEND ITAB1.
          ENDLOOP.
          APPEND LINES OF ITAB1 TO ITAB.
        ENDIF.
        PERFORM FILLDATA.
      ENDIF.
  ENDCASE.
  DELETE IT_PRCTR WHERE PRCTR IS INITIAL.
  IF IT_PRCTR[] IS NOT INITIAL.
    SORT IT_PRCTR BY PRCTR.
    SELECT *
      INTO TABLE @DATA(IT_CEPC)
      FROM CEPC
      FOR ALL ENTRIES IN @IT_PRCTR
      WHERE PRCTR = @IT_PRCTR-PRCTR
      AND   KOKRS = 'WISD'.
    SELECT *
      INTO TABLE @DATA(IT_CEPCT)
      FROM CEPCT
      FOR ALL ENTRIES IN @IT_PRCTR
      WHERE PRCTR = @IT_PRCTR-PRCTR
      AND   SPRAS = @SY-LANGU
      AND   KOKRS = 'WISD'.
    SORT IT_CEPC BY PRCTR.
    SORT IT_CEPCT BY PRCTR.
  ENDIF.
  LOOP AT ITAB.
    ITAB-BUKRS = P_BUKRS.
    SELECT SINGLE NAME1
      INTO ITAB-ZPAYBANAME
      FROM KNA1
      WHERE KUNNR = ITAB-ZPAYBA.
    SELECT SINGLE BUTXT
      INTO ITAB-BUTXT
      FROM T001
      WHERE BUKRS = ITAB-BUKRS.
    READ TABLE IT_CEPC INTO DATA(WA_CEPC) WITH KEY PRCTR = ITAB-PRCTR BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      ITAB-SEGMENT = WA_CEPC-SEGMENT.
      SELECT SINGLE NAME
        INTO ITAB-NAME
        FROM FAGL_SEGMT
        WHERE SEGMENT = ITAB-SEGMENT
        AND   LANGU = SY-LANGU.
    ENDIF.
    READ TABLE IT_CEPCT INTO DATA(WA_CEPCT) WITH KEY PRCTR = ITAB-PRCTR BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      ITAB-CEPCT = WA_CEPCT-KTEXT.
    ENDIF.
    CALL FUNCTION 'HR_99S_INTERVAL_BETWEEN_DATES'
      EXPORTING
        BEGDA = SY-DATUM
        ENDDA = ITAB-ZCKDQR
      IMPORTING
        DAYS  = DAYS.
    IF DAYS GT 0.
      ITAB-ZDQQX = DAYS.
    ENDIF.
    MODIFY ITAB.
  ENDLOOP.
  SORT ITAB BY ZPIHAO BELNR.
  IF ITAB[] IS INITIAL.
    MESSAGE S000(OO) WITH '无数据' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
ENDFORM.

FORM ALVSHOW.
  DATA:EDIT TYPE CHAR1.
  REFRESH FIELDCAT.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'ICON' '状态' '' '' '' '',
'MSG' '消息' '' '' '' '',
'ZPIHAO' '批号' '' '' '' '',
'BUKRS' '公司代码' '' '' '' '',
'BUTXT' '公司名称' '' '' '' '',
'ZDQQX' '到期期限' '' '' '' '',
'ZPAYBANAME' '付款行名称' '' '' '' '',
'CEPCT' '利润中心描述' '' '' '' '',
'SEGMENT' '产业公司' 'X' '' '' '',
'NAME' '产业公司描述' '' '' '' ''.
  PERFORM FILLFIELD.
  IF P1 NE 'X'.
    IF P2 = 'X'
      AND P_CX = 'X'.
      EDIT = 'X'.
    ENDIF.
    PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'BELNR' '凭证' 'X' '' 'X' '',
'GJAHR' '年度' '' '' '' '',
'ZBZJLXZE' '已计提保证金利息' '' '' '' '',
'ZBYJT' '本月计提利息' '' '' '' '',
'BUDAT' '计提日期' '' '' '' EDIT,
'MONAT' '计提期间' '' '' '' '',
'JTTIM' '计提时间' '' '' '' '',
'JTBELNR' '上一条计提凭证' '' '' 'X' '',
'JTGJAHR' '上一条计提年度' '' '' '' '',
'CXBELNR' '冲销凭证' 'X' '' 'X' '',
'CXGJAHR' '冲销年度' '' '' '' ''.
  ENDIF.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'ERDAT' '创建日期' '' '' '' '',
'ERTIM' '创建时间' '' '' '' '',
'ERNAM' '创建人' '' '' '' '',
'ZDATE' '更新日期' '' '' '' '',
'ZTIME' '更新时间' '' '' '' '',
'ZNAME' '更新人' '' '' '' ''.
  LOOP AT FIELDCAT INTO WA_FIELD.
    CASE WA_FIELD-FIELDNAME.
      WHEN 'BUDAT' OR 'ZCKDQR' OR 'ZCKRQ'.
        WA_FIELD-REF_FIELDNAME = 'ERDAT'.
        WA_FIELD-REF_TABNAME = 'VBAK'.
      WHEN 'PRCTR'.
        WA_FIELD-REF_FIELDNAME = 'PRCTR'.
        WA_FIELD-REF_TABNAME = 'CEPC'.
      WHEN 'ZPAYBA'.
        WA_FIELD-REF_FIELDNAME = 'KUNNR'.
        WA_FIELD-REF_TABNAME = 'KNA1'.
      WHEN 'BZJE' OR 'WRBTR'.
        WA_FIELD-DECIMALS_OUT = 2.
      WHEN 'ZDEPORA'.
        WA_FIELD-DECIMALS_OUT = 5.
    ENDCASE.
    MODIFY FIELDCAT FROM WA_FIELD TRANSPORTING REF_FIELDNAME REF_TABNAME DECIMALS_OUT.
  ENDLOOP.
  PERFORM ALVFM(ZPUBFORM) TABLES ITAB FIELDCAT USING 'X' ''.
ENDFORM.
FORM SET_STATUS USING RT_EXTAB TYPE SLIS_T_EXTAB.
  DATA LT_EXFCODE TYPE TABLE OF SY-UCOMM.
  CASE 'X'.
    WHEN P1.
      APPEND 'BUT03' TO LT_EXFCODE.
      APPEND 'BUT02' TO LT_EXFCODE.
      APPEND 'BUT04' TO LT_EXFCODE.
      APPEND 'BUT05' TO LT_EXFCODE.
    WHEN P2.
      APPEND 'BUT01' TO LT_EXFCODE.
      CASE 'X'.
        WHEN P_GZ.
          APPEND 'BUT03' TO LT_EXFCODE.
        WHEN P_CX.
          APPEND 'BUT02' TO LT_EXFCODE.
          APPEND 'BUT04' TO LT_EXFCODE.
          APPEND 'BUT05' TO LT_EXFCODE.
      ENDCASE.
    WHEN P3.
      APPEND 'BUT01' TO LT_EXFCODE.
      APPEND 'BUT02' TO LT_EXFCODE.
      APPEND 'BUT03' TO LT_EXFCODE.
      APPEND 'BUT04' TO LT_EXFCODE.
      APPEND 'BUT05' TO LT_EXFCODE.
  ENDCASE.
  SET PF-STATUS 'STANDARD' EXCLUDING LT_EXFCODE.
ENDFORM. "set_status
FORM TOP_OF_PAGE.
  DATA:IT_LIST_COMMENTARY TYPE SLIS_T_LISTHEADER,
       WA_LIST_COMMENTARY TYPE SLIS_LISTHEADER,
       SJTMS              TYPE NUMC10.
  CLEAR:WA_LIST_COMMENTARY,SJTMS.
  REFRESH:IT_LIST_COMMENTARY.

  SJTMS = LINES( ITAB ).
  PERFORM DELZERO(ZPUBFORM) CHANGING SJTMS.

  WA_LIST_COMMENTARY-TYP = 'S'.
  WA_LIST_COMMENTARY-KEY = '条目数:'.
  WA_LIST_COMMENTARY-INFO = SJTMS.
  APPEND WA_LIST_COMMENTARY TO IT_LIST_COMMENTARY.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = IT_LIST_COMMENTARY[]
    EXCEPTIONS
      OTHERS             = 1.
ENDFORM.
FORM USER_COMMAND USING R_UCOMM LIKE SY-UCOMM
                        RS_SELFIELD TYPE SLIS_SELFIELD.
  DATA WA LIKE LINE OF ITAB.
  FIELD-SYMBOLS:<FS1> TYPE ANY,
                <FS2> TYPE ANY.
  CASE R_UCOMM.
    WHEN '&IC1'.
      CHECK RS_SELFIELD-TABINDEX <> 0 . "小计行总计行什么的忽略
      READ TABLE ITAB INTO WA INDEX RS_SELFIELD-TABINDEX.
      CASE RS_SELFIELD-FIELDNAME.
        WHEN 'CHBOX'.
        WHEN 'BELNR' OR 'CXBELNR' OR 'JTBELNR'.
          ASSIGN COMPONENT RS_SELFIELD-FIELDNAME OF STRUCTURE WA TO <FS1>.
          CHECK SY-SUBRC = 0.
          CASE RS_SELFIELD-FIELDNAME.
            WHEN 'BELNR'.
              ASSIGN COMPONENT 'GJAHR' OF STRUCTURE WA TO <FS2>.
            WHEN 'CXBELNR'.
              ASSIGN COMPONENT 'CXGJAHR' OF STRUCTURE WA TO <FS2>.
            WHEN 'JTBELNR'.
              ASSIGN COMPONENT 'JTGJAHR' OF STRUCTURE WA TO <FS2>.
          ENDCASE.
          CHECK SY-SUBRC = 0.
          PERFORM FB03(ZPUBFORM) USING <FS1> <FS2> P_BUKRS ''.
      ENDCASE.
    WHEN 'BUT01'."保存
      LOOP AT ITAB WHERE ICON IS NOT INITIAL.
        EXIT.
      ENDLOOP.
      IF SY-SUBRC EQ 0.
        MESSAGE E000(OO) WITH '数据已上传/存在错误，请查看'.
      ENDIF.
      PERFORM BUT01.
    WHEN 'BUT02'."过账
      LOOP AT ITAB WHERE BELNR IS NOT INITIAL.
        EXIT.
      ENDLOOP.
      IF SY-SUBRC EQ 0.
        MESSAGE E000(OO) WITH '请选择未过账数据，利润中心必填'.
      ENDIF.
      PERFORM BUT02.
    WHEN 'BUT03'."冲销
      READ TABLE ITAB WITH KEY SEL = 'X'.
      IF SY-SUBRC NE 0.
        MESSAGE E000(OO) WITH '请选择数据'.
      ENDIF.
      LOOP AT ITAB WHERE SEL = 'X'
                      AND BELNR IS INITIAL.
        MESSAGE E000(OO) WITH '请勿选择已过账数据'.
      ENDLOOP.
      PERFORM BUT03.
    WHEN 'BUT04'."删除
      READ TABLE ITAB WITH KEY SEL = 'X'.
      IF SY-SUBRC NE 0.
        MESSAGE E000(OO) WITH '请选择数据'.
      ENDIF.
      LOOP AT ITAB WHERE SEL = 'X'.
        SELECT SINGLE COUNT(*)
          FROM ZTFI0002
          WHERE BUKRS = P_BUKRS
          AND   ZPIHAO = ITAB-ZPIHAO
          AND   CX NE 'X'.
        IF SY-SUBRC EQ 0.
          MESSAGE E000(OO) WITH '批号' ITAB-ZPIHAO '已有计提记录,请勿删除'.
        ENDIF.
      ENDLOOP.
      PERFORM BUT04.
    WHEN 'BUT05'.
      READ TABLE ITAB WITH KEY SEL = 'X'.
      IF SY-SUBRC NE 0.
        MESSAGE E000(OO) WITH '请选择数据'.
      ENDIF.
*      LOOP AT ITAB WHERE SEL = 'X'.
*        SELECT SINGLE COUNT(*)
*          FROM ZTFI0002
*          WHERE BUKRS = P_BUKRS
*          AND   ZPIHAO = ITAB-ZPIHAO
*          AND   CX NE 'X'.
*        IF SY-SUBRC EQ 0.
*          MESSAGE E000(OO) WITH '批号' ITAB-ZPIHAO '已有计提记录,请勿修改'.
*        ENDIF.
*      ENDLOOP.
      PERFORM BUT05.
  ENDCASE.
  RS_SELFIELD-ROW_STABLE = 'X'.
  RS_SELFIELD-COL_STABLE = 'X'.
  RS_SELFIELD-REFRESH = 'X'.
ENDFORM.
FORM BUT05.
  LOOP AT ITAB WHERE SEL = 'X'.
    CLEAR:*ZSFI201,ZSFI201,*ZBSED_P.
    SELECT SINGLE *
      INTO CORRESPONDING FIELDS OF ZSFI201
      FROM ZBSED_P
      WHERE ZPIHAO = ITAB-ZPIHAO
      AND   BUKRS = P_BUKRS.
    IF SY-SUBRC EQ 0.
      MOVE-CORRESPONDING ITAB TO *ZSFI201.
      IF ZSFI201 NE *ZSFI201.
        MOVE-CORRESPONDING ITAB TO *ZBSED_P.
        *ZBSED_P-ZDATE = SY-DATUM.
        *ZBSED_P-ZTIME = SY-UZEIT.
        *ZBSED_P-ZNAME = SY-UNAME.
        UPDATE ZBSED_P FROM *ZBSED_P.
      ENDIF.
    ENDIF.
  ENDLOOP.
  COMMIT WORK.
*刷新界面
  PERFORM GETDATA.
  MESSAGE  '保存成功' TYPE 'S'.
ENDFORM.
FORM FILLFIELD .
  DATA:EDIT TYPE CHAR1.
  CLEAR EDIT.
  IF P2 = 'X'
    AND P_GZ = 'X'.
    EDIT = 'X'.
  ENDIF.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'ZPAYBA' '付款行' 'X' '' '' EDIT,
'PRCTR' '利润中心' 'X' '' '' EDIT,
'BZJE' '保证金金额' '' '' '' EDIT,
'WRBTR' '票据金额' '' '' '' EDIT,
'WAERS' '货币' '' '' '' '',
'ZCKRQ' '存款日期' '' '' '' EDIT,
'ZCKDQR' '存款到期日' '' '' '' EDIT,
'ZDEPORA' '存款利率' '' '' '' EDIT.
ENDFORM.                    " FILLFIELD
FORM BUT04.
  LOOP AT ITAB WHERE SEL = 'X'.
    DELETE FROM ZBSED_P WHERE ZPIHAO = ITAB-ZPIHAO.
    COMMIT WORK.
    DELETE ITAB.
  ENDLOOP.
  MESSAGE '更新成功' TYPE 'S'.
ENDFORM.
FORM BUT03.
  DATA:BEGIN OF IT_BELNR OCCURS 0.
         INCLUDE STRUCTURE BKPF_KEY.
  DATA:  BUDAT TYPE BUDAT,
       END OF IT_BELNR,
       MSG TYPE BAPI_MSG,
       WA  LIKE LINE OF ITAB.
  CLEAR:IT_BELNR[],MSG,WA.
  LOOP AT ITAB WHERE SEL = 'X'
                  AND BELNR IS NOT INITIAL.
    CLEAR:IT_BELNR.
    MOVE-CORRESPONDING ITAB TO IT_BELNR.
    COLLECT IT_BELNR.
  ENDLOOP.
  LOOP AT IT_BELNR.
    PERFORM FB08(ZPUBFORM) USING IT_BELNR-BELNR
                                 IT_BELNR-GJAHR
                                 IT_BELNR-BUKRS
                                 P_STGRD
                                 IT_BELNR-BUDAT
                        CHANGING MSG.
    IF MSG+0(1) = 'S'.
      LOOP AT ITAB WHERE BELNR = IT_BELNR-BELNR
                     AND  GJAHR = IT_BELNR-GJAHR
                     AND  BUKRS = IT_BELNR-BUKRS.
        ITAB-CXBELNR = MSG+2(10).
        ITAB-CXGJAHR = IT_BELNR-BUDAT+0(4).
        ITAB-JTBELNR = IT_BELNR-BELNR.
        ITAB-JTGJAHR = IT_BELNR-GJAHR.
        ITAB-ICON = GREEN.
        CLEAR:ITAB-BELNR,ITAB-GJAHR,ITAB-BUDAT,ITAB-JTTIM,ITAB-MONAT.
        MODIFY ITAB.
      ENDLOOP.
      UPDATE ZTFI0002
      SET  CX = 'X'
           CXBELNR = MSG+2(10)
           CXGJAHR = IT_BELNR-BUDAT+0(4)
      WHERE BUKRS = IT_BELNR-BUKRS
        AND BELNR = IT_BELNR-BELNR
        AND GJAHR = IT_BELNR-GJAHR.
      COMMIT WORK.
      LOOP AT ITAB WHERE BELNR = IT_BELNR-BELNR
                     AND  GJAHR = IT_BELNR-GJAHR
                     AND  BUKRS = IT_BELNR-BUKRS.
        ITAB-ICON = RED.
        ITAB-MSG = MSG.
        MODIFY ITAB.
      ENDLOOP.
    ELSE.
      LOOP AT ITAB WHERE BELNR = IT_BELNR-BELNR
                     AND  GJAHR = IT_BELNR-GJAHR
                     AND  BUKRS = IT_BELNR-BUKRS.
        ITAB-ICON = RED.
        ITAB-MSG = MSG.
        MODIFY ITAB.
      ENDLOOP.
    ENDIF.
  ENDLOOP.
ENDFORM.
FORM BUT01.
  DATA:IT_ZBSED_P TYPE TABLE OF ZBSED_P WITH HEADER LINE.
  DATA:ZNUMBER TYPE ZTNUMS_UPDATE-ZNUMBER10.
  CLEAR:IT_ZBSED_P[].
  LOOP AT ITAB WHERE ICON IS INITIAL.
    CLEAR:IT_ZBSED_P,ZNUMBER.
    CALL FUNCTION 'ZNUMS_UPDATE'
      EXPORTING
        REPID    = SY-REPID
*       WERKS    =
        TCODE    = SY-TCODE
        FLAG     = 'D'
*       INITNUM  =
        WEISHU   = 2
      IMPORTING
        ZNUMBER  = ZNUMBER
      EXCEPTIONS
        OVERFLOW = 1
        OTHERS   = 2.
    CONCATENATE SY-DATUM ZNUMBER INTO ITAB-ZPIHAO.
    ITAB-ERDAT = SY-DATUM.
    ITAB-ERTIM = SY-UZEIT.
    ITAB-ERNAM = SY-UNAME.
    MOVE-CORRESPONDING ITAB TO IT_ZBSED_P.
    APPEND IT_ZBSED_P.
    ITAB-ICON = GREEN.
    ITAB-MSG = '保存成功'.
    MODIFY ITAB.
  ENDLOOP.
  CHECK IT_ZBSED_P[] IS NOT INITIAL.
  MODIFY ZBSED_P FROM TABLE IT_ZBSED_P.
  COMMIT WORK.
  MESSAGE '执行完成' TYPE 'S'.
ENDFORM.
FORM BUT02.
  DATA:INTAB TYPE TABLE OF ZSFMS_FIPOST WITH HEADER LINE.
  DATA:DATUM1 TYPE SY-DATUM,
       DATUM2 TYPE SY-DATUM,
       WRBTR  TYPE ZTFI0002-WRBTR,
       WA     LIKE LINE OF ITAB.
  CLEAR:IT_ZTFI0002[],INTAB[].
  LOOP AT ITAB.
    CLEAR:INTAB,DATUM1,DATUM2,DAYS,WRBTR.
    CALL FUNCTION 'FIMA_DATE_CREATE'
      EXPORTING
        I_DATE                  = SY-DATUM
        I_SET_LAST_DAY_OF_MONTH = 'X'
      IMPORTING
        E_DATE                  = DATUM2.
    DATUM1 = SY-DATUM+0(6) && '01'.
    IF ITAB-ZCKRQ+0(6) = SY-DATUM+0(6).
      CALL FUNCTION 'HR_99S_INTERVAL_BETWEEN_DATES'
        EXPORTING
          BEGDA = ITAB-ZCKRQ
          ENDDA = DATUM2
        IMPORTING
          DAYS  = DAYS.
    ELSE.
      IF ITAB-ZCKDQR+0(6) NE SY-DATUM+0(6).
        DAYS = DATUM2+6(2).
      ENDIF.
    ENDIF.
    WRBTR = DAYS * ITAB-BZJE * ITAB-ZDEPORA / 36000.
    INTAB-BSCHL = '01'.
    INTAB-DMBTR = WRBTR.
    INTAB-NEWKO = '1132000000'.
    INTAB-ZUONR = ITAB-ZPIHAO.
*    INTAB-SGTXT = ITAB-ACCOU..
    INTAB-KUNNR = ITAB-ZPAYBA.
    APPEND INTAB.
    CLEAR INTAB.
    INTAB-BSCHL = '50'.
    INTAB-DMBTR = WRBTR.
    INTAB-HKONT = '6603020100'.
    INTAB-ZUONR = ITAB-ZPIHAO.
*    INTAB-SGTXT = ITAB-ACCOU.
    INTAB-PRCTR = ITAB-PRCTR.
*    INTAB-SEGMENT = ''.
    APPEND INTAB.
    ITAB-DMBTR = WRBTR.
    MODIFY ITAB.
  ENDLOOP.
  CLEAR WA.
  READ TABLE ITAB  INTO WA INDEX 1.
  CALL FUNCTION 'ZFMS_13_FIPOST'
    EXPORTING
      BUKRS = P_BUKRS
      BKTXT = 'ZSFMS_FIPOST'
      BUDAT = P_BUDAT
      BLART = 'DR'
      WAERS = WA-WAERS
      BLDAT = P_BLDAT
    IMPORTING
      BELNR = WA-BELNR
      RTMSG = WA-MSG
    TABLES
      INTAB = INTAB.
  IF WA-BELNR IS NOT INITIAL.
    LOOP AT ITAB.
      CLEAR:IT_ZTFI0002.
      ITAB-ICON = GREEN.
      ITAB-BELNR = WA-BELNR.
      ITAB-MSG = WA-MSG.
      ITAB-GJAHR = P_BUDAT+0(4).
      ITAB-MONAT = P_BUDAT+4(2).
      ITAB-JTTIM = SY-UZEIT.
      ITAB-BUDAT = P_BUDAT.
      IT_ZTFI0002-BUKRS = P_BUKRS.
      IT_ZTFI0002-BELNR = ITAB-BELNR.
      IT_ZTFI0002-GJAHR = ITAB-GJAHR.
      IT_ZTFI0002-JTTIM = ITAB-JTTIM.
      IT_ZTFI0002-ZPIHAO = ITAB-ZPIHAO.
      IT_ZTFI0002-WRBTR = ITAB-DMBTR.
      IT_ZTFI0002-BUDAT = P_BUDAT.
      IT_ZTFI0002-MONAT = ITAB-MONAT.
      IT_ZTFI0002-ZDATE = SY-DATUM.
      IT_ZTFI0002-ZTIME = SY-UZEIT.
      IT_ZTFI0002-ZNAME = SY-UNAME.
      APPEND IT_ZTFI0002.
      MODIFY ITAB.
    ENDLOOP.

    INSERT ZTFI0002 FROM TABLE IT_ZTFI0002.
    COMMIT WORK.
  ELSE.
    WA-ICON = RED.
    LOOP AT ITAB.
      MODIFY ITAB FROM WA TRANSPORTING MSG ICON.
    ENDLOOP.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form FILLDATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM FILLDATA .
  CLEAR:IT_ZTFI0002A[].
  IT_ZTFI0002A[] = IT_ZTFI0002[].
  DELETE IT_ZTFI0002A WHERE CX NE 'X'.
  DELETE IT_ZTFI0002 WHERE CX EQ 'X'.
  SORT IT_ZTFI0002A BY ZPIHAO BELNR DESCENDING.
  SORT IT_ZTFI0002 BY ZPIHAO.
  LOOP AT ITAB.
    CLEAR:ITAB-ZBZJLXZE,ITAB-ZBYJT.
    READ TABLE IT_ZTFI0002 WITH KEY ZPIHAO = ITAB-ZPIHAO BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      TABIX = SY-TABIX.
      LOOP AT IT_ZTFI0002 FROM TABIX.
        IF IT_ZTFI0002-ZPIHAO NE ITAB-ZPIHAO.
          EXIT.
        ENDIF.
        ITAB-ZBZJLXZE = ITAB-ZBZJLXZE + IT_ZTFI0002-WRBTR.
        IF ITAB-BELNR IS INITIAL.
          IF IT_ZTFI0002-BUDAT+0(6) EQ SY-DATUM+0(6).
            ITAB-ZBYJT = ITAB-ZBYJT + IT_ZTFI0002-WRBTR.
          ENDIF.
        ELSE.
          IF ITAB-BUDAT+0(6) EQ IT_ZTFI0002-BUDAT+0(6).
            ITAB-ZBYJT = ITAB-ZBYJT + IT_ZTFI0002-WRBTR.
          ENDIF.
        ENDIF.
      ENDLOOP.
    ENDIF.
    IF ITAB-BELNR IS NOT INITIAL.
      READ TABLE IT_ZTFI0002A WITH KEY ZPIHAO = ITAB-ZPIHAO BINARY SEARCH.
      IF SY-SUBRC EQ 0.
        ITAB-JTBELNR = IT_ZTFI0002A-BELNR.
        ITAB-JTGJAHR = IT_ZTFI0002A-GJAHR.
        ITAB-CXBELNR = IT_ZTFI0002A-CXBELNR.
        ITAB-CXGJAHR = IT_ZTFI0002A-CXGJAHR.
      ENDIF.
    ENDIF.

    MODIFY ITAB.
  ENDLOOP.
ENDFORM.
