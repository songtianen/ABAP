*&---------------------------------------------------------------------*
*& Report ZMMD203
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZMMD203 MESSAGE-ID ZGP_MSG.
TABLES:SSCRFIELDS.
TYPE-POOLS:SLIS.
DATA:FIELDCAT TYPE SLIS_T_FIELDCAT_ALV.
DATA:IT_UPLOAD TYPE TABLE OF ZSMM_219 WITH HEADER LINE,
     IT_EBELN  TYPE TABLE OF EKBEL WITH HEADER LINE.
TYPES: BEGIN OF TY_UPYF ,
         BUKRS  TYPE BUKRS,
         EBELN  TYPE EBELN,
         EBELP  TYPE EBELP,
         MENGE  TYPE MENGE_D,
         WRBTR  TYPE WRBTR,
         MWSKZ  TYPE MWSKZ,
         KSCHL  TYPE DRSEG-KSCHL,
         LIFNR  TYPE LIFNR,
         ZEBELN TYPE ZEBELN,
       END OF TY_UPYF.
DATA:IT_UPYF    TYPE TABLE OF TY_UPYF WITH HEADER LINE.
"     it_zmmd204 type table of ty_upyf with header line.
DATA:BEGIN OF ITAB OCCURS 0.
       INCLUDE TYPE ZSMM_219.
DATA:  ICON       TYPE CHAR4,
       SMBLN      TYPE MSEG-SMBLN,
       GJAHR      TYPE MSEG-GJAHR,
       MJAHR      TYPE MSEG-MJAHR,
       MBLNR_MSEG TYPE MSEG-MBLNR,
       MJAHR_MSEG TYPE MSEG-MBLNR,
       ZEILE_MSEG TYPE MSEG-MBLNR,
       INVOICENO  TYPE BAPI_INCINV_FLD-INV_DOC_NO,
       TAXCODE    TYPE KBETR,
       KSCHL      TYPE DRSEG-KSCHL,
       MEINS      TYPE MEINS,
       LIFNR      TYPE LIFNR,
       SEL,
     END OF ITAB.
DATA:RETURN       TYPE TABLE OF BAPIRET2 WITH HEADER LINE.

*& Luzhenhua
DATA: BEGIN OF IT_ZMMD204 OCCURS 0,
        BUKRS  TYPE BUKRS,
        EBELN  TYPE EBELN,
        EBELP  TYPE EBELP,
        MENGE  TYPE MENGE_D,
        WRBTR  TYPE WRBTR,
        MWSKZ  TYPE MWSKZ,
        KSCHL  TYPE DRSEG-KSCHL,
        MEINS  TYPE MEINS,
        LIFNR  TYPE LIFNR,
        ZEBELN TYPE ZEBELN,
      END OF IT_ZMMD204.


SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE T1.
  PARAMETERS:P_CGFP RADIOBUTTON GROUP GRD1 USER-COMMAND SINGLECLICK DEFAULT 'X' MODIF ID M1,
             P_YFFP RADIOBUTTON GROUP GRD1 MODIF ID M1.
SELECTION-SCREEN END OF BLOCK B1.

SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE T2.
  PARAMETERS:P_SEL  AS CHECKBOX MODIF ID M2.
SELECTION-SCREEN END OF BLOCK B2.

SELECTION-SCREEN FUNCTION KEY :1.

INITIALIZATION.
  T1 = '功能选择'.
  T2 = '剪切板上传'.
  SSCRFIELDS-FUNCTXT_01 = '@14@导出模板'.
  %_P_SEL_%_APP_%-TEXT = '复制到剪切板（勿复制标题）'.
  %_P_CGFP_%_APP_%-TEXT = '采购发票导入'.
  %_P_YFFP_%_APP_%-TEXT = '运费发票导入'.
  "zmmd204调用时用
  IMPORT IT_ZMMD204[] FROM MEMORY ID 'M1'.
*  free memory id 'ZMMD204'.

AT SELECTION-SCREEN.
  CASE SSCRFIELDS-UCOMM.
    WHEN 'FC01'.
      PERFORM DCMB."导出模板
  ENDCASE.

AT SELECTION-SCREEN OUTPUT.

START-OF-SELECTION.
  PERFORM CHECKINPUT.
  PERFORM SAVELOG(ZREPLOG) USING SY-REPID '' IF FOUND.
  IF P_CGFP = 'X'.
    PERFORM GETDATA.
  ELSE.
    PERFORM GETDATA_YF.
  ENDIF.
  PERFORM UPDATELOG(ZREPLOG) IF FOUND.
  PERFORM ALVSHOW.

FORM GETDATA.
  "检查上传数据
  CLEAR:ITAB,ITAB[],IT_EBELN[].
  LOOP AT IT_UPLOAD.
    DATA(TABIX) = SY-TABIX.
    DO 8 TIMES.
      ASSIGN COMPONENT SY-INDEX OF STRUCTURE IT_UPLOAD TO FIELD-SYMBOL(<FS_UP>).
      IF SY-SUBRC EQ 0 AND <FS_UP> IS INITIAL.
        PERFORM INMSG(ZPUBFORM) TABLES RETURN USING 'ZGP_MSG' 'E' '008' TABIX '' '' ''.
      ENDIF.
    ENDDO.
    CLEAR: ITAB,IT_EBELN.
    MOVE-CORRESPONDING IT_UPLOAD TO ITAB.
    IT_EBELN-EBELN = ITAB-EBELN.
    COLLECT: IT_EBELN.
    APPEND ITAB.
  ENDLOOP.
  DELETE IT_EBELN WHERE EBELN IS INITIAL.
  IF ITAB[] IS INITIAL
         OR IT_EBELN[] IS INITIAL.
    MESSAGE S009 DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
  SORT IT_EBELN BY EBELN.
*取采购订单
  SELECT EKPO~EBELN,
         EKPO~EBELP,
         EKPO~MATNR,
         EKPO~WERKS,
         EKPO~MWSKZ,
         EKKO~LIFNR,
         EKKO~ZHTH,
         EKKO~ZHTYF,
         EKKO~ZHTLX,
         EKKO~BUKRS,
         EKKO~KNUMV,
         LFA1~NAME1 AS NAMEL,
         MAKT~MAKTX
    INTO TABLE @DATA(LT_KOPO)
    FROM EKPO INNER JOIN EKKO ON EKPO~EBELN = EKKO~EBELN
              INNER JOIN LFA1 ON EKKO~LIFNR = LFA1~LIFNR
              INNER JOIN MAKT ON EKPO~MATNR = MAKT~MATNR
                             AND MAKT~SPRAS = @SY-LANGU
    FOR ALL ENTRIES IN @IT_EBELN
    WHERE EKPO~EBELN = @IT_EBELN-EBELN
    AND   EKKO~FRGKE = 'R'
    AND   EKKO~LOEKZ NE 'X'
    AND   EKKO~MEMORY EQ @SPACE
    AND   EKPO~LOEKZ NE 'X'.
  SORT LT_KOPO BY EBELN EBELP.
  REFRESH IT_EBELN.

  LOOP AT ITAB.
    READ TABLE LT_KOPO INTO DATA(LW_KOPO) WITH KEY EBELN = ITAB-EBELN EBELP = ITAB-EBELP BINARY SEARCH.
    IF SY-SUBRC NE 0.
      PERFORM INMSG(ZPUBFORM) TABLES RETURN USING 'ZGP_MSG' 'E' '010' ITAB-EBELN ITAB-EBELP '' ''.
    ENDIF.
    IT_EBELN-EBELN = ITAB-EBELN.
    IT_EBELN-EBELP = ITAB-EBELP.
    COLLECT :IT_EBELN.
  ENDLOOP.
  IF RETURN[] IS NOT INITIAL.
    PERFORM SHOWMSG(ZPUBFORM) TABLES RETURN.
    STOP.
  ENDIF.
*查找未冲销的物料凭证
  IF IT_EBELN[] IS NOT INITIAL.
    SORT IT_EBELN BY EBELN EBELP.
    SELECT
 MSEG~EBELN,
 MSEG~EBELP,
 MSEG~MBLNR,
 MSEG~MJAHR,
 MSEG~ZEILE,
 MSEG~BWART,
 CX~SMBLN,
 CX~SJAHR,
 CX~SMBLP,
 CX~BWART AS BWART_CX
INTO TABLE @DATA(LT_101)
 FROM MSEG
 LEFT JOIN MSEG AS CX ON MSEG~MJAHR = CX~SJAHR AND  MSEG~MBLNR = CX~SMBLN AND MSEG~ZEILE = CX~SMBLP
FOR ALL ENTRIES IN @IT_EBELN
WHERE MSEG~EBELN = @IT_EBELN-EBELN
      AND MSEG~EBELP = @IT_EBELN-EBELP
      AND MSEG~BWART = '101'.
    DELETE LT_101 WHERE SMBLN IS   NOT INITIAL.
  ENDIF.
  SORT LT_101 BY MBLNR ZEILE.
  LOOP AT ITAB.
    READ TABLE LT_101 INTO DATA(LW_101) WITH KEY MBLNR = ITAB-MBLNR ZEILE = ITAB-ZEILE BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      ITAB-MBLNR_MSEG = LW_101-MBLNR.
      ITAB-SMBLN = LW_101-SMBLN.
      ITAB-ZEILE_MSEG = LW_101-ZEILE.
      ITAB-MJAHR_MSEG = LW_101-MJAHR.
      ITAB-MJAHR = LW_101-MJAHR.
    ENDIF.
    IF ITAB-SMBLN IS INITIAL.
      ITAB-ICON = '@5B@'.
    ENDIF.
    PERFORM GETTAX(ZPUBFORM) USING '' ITAB-MWSKZ CHANGING ITAB-TAXCODE.
    MODIFY ITAB.
  ENDLOOP.
  SORT ITAB BY EBELN MBLNR ZEILE.
ENDFORM.

FORM GETDATA_YF.
  DATA:BEGIN OF ITAB_HZ OCCURS 0,
         BUKRS TYPE BUKRS,
         EBELN TYPE EBELN,
         EBELP TYPE EBELP,
         MENGE TYPE MENGE_D,
         WRBTR TYPE WRBTR,
         MWSKZ TYPE MWSKZ,
         KSCHL TYPE DRSEG-KSCHL,
         MEINS TYPE MEINS,
*新增 Luzhenhua
         LIFNR TYPE LIFNR,
       END OF ITAB_HZ.
  "检查上传数据
  CLEAR:IT_EBELN[],ITAB_HZ[].
  LOOP AT IT_UPYF.
    IF  IT_ZMMD204[] IS  INITIAL. "Luzhenhua
      DATA(TABIX) = SY-TABIX.
      DO 6 TIMES.
        ASSIGN COMPONENT SY-INDEX OF STRUCTURE IT_UPYF TO FIELD-SYMBOL(<FS_UP>).
        IF SY-SUBRC EQ 0 AND <FS_UP> IS INITIAL.
          PERFORM INMSG(ZPUBFORM) TABLES RETURN USING 'ZGP_MSG' 'E' '008' TABIX '' '' ''.
        ENDIF.
      ENDDO.
    ENDIF.
    CLEAR: ITAB_HZ,IT_EBELN.
    MOVE-CORRESPONDING IT_UPYF TO ITAB_HZ.
    IT_EBELN-EBELN = ITAB_HZ-EBELN.
    COLLECT:ITAB_HZ,IT_EBELN.
  ENDLOOP.
  MOVE-CORRESPONDING ITAB_HZ[] TO ITAB[].
  DELETE IT_EBELN WHERE EBELN IS INITIAL.
  IF ITAB[] IS INITIAL
         OR IT_EBELN[] IS INITIAL.
    MESSAGE S009 DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
*取采购订单
  SELECT EKPO~EBELN,
         EKPO~EBELP,
         EKPO~MATNR,
         EKPO~WERKS,
         EKPO~MWSKZ,
         EKKO~LIFNR,
         EKKO~ZHTH,
         EKKO~ZHTYF,
         EKKO~ZHTLX,
         EKKO~BUKRS,
         EKKO~KNUMV,
         LFA1~NAME1 AS NAMEL,
         MAKT~MAKTX
    INTO TABLE @DATA(LT_KOPO)
    FROM EKPO INNER JOIN EKKO ON EKPO~EBELN = EKKO~EBELN
              INNER JOIN LFA1 ON EKKO~LIFNR = LFA1~LIFNR
              INNER JOIN MAKT ON EKPO~MATNR = MAKT~MATNR
                             AND MAKT~SPRAS = @SY-LANGU
    FOR ALL ENTRIES IN @IT_EBELN
    WHERE EKPO~EBELN = @IT_EBELN-EBELN
    AND   EKKO~FRGKE = 'R'
    AND   EKKO~LOEKZ NE 'X'
    AND   EKKO~MEMORY EQ @SPACE
    AND   EKPO~LOEKZ NE 'X'.
  SORT LT_KOPO BY EBELN EBELP.
  REFRESH IT_EBELN.

  LOOP AT ITAB.
    READ TABLE LT_KOPO INTO DATA(LW_KOPO) WITH KEY EBELN = ITAB-EBELN EBELP = ITAB-EBELP BINARY SEARCH.
    IF SY-SUBRC NE 0.
      PERFORM INMSG(ZPUBFORM) TABLES RETURN USING 'ZGP_MSG' 'E' '010' ITAB-EBELN ITAB-EBELP '' ''.
    ENDIF.
    IT_EBELN-EBELN = ITAB-EBELN.
    IT_EBELN-EBELP = ITAB-EBELP.
    COLLECT :IT_EBELN.
  ENDLOOP.
  IF RETURN[] IS NOT INITIAL.
    PERFORM SHOWMSG(ZPUBFORM) TABLES RETURN.
    STOP.
  ENDIF.
*查找未冲销的采购订单
  IF IT_EBELN[] IS NOT INITIAL.
    SORT IT_EBELN BY EBELN EBELP.
    SELECT
   MSEG~EBELN,
   MSEG~EBELP,
   MSEG~MBLNR,
   MSEG~MJAHR,
   MSEG~ZEILE,
   MSEG~BWART,
   CX~SMBLN,
   CX~SJAHR,
   CX~SMBLP,
   CX~BWART AS BWART_CX
  INTO TABLE @DATA(LT_101)
   FROM MSEG
   LEFT JOIN MSEG AS CX ON MSEG~MJAHR = CX~SJAHR AND  MSEG~MBLNR = CX~SMBLN AND MSEG~ZEILE = CX~SMBLP
  FOR ALL ENTRIES IN @IT_EBELN
  WHERE MSEG~EBELN = @IT_EBELN-EBELN
        AND MSEG~EBELP = @IT_EBELN-EBELP
        AND MSEG~BWART = '101'.
    DELETE LT_101 WHERE SMBLN IS NOT INITIAL.
  ENDIF.
  SORT LT_101 BY EBELN EBELP.

  LOOP AT ITAB.
    READ TABLE LT_101 INTO DATA(LW_101) WITH KEY EBELN = ITAB-EBELN EBELP = ITAB-EBELP BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      ITAB-ICON = '@5B@'.
    ENDIF.
    PERFORM GETTAX(ZPUBFORM) USING '' ITAB-MWSKZ CHANGING ITAB-TAXCODE.
    MODIFY ITAB.
  ENDLOOP.

  LOOP AT IT_UPYF WHERE ZEBELN IS NOT INITIAL.
    EXIT.
  ENDLOOP.
  IF SY-SUBRC EQ 0.
    LOOP AT ITAB.
      ITAB-ZEBELN = IT_UPYF-ZEBELN.
      MODIFY ITAB.
    ENDLOOP.
  ENDIF.

ENDFORM.

FORM ALVSHOW.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'ICON' '指示' '' '' '' '' ,
'BUKRS' '公司' '' '' '' '' ,
'EBELN' '采购订单号' '' '' '' '' ,
'EBELP' '采购订单行号' '' '' '' '' .
  IF P_CGFP = 'X'.
    PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'MBLNR' '物料凭证号' '' '' '' '' ,
'ZEILE' '项目' '' '' '' '' .
  ENDIF.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'MENGE' '发票数量' '' '' '' '' ,
'WRBTR' '金额' '' '' '' '' ,
'ZEBELN' '发票号' '' '' '' '' ,
'BKTXT' '差异原因' '' '' '' '' ,
'MWSKZ' '税码' '' '' '' '' ,
'TAXCODE' '税率' '' '' '' '' .
  IF P_CGFP = 'X'.
    PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'SMBLN' 'MSEG冲销凭证' '' '' '' '' ,
'MBLNR_MSEG' 'MSEG凭证' '' '' '' '' .
  ENDIF.
  PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
'INVOICENO' '凭证号' '' '' '' '' .
  IF P_YFFP = 'X'.
    PERFORM INIT_FIELDCAT(ZPUBFORM) TABLES FIELDCAT USING:
  'KSCHL' '条件类型' '' '' '' '' ,
  'LIFNR' '供应商' '' '' '' '' .
  ENDIF.
  PERFORM ALVFM(ZPUBFORM) TABLES ITAB FIELDCAT USING 'X' ''.
ENDFORM.
FORM SET_STATUS USING RT_EXTAB TYPE SLIS_T_EXTAB.
  DATA LT_EXFCODE TYPE TABLE OF SY-UCOMM.
  SET PF-STATUS 'STANDARD' EXCLUDING LT_EXFCODE.
ENDFORM. "set_status
FORM TOP_OF_PAGE.
  DATA:IT_LIST_COMMENTARY TYPE SLIS_T_LISTHEADER,
       WA_LIST_COMMENTARY TYPE SLIS_LISTHEADER,
       SJTMS              TYPE I.
  CLEAR:WA_LIST_COMMENTARY,SJTMS.
  REFRESH:IT_LIST_COMMENTARY.

  SJTMS = LINES( ITAB ).

  WA_LIST_COMMENTARY-TYP = 'S'.
  WA_LIST_COMMENTARY-KEY = '条目数:'.
  WA_LIST_COMMENTARY-INFO = SJTMS.
  APPEND WA_LIST_COMMENTARY TO IT_LIST_COMMENTARY.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      IT_LIST_COMMENTARY = IT_LIST_COMMENTARY[]
    EXCEPTIONS
      OTHERS             = 1.
ENDFORM.
FORM USER_COMMAND USING R_UCOMM LIKE SY-UCOMM
                        RS_SELFIELD TYPE SLIS_SELFIELD.
  DATA WA LIKE LINE OF ITAB.
  CLEAR:WA.
  CASE R_UCOMM.
    WHEN '&IC1'.
      CHECK RS_SELFIELD-TABINDEX <> 0 . "小计行总计行什么的忽略
      READ TABLE ITAB INTO WA INDEX RS_SELFIELD-TABINDEX.
      CASE RS_SELFIELD-FIELDNAME.
*        WHEN 'MATNR'.
*          PERFORM mm03(zpubform) USING wa-matnr.
*        WHEN 'BELNR'.
*          PERFORM mir4(zpubform) USING wa-belnr wa-gjahr.
        WHEN 'SMBLN'.
          PERFORM MIR4(ZPUBFORM) USING WA-SMBLN WA-GJAHR.
        WHEN 'MBLNR_MSEG'.
          PERFORM MIGO(ZPUBFORM) USING WA-MBLNR WA-MJAHR.
        WHEN 'EBELN'.
          PERFORM ME23N(ZPUBFORM) USING WA-EBELN.
      ENDCASE.
    WHEN 'BUT01'."保存
      SORT ITAB BY EBELN MBLNR ZEILE.
      PERFORM BUT01.

  ENDCASE.
  RS_SELFIELD-ROW_STABLE = 'X'.
  RS_SELFIELD-COL_STABLE = 'X'.
  RS_SELFIELD-REFRESH = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form dcmb
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DCMB.
  DATA:LV_RC TYPE I.
  DATA:BEGIN OF WA_COPY,
         TEXT TYPE CHAR2048,
       END OF WA_COPY.
  DATA : LT_COPY LIKE TABLE OF WA_COPY.
  DATA(CC) = CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.
  CLEAR: WA_COPY,LT_COPY.
  IF P_CGFP = 'X'.
    CONCATENATE '公司' CC '采购订单号' CC '采购订单行号' CC '物料凭证号' CC '项目' CC '发票数量'
    CC '金额' CC '税码' CC '发票号' CC '差异原因' INTO WA_COPY-TEXT.
  ELSE.
    CONCATENATE '公司' CC '采购订单号' CC '采购订单行号' CC '发票数量'
    CC '金额' CC '税码' CC '条件类型' CC '供应商' CC '发票号' CC '差异原因' INTO WA_COPY-TEXT.
  ENDIF.
  APPEND WA_COPY TO LT_COPY.
  CALL METHOD CL_GUI_FRONTEND_SERVICES=>CLIPBOARD_EXPORT
    IMPORTING
      DATA                 = LT_COPY
    CHANGING
      RC                   = LV_RC
    EXCEPTIONS
      CNTL_ERROR           = 1
      ERROR_NO_GUI         = 2
      NOT_SUPPORTED_BY_GUI = 3
      OTHERS               = 4.
  IF SY-SUBRC = 0.
    MESSAGE S000(OO) WITH '已经把表头复制到剪贴板,可以打开一个Excel文件然后粘贴'.
  ELSE.
    MESSAGE E000(OO) WITH '复制到剪贴板失败'.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form checkinput
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CHECKINPUT .
  IF P_SEL NE 'X'.
    MESSAGE S000(OO) WITH '请复制到剪切板后勾选' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
  IF P_CGFP = 'X'.
    PERFORM CLIPTOITAB(ZPUBFORM) TABLES IT_UPLOAD.
  ELSE.
    IF IT_ZMMD204[] IS INITIAL."zmmd104调用时通过submit传入
      PERFORM CLIPTOITAB(ZPUBFORM) TABLES IT_UPYF.
    ELSE.
*      it_upyf[] = it_zmmd204[].
      IT_UPYF[] = CORRESPONDING #( IT_ZMMD204[] ).
    ENDIF.
  ENDIF.
  IF IT_UPLOAD[] IS INITIAL AND IT_UPYF[] IS INITIAL.
    MESSAGE S000(OO) WITH '上传无数据' DISPLAY LIKE 'E'.
    STOP.
  ENDIF.
ENDFORM.

FORM BUT01.
  DATA: RBLGP            TYPE RBLGP,
        HEADERDATA       TYPE BAPI_INCINV_CREATE_HEADER,
        INVOICEDOCNUMBER TYPE BAPI_INCINV_FLD-INV_DOC_NO,
        FISCALYEAR       TYPE BAPI_INCINV_FLD-FISC_YEAR,
        IT_EBELN         TYPE TABLE OF EKBEL WITH HEADER LINE,
        RETURN           TYPE TABLE OF BAPIRET2 WITH HEADER LINE,
        GLACCOUNTDATA    TYPE TABLE OF BAPI_INCINV_CREATE_GL_ACCOUNT WITH HEADER LINE,
        ITEMDATA         TYPE TABLE OF BAPI_INCINV_CREATE_ITEM WITH HEADER LINE,
        ACCOUNTINGDATA   TYPE TABLE OF BAPI_INCINV_CREATE_ACCOUNT WITH HEADER LINE,
        EXTENSIONIN      TYPE TABLE OF BAPIPAREX WITH HEADER LINE.
  DATA:BELNR TYPE  RBKP-BELNR,
       GJAHR TYPE  GJAHR,
       DMBTR TYPE DMBTR,
       RTMSG TYPE BAPI_MSG.
  CLEAR:BELNR,RBLGP,HEADERDATA,INVOICEDOCNUMBER,FISCALYEAR,GJAHR,RTMSG.
  DATA:BEGIN OF WA_ZMMD203,
         INVOICEDOCNUMBER TYPE BAPI_INCINV_FLD-INV_DOC_NO,
         FISCALYEAR       TYPE BAPI_INCINV_FLD-FISC_YEAR,
       END OF WA_ZMMD203.
  REFRESH:GLACCOUNTDATA,ITEMDATA,RETURN,IT_EBELN,EXTENSIONIN.
CLEAR:DMBTR.
  READ TABLE ITAB INDEX 1.
  HEADERDATA-INVOICE_IND = 'X'.
  HEADERDATA-DOC_TYPE = 'RE'.
  HEADERDATA-DOC_DATE = SY-DATUM.
  HEADERDATA-PSTNG_DATE = SY-DATUM.
  HEADERDATA-BLINE_DATE = SY-DATUM.
  HEADERDATA-COMP_CODE = ITAB-BUKRS.
  HEADERDATA-CURRENCY = 'CNY'.
  HEADERDATA-CALC_TAX_IND = 'X'."自动计算税
  HEADERDATA-PMNTTRMS = ''."付款条件
  HEADERDATA-REF_DOC_NO = ''."参考凭证编号
*  headerdata-header_txt = itab-bktxt."抬头文本
  HEADERDATA-ITEM_TEXT = ITAB-BKTXT."抬头文本
*  headerdata-gross_amount = abs( itab-wrbtr * '1.13' ).
*行项目与税
  LOOP AT ITAB WHERE ICON = '@5B@' AND INVOICENO IS INITIAL.
    CLEAR:ITEMDATA,GLACCOUNTDATA.
    ADD 1 TO RBLGP.
*    itemdata-de_cre_ind = 'X'.

    ITEMDATA-INVOICE_DOC_ITEM = RBLGP.
    ITEMDATA-PO_NUMBER = ITAB-EBELN.
    ITEMDATA-PO_ITEM = ITAB-EBELP.
    ITEMDATA-ITEM_AMOUNT = ABS( ITAB-WRBTR ).

    HEADERDATA-GROSS_AMOUNT = HEADERDATA-GROSS_AMOUNT + ITEMDATA-ITEM_AMOUNT * ITAB-TAXCODE + ITEMDATA-ITEM_AMOUNT.
    ITEMDATA-QUANTITY = ITAB-MENGE.
*    itemdata-po_unit = itab-meins.
    SELECT SINGLE MEINS
   INTO ITEMDATA-PO_UNIT
   FROM EKPO
   WHERE EBELN = ITAB-EBELN
   AND   EBELP = ITAB-EBELP.
    ITEMDATA-TAX_CODE = ITAB-MWSKZ.
    IF P_CGFP = 'X'.
*      SELECT SINGLE MEINS
*     INTO ITEMDATA-PO_UNIT
*     FROM EKPO
*     WHERE EBELN = ITAB-EBELN
*     AND   EBELP = ITAB-EBELP.
      ITEMDATA-REF_DOC = ITAB-MBLNR."参考凭证项目
      ITEMDATA-REF_DOC_YEAR = ITAB-MJAHR.
      ITEMDATA-REF_DOC_IT = ITAB-ZEILE.
    ELSE.

      ITEMDATA-COND_TYPE = ITAB-KSCHL.
*      ITEMDATA-PO_UNIT = ITAB-MEINS.
      ITEMDATA-FREIGHT_VEN = |{ ITAB-LIFNR ALPHA = IN }|.
    ENDIF.
    IF P_YFFP = 'X'.
      ACCOUNTINGDATA-INVOICE_DOC_ITEM =  RBLGP.
      ACCOUNTINGDATA-CO_AREA = 'WISD'.
      ACCOUNTINGDATA-SERIAL_NO = '02'.
      ACCOUNTINGDATA-TAX_CODE = ITAB-MWSKZ.
      ACCOUNTINGDATA-QUANTITY = ITAB-MENGE.
      ACCOUNTINGDATA-PO_UNIT = ITEMDATA-PO_UNIT.
      ACCOUNTINGDATA-ITEM_AMOUNT = ABS( ITAB-WRBTR ).
      ACCOUNTINGDATA-GL_ACCOUNT = '1123999901'.
*
*      accountingdata-xunpl = 'X'.
      APPEND ACCOUNTINGDATA.
      CLEAR ACCOUNTINGDATA.
    ENDIF.
    APPEND ITEMDATA.
  ENDLOOP.
  IF SY-SUBRC NE 0.
    MESSAGE S004 WITH '没有可以发票预制的明细行了.'.
    RETURN.
  ENDIF.
  DMBTR = HEADERDATA-GROSS_AMOUNT.
  HEADERDATA-GROSS_AMOUNT = DMBTR.

*调用BAPI
  CALL FUNCTION 'BAPI_INCOMINGINVOICE_PARK'
    EXPORTING
      HEADERDATA       = HEADERDATA
    IMPORTING
      INVOICEDOCNUMBER = INVOICEDOCNUMBER
      FISCALYEAR       = FISCALYEAR
    TABLES
      ITEMDATA         = ITEMDATA
      ACCOUNTINGDATA   = ACCOUNTINGDATA
*     glaccountdata    = glaccountdata
      RETURN           = RETURN.
  LOOP AT RETURN WHERE TYPE CA 'AEX'.
    CONCATENATE RETURN-MESSAGE RTMSG INTO RTMSG SEPARATED BY '/'.
  ENDLOOP.
  IF SY-SUBRC NE 0 AND INVOICEDOCNUMBER IS NOT INITIAL.
    BELNR = INVOICEDOCNUMBER.
    GJAHR = FISCALYEAR.
    PERFORM BAPIRUN(ZPUBFORM) USING 'S'.
    RTMSG = '发票预制成功:' && INVOICEDOCNUMBER && ',凭证年度:' && FISCALYEAR.
    LOOP AT ITAB WHERE ICON = '@5B@' AND INVOICENO IS INITIAL.
      ITAB-INVOICENO = INVOICEDOCNUMBER.
      MODIFY ITAB.
    ENDLOOP.
    "返回zmmd204结果
    CLEAR WA_ZMMD203.
    IF IT_ZMMD204[] IS NOT INITIAL.
      WA_ZMMD203-INVOICEDOCNUMBER = INVOICEDOCNUMBER.
      WA_ZMMD203-FISCALYEAR = FISCALYEAR.
      EXPORT WA_ZMMD203 TO MEMORY ID 'ZMMD203'.
    ENDIF.
    READ TABLE ITAB INDEX 1.
    UPDATE RBKP SET ZFPNO = ITAB-ZEBELN WHERE BELNR = INVOICEDOCNUMBER AND GJAHR = FISCALYEAR.
    COMMIT WORK.
    MESSAGE RTMSG TYPE 'I'.
  ELSE.
    PERFORM BAPIRUN(ZPUBFORM) USING 'E'.
    CONCATENATE 'E:' RTMSG INTO RTMSG.
*    MESSAGE rtmsg TYPE 'E'.
    PERFORM SHOWMSG(ZPUBFORM) TABLES RETURN.
  ENDIF.

ENDFORM.
