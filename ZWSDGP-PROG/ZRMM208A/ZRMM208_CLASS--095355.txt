*&---------------------------------------------------------------------*
*& Include ZRMM206_CLASS
*&---------------------------------------------------------------------*

CLASS LCL_EVENT_RECEIVER DEFINITION DEFERRED .
CLASS LCL_EVENT_RECEIVER DEFINITION.
  PUBLIC SECTION.
*9000屏幕ALV事件
    METHODS HANDLE_DOUBLE_CLICK"双击
      FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_ROW E_COLUMN ES_ROW_NO.

    METHODS HANDLE_DATA_CHANGED"数据更改
      FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
      IMPORTING ER_DATA_CHANGED.
    METHODS HANDLE_TOOLBAR"工具栏
      FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID
      IMPORTING E_OBJECT E_INTERACTIVE.
    METHODS HANDLE_COMMAND"响应事件
      FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
      IMPORTING E_UCOMM.
    METHODS HANDLE_HOTSPOT_CLICK"单点点击
      FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_ROW_ID E_COLUMN_ID.
*F4搜索帮助
    METHODS HANDLE_ON_F4 FOR EVENT ONF4 OF CL_GUI_ALV_GRID
      IMPORTING SENDER
                E_FIELDNAME
                ES_ROW_NO
                ER_EVENT_DATA.
*右击
    METHODS CONTEXT_MENU_REQUEST
      FOR EVENT CONTEXT_MENU_REQUEST OF CL_GUI_ALV_GRID
      IMPORTING E_OBJECT.
    METHODS MEMU_CHANGED
        FOR EVENT CHANGED OF CL_CTMENU.
*9001事件
    METHODS HANDLE_DOUBLE_CLICK1"双击
      FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_ROW E_COLUMN ES_ROW_NO.

    METHODS HANDLE_DATA_CHANGED1"数据更改
      FOR EVENT DATA_CHANGED OF CL_GUI_ALV_GRID
      IMPORTING ER_DATA_CHANGED.
    METHODS HANDLE_TOOLBAR1"工具栏
      FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID
      IMPORTING E_OBJECT E_INTERACTIVE.
    METHODS HANDLE_COMMAND1"响应事件
      FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID
      IMPORTING E_UCOMM.
    METHODS HANDLE_HOTSPOT_CLICK1"单点点击
      FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
      IMPORTING E_ROW_ID E_COLUMN_ID.
*F4搜索帮助
    METHODS HANDLE_ON_F41 FOR EVENT ONF4 OF CL_GUI_ALV_GRID
      IMPORTING SENDER
                E_FIELDNAME
                ES_ROW_NO
                ER_EVENT_DATA.
  PRIVATE SECTION.
ENDCLASS.                    "LCL_EVENT_RECEIVER DEFINITION
*----------------------------------------------------------------------*
*       CLASS LCL_EVENT_RECEIVER IMPLEMENTATION
*----------------------------------------------------------------------*
CLASS LCL_EVENT_RECEIVER IMPLEMENTATION.
  METHOD HANDLE_DOUBLE_CLICK.
  ENDMETHOD.                    "handle_double_click

  METHOD HANDLE_DATA_CHANGED.
    DATA:MOD_DATA    TYPE LVC_T_MODI,
         WA_MOD_DATA TYPE LVC_S_MODI.
    CLEAR:MOD_DATA,WA_MOD_DATA.
    MOD_DATA = ER_DATA_CHANGED->MT_MOD_CELLS.
    LOOP AT MOD_DATA INTO WA_MOD_DATA.
      CLEAR WA_ITEM.
      READ TABLE IT_ITEM INTO WA_ITEM INDEX WA_MOD_DATA-ROW_ID.
      CHECK SY-SUBRC = 0.
      CASE WA_MOD_DATA-FIELDNAME.
        WHEN 'LGORT'.
          CLEAR:WA_ITEM-LGOBE.
          READ TABLE IT_T001L INTO T001L WITH KEY WERKS = P_WERKS
                                              LGORT = WA_MOD_DATA-VALUE
                                              BINARY SEARCH.
          IF SY-SUBRC EQ 0.
            WA_ITEM-LGOBE = T001L-LGOBE.
          ENDIF.
        WHEN 'ZWWSL'.
          ASSIGN COMPONENT WA_MOD_DATA-FIELDNAME OF STRUCTURE WA_ITEM TO <FS>.
          IF SY-SUBRC EQ 0.
            PERFORM DELQFW CHANGING WA_MOD_DATA-VALUE.
            <FS> = WA_MOD_DATA-VALUE.
          ENDIF.
          PERFORM CALZFLZL.
        WHEN 'IDNRK'.
          SELECT SINGLE MAKTX
            INTO WA_ITEM-MAKTX1
            FROM MAKT
            WHERE MATNR = WA_MOD_DATA-VALUE
            AND   SPRAS = SY-LANGU.
*单位的逻辑
          SELECT *
            INTO MARM
            FROM MARM
            WHERE MATNR = WA_MOD_DATA-VALUE.
            IF MARM-ATINN IS NOT INITIAL.
              WA_ITEM-MEINS = MARM-MEINH.
              EXIT.
            ENDIF.
          ENDSELECT.
          IF WA_ITEM-MEINS IS INITIAL.
            SELECT SINGLE MEINS
              INTO WA_ITEM-MEINS
              FROM MARA
              WHERE MATNR = WA_MOD_DATA-VALUE.
          ENDIF.
      ENDCASE.
      MODIFY IT_ITEM FROM WA_ITEM INDEX WA_MOD_DATA-ROW_ID.
    ENDLOOP.
    PERFORM REFRESHALV.
  ENDMETHOD.                    "handle_data_changed
  METHOD HANDLE_COMMAND.
    PERFORM USER_COMMAND_CLS USING E_UCOMM.
    PERFORM REFRESHALV.
  ENDMETHOD.
  METHOD HANDLE_TOOLBAR.
    DATA: LS_TOOLBAR TYPE STB_BUTTON,
          DISABLED   TYPE CHAR1,
          DISABLED1  TYPE CHAR1.
    CLEAR: LS_TOOLBAR,DISABLED,DISABLED1.
    CASE 'X'.
      WHEN P1_X OR P2_X.
      WHEN P4_X.
        DISABLED = 'X'.
        IF WA_HEAD-ZZT = 'D'
          AND SY-TCODE = TCODE4.
        ELSE.
          DISABLED1 = 'X'.
        ENDIF.
      WHEN OTHERS.
        DISABLED = 'X'.
        DISABLED1 = 'X'.
    ENDCASE.
    LS_TOOLBAR-BUTN_TYPE = 3. " 分隔符
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    IF DISABLED NE 'X'.
      CLEAR: LS_TOOLBAR.
      LS_TOOLBAR-FUNCTION = 'ADD'.    " 功能码
      LS_TOOLBAR-ICON = '@17@'.  " 图标名称
      LS_TOOLBAR-QUICKINFO = '添加明细'.   " 图标的提示信息
      LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
      LS_TOOLBAR-DISABLED = DISABLED.        " X表示灰色，不可用
      LS_TOOLBAR-TEXT = '添加明细'.       " 按钮上显示的文本
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
      CLEAR LS_TOOLBAR.
      LS_TOOLBAR-BUTN_TYPE = 3. " 分隔符
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.

      CLEAR: LS_TOOLBAR.
      LS_TOOLBAR-FUNCTION = 'UNDEL'.    " 功能码
      LS_TOOLBAR-ICON = '@2W@'.  " 图标名称
      LS_TOOLBAR-QUICKINFO = '撤销删除'.   " 图标的提示信息
      LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
      LS_TOOLBAR-DISABLED = DISABLED.        " X表示灰色，不可用
      LS_TOOLBAR-TEXT = '撤销删除'.       " 按钮上显示的文本
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
      CLEAR LS_TOOLBAR.
      LS_TOOLBAR-BUTN_TYPE = 3. " 分隔符
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    ENDIF.
    IF DISABLED1 NE 'X'.
      CLEAR: LS_TOOLBAR.
      LS_TOOLBAR-FUNCTION = 'NEW'.    " 功能码
      LS_TOOLBAR-ICON = '@0Y@'.  " 图标名称
      LS_TOOLBAR-QUICKINFO = '添加空行'.   " 图标的提示信息
      LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
      LS_TOOLBAR-DISABLED = DISABLED1.        " X表示灰色，不可用
      LS_TOOLBAR-TEXT = '添加空行'.       " 按钮上显示的文本
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
      CLEAR: LS_TOOLBAR.
      LS_TOOLBAR-FUNCTION = 'ZCF'.    " 功能码
      LS_TOOLBAR-ICON = '@14@'.  " 图标名称
      LS_TOOLBAR-QUICKINFO = '拆分行'.   " 图标的提示信息
      LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
      LS_TOOLBAR-DISABLED = DISABLED1.        " X表示灰色，不可用
      LS_TOOLBAR-TEXT = '拆分行'.       " 按钮上显示的文本
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
      CLEAR: LS_TOOLBAR.
      LS_TOOLBAR-FUNCTION = 'DEL'.    " 功能码
      LS_TOOLBAR-ICON = '@18@'.  " 图标名称
      LS_TOOLBAR-QUICKINFO = '删除明细'.   " 图标的提示信息
      LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
      LS_TOOLBAR-DISABLED = DISABLED1.        " X表示灰色，不可用
      LS_TOOLBAR-TEXT = '删除明细'.       " 按钮上显示的文本
      APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    ENDIF.
    CLEAR: LS_TOOLBAR.
    LS_TOOLBAR-FUNCTION = 'ALL'.    " 功能码
    LS_TOOLBAR-ICON = '@4B@'.  " 图标名称
    LS_TOOLBAR-QUICKINFO = '全选'.   " 图标的提示信息
    LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
    LS_TOOLBAR-DISABLED = ''.        " X表示灰色，不可用
    LS_TOOLBAR-TEXT = '全选'.       " 按钮上显示的文本
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: LS_TOOLBAR.
    LS_TOOLBAR-FUNCTION = 'SAL'.    " 功能码
    LS_TOOLBAR-ICON = '@4D@'.  " 图标名称
    LS_TOOLBAR-QUICKINFO = '取消全选'.   " 图标的提示信息
    LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
    LS_TOOLBAR-DISABLED = ''.        " X表示灰色，不可用
    LS_TOOLBAR-TEXT = '取消全选'.       " 按钮上显示的文本
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
  ENDMETHOD.                    "HANDLE_TOOLBAR
  METHOD HANDLE_HOTSPOT_CLICK.
    FIELD-SYMBOLS:<FSE> TYPE ANY,
                  <WAE> TYPE ANY.
    CONDENSE E_ROW_ID     NO-GAPS.
    CONDENSE E_COLUMN_ID  NO-GAPS.
    READ TABLE IT_ITEM ASSIGNING <WAE> INDEX E_ROW_ID.
    ASSIGN COMPONENT E_COLUMN_ID OF STRUCTURE <WAE> TO <FSE>.
    CHECK SY-SUBRC = 0.
    IF <FSE> = 'X'.
      <FSE> = ''.
    ELSE.
      <FSE> = 'X'.
    ENDIF.
    PERFORM REFRESHALV.
  ENDMETHOD.
*F4搜索帮助
  METHOD HANDLE_ON_F4.
    CLEAR:RETURN_TAB,WA_RETURN_TAB, WA_ITEM.
    ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.
    ASSIGN ER_EVENT_DATA->M_DATA->* TO <IT_MODI>.
    READ TABLE IT_ITEM INTO WA_ITEM INDEX ES_ROW_NO-ROW_ID.
    CHECK SY-SUBRC = 0.
    CASE E_FIELDNAME.
      WHEN 'EBELN101' OR 'LGORT' OR 'IDNRK'.
        PERFORM F4HELP TABLES RETURN_TAB USING  E_FIELDNAME 'IT_ITEM' WA_ITEM.
    ENDCASE.
    IF RETURN_TAB[] IS NOT INITIAL.
      READ TABLE RETURN_TAB INTO WA_RETURN_TAB INDEX 1.
      IF SY-SUBRC EQ 0.
        WA_MODI-ROW_ID = ES_ROW_NO-ROW_ID.
        WA_MODI-FIELDNAME = E_FIELDNAME.
        WA_MODI-VALUE = WA_RETURN_TAB-FIELDVAL.
        APPEND WA_MODI TO <IT_MODI>.
      ENDIF.
    ENDIF.
    PERFORM REFRESHALV.
  ENDMETHOD.
*右击
  METHOD CONTEXT_MENU_REQUEST.
    CALL METHOD E_OBJECT->ADD_FUNCTION
      EXPORTING
        FCODE = 'HIDE'
        TEXT  = '测试右击'.
  ENDMETHOD.
  METHOD MEMU_CHANGED.

  ENDMETHOD.
*9001屏幕
  METHOD HANDLE_DOUBLE_CLICK1.
  ENDMETHOD.                    "handle_double_click

  METHOD HANDLE_DATA_CHANGED1.
  ENDMETHOD.                    "handle_data_changed
  METHOD HANDLE_COMMAND1.
    PERFORM USER_COMMAND_CLS1 USING E_UCOMM.
    PERFORM REFRESHALV9001.
  ENDMETHOD.
  METHOD HANDLE_TOOLBAR1.
    DATA: LS_TOOLBAR TYPE STB_BUTTON,
          DISABLED   TYPE CHAR1,
          DISABLED1  TYPE CHAR1.
    CLEAR: LS_TOOLBAR,DISABLED,DISABLED1.
    LS_TOOLBAR-BUTN_TYPE = 3. " 分隔符
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: LS_TOOLBAR.
    LS_TOOLBAR-FUNCTION = 'ALL'.    " 功能码
    LS_TOOLBAR-ICON = '@4B@'.  " 图标名称
    LS_TOOLBAR-QUICKINFO = '全选'.   " 图标的提示信息
    LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
    LS_TOOLBAR-DISABLED = ''.        " X表示灰色，不可用
    LS_TOOLBAR-TEXT = '全选'.       " 按钮上显示的文本
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: LS_TOOLBAR.
    LS_TOOLBAR-FUNCTION = 'SAL'.    " 功能码
    LS_TOOLBAR-ICON = '@4D@'.  " 图标名称
    LS_TOOLBAR-QUICKINFO = '取消全选'.   " 图标的提示信息
    LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
    LS_TOOLBAR-DISABLED = ''.        " X表示灰色，不可用
    LS_TOOLBAR-TEXT = '取消全选'.       " 按钮上显示的文本
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR LS_TOOLBAR.
    LS_TOOLBAR-BUTN_TYPE = 3. " 分隔符
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: LS_TOOLBAR.
    LS_TOOLBAR-FUNCTION = 'ADD'.    " 功能码
    LS_TOOLBAR-ICON = '@17@'.  " 图标名称
    LS_TOOLBAR-QUICKINFO = '添加明细'.   " 图标的提示信息
    LS_TOOLBAR-BUTN_TYPE = 0.        " 0表示正常按钮
    LS_TOOLBAR-DISABLED = DISABLED.        " X表示灰色，不可用
    LS_TOOLBAR-TEXT = '添加明细'.       " 按钮上显示的文本
    APPEND LS_TOOLBAR TO E_OBJECT->MT_TOOLBAR.
    CLEAR: LS_TOOLBAR.
  ENDMETHOD.                    "HANDLE_TOOLBAR
  METHOD HANDLE_HOTSPOT_CLICK1.
    DATA:WA LIKE LINE OF ITAB1A.
    CONDENSE E_ROW_ID     NO-GAPS.
    CONDENSE E_COLUMN_ID  NO-GAPS.
    READ TABLE ITAB1A INTO WA INDEX E_ROW_ID.
    CASE E_COLUMN_ID.
      WHEN 'CHBOX1'.
        IF WA-CHBOX1 = 'X'.
          WA-CHBOX1 = ''.
        ELSE.
          WA-CHBOX1 = 'X'.
        ENDIF.
        MODIFY ITAB1A FROM WA INDEX E_ROW_ID TRANSPORTING CHBOX1.
    ENDCASE.
    PERFORM REFRESHALV9001.
  ENDMETHOD.
*F4搜索帮助
  METHOD HANDLE_ON_F41.
    ER_EVENT_DATA->M_EVENT_HANDLED = 'X'.
    ASSIGN ER_EVENT_DATA->M_DATA->* TO <IT_MODI>.
    CASE E_FIELDNAME.
      WHEN 'EBELP'.
    ENDCASE.
*    PERFORM REFRESHALV9001.
  ENDMETHOD.
ENDCLASS.                    "LCL_EVENT_RECEIVER IMPLEMENTATION
DATA:LCL_EVENT_RECEIVER1 TYPE REF TO LCL_EVENT_RECEIVER,
     LCL_EVENT_RECEIVER2 TYPE REF TO LCL_EVENT_RECEIVER.
